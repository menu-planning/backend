"""create shared_kernel

Revision ID: b6667ac48aca
Revises: aa246f44ae83
Create Date: 2024-06-09 06:59:10.383361

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b6667ac48aca"
down_revision = "aa246f44ae83"
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute("CREATE SCHEMA IF NOT EXISTS shared_kernel")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "allergens",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_allergens")),
        schema="shared_kernel",
    )
    op.create_table(
        "cuisines",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cuisines")),
        schema="shared_kernel",
    )
    op.create_table(
        "flavors",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_flavors")),
        schema="shared_kernel",
    )
    op.create_table(
        "textures",
        sa.Column("id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_textures")),
        schema="shared_kernel",
    )
    op.add_column(
        "recipes",
        sa.Column("flavor_id", sa.String(), nullable=True),
        schema="recipes_catalog",
    )
    op.add_column(
        "recipes",
        sa.Column("texture_id", sa.String(), nullable=True),
        schema="recipes_catalog",
    )
    op.drop_constraint(
        "fk_recipes_cuisine_id_tags",
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_recipes_flavor_profile_id_tags",
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_recipes_texture_profile_id_tags",
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_recipes_texture_id_textures"),
        "recipes",
        "textures",
        ["texture_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="shared_kernel",
    )
    op.create_foreign_key(
        op.f("fk_recipes_cuisine_id_cuisines"),
        "recipes",
        "cuisines",
        ["cuisine_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="shared_kernel",
    )
    op.create_foreign_key(
        op.f("fk_recipes_flavor_id_flavors"),
        "recipes",
        "flavors",
        ["flavor_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="shared_kernel",
    )
    op.drop_column("recipes", "texture_profile_id", schema="recipes_catalog")
    op.drop_column("recipes", "flavor_profile_id", schema="recipes_catalog")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "recipes",
        sa.Column(
            "flavor_profile_id", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        schema="recipes_catalog",
    )
    op.add_column(
        "recipes",
        sa.Column(
            "texture_profile_id", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        schema="recipes_catalog",
    )
    op.drop_constraint(
        op.f("fk_recipes_flavor_id_flavors"),
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_recipes_cuisine_id_cuisines"),
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.drop_constraint(
        op.f("fk_recipes_texture_id_textures"),
        "recipes",
        schema="recipes_catalog",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_recipes_texture_profile_id_tags",
        "recipes",
        "tags",
        ["texture_profile_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="recipes_catalog",
    )
    op.create_foreign_key(
        "fk_recipes_flavor_profile_id_tags",
        "recipes",
        "tags",
        ["flavor_profile_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="recipes_catalog",
    )
    op.create_foreign_key(
        "fk_recipes_cuisine_id_tags",
        "recipes",
        "tags",
        ["cuisine_id"],
        ["id"],
        source_schema="recipes_catalog",
        referent_schema="recipes_catalog",
    )
    op.drop_column("recipes", "texture_id", schema="recipes_catalog")
    op.drop_column("recipes", "flavor_id", schema="recipes_catalog")
    op.drop_table("textures", schema="shared_kernel")
    op.drop_table("flavors", schema="shared_kernel")
    op.drop_table("cuisines", schema="shared_kernel")
    op.drop_table("allergens", schema="shared_kernel")
    # ### end Alembic commands ###
    op.execute("DROP SCHEMA IF EXISTS shared_kernel")

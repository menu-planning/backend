"""remove author_role columns from entities

Revision ID: 0fcb6d02ae1c
Revises: a5daf24b2dff
Create Date: 2024-03-30 18:14:14.236172

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0fcb6d02ae1c"
down_revision = "a5daf24b2dff"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("roles", "is_default", schema="iam")
    op.drop_constraint(
        "fk_users_role_id_roles", "users", schema="iam", type_="foreignkey"
    )
    op.drop_column("users", "role_id", schema="iam")
    op.execute(
        """
        DELETE FROM iam.roles
        """
    )
    op.add_column(
        "roles", sa.Column("context", sa.String(), nullable=True), schema="iam"
    )
    op.alter_column(
        "roles",
        "permissions",
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        existing_nullable=False,
        schema="iam",
    )
    op.execute(
        """
    INSERT INTO iam.roles (name, context, permissions)
    VALUES ('administrator', 'IAM', 'manage_users, manage_roles, view_audit_log')
    """
    )
    op.execute("ALTER TABLE iam.roles DROP CONSTRAINT pk_roles")
    op.execute(
        "ALTER TABLE iam.roles ADD CONSTRAINT pk_roles_name_context PRIMARY KEY (name, context)"
    )
    op.create_table(
        "user_role_association",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("role_name", sa.String(), nullable=False),
        sa.Column("role_context", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_name", "role_context"],
            ["iam.roles.name", "iam.roles.context"],
            name=op.f("fk_user_role_association_role_name_roles"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["iam.users.id"],
            name=op.f("fk_user_role_association_user_id_users"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id",
            "role_name",
            "role_context",
            name=op.f("pk_user_role_association"),
        ),
        schema="iam",
    )
    op.drop_column("brands", "author_role", schema="products_catalog")
    op.drop_column("sources", "author_role", schema="products_catalog")
    op.drop_column("tags", "author_role", schema="products_catalog")
    op.drop_column("recipes", "author_role", schema="recipes_catalog")
    op.drop_column("tags", "author_role", schema="recipes_catalog")
    op.execute(
        """
    INSERT INTO iam.user_role_association (user_id, role_name, role_context)
    SELECT id, 'administrator', 'IAM' FROM iam.users
    """
    )

    # Insert new row into roles table with specified values
    op.execute("ALTER TABLE iam.roles ALTER COLUMN context SET NOT NULL")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tags",
        sa.Column("author_role", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="recipes_catalog",
    )
    op.add_column(
        "recipes",
        sa.Column("author_role", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="recipes_catalog",
    )
    op.add_column(
        "tags",
        sa.Column("author_role", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="products_catalog",
    )
    op.add_column(
        "sources",
        sa.Column("author_role", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="products_catalog",
    )
    op.add_column(
        "brands",
        sa.Column("author_role", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="products_catalog",
    )
    op.add_column(
        "users",
        sa.Column("role_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        schema="iam",
    )
    op.create_foreign_key(
        "fk_users_role_id_roles",
        "users",
        "roles",
        ["role_id"],
        ["name"],
        source_schema="iam",
        referent_schema="iam",
    )
    op.add_column(
        "roles",
        sa.Column("is_default", sa.BOOLEAN(), autoincrement=False, nullable=False),
        schema="iam",
    )
    op.alter_column(
        "roles",
        "permissions",
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        schema="iam",
    )
    op.drop_column("roles", "context", schema="iam")
    op.drop_table("user_role_association", schema="iam")
    # ### end Alembic commands ###

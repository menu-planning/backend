"""add brand_id column to products table

Revision ID: 250f49357130
Revises: cdd3ea46ba29
Create Date: 2024-03-19 16:39:25.970809

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "250f49357130"
down_revision = "cdd3ea46ba29"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "products",
        sa.Column("brand_id", sa.String(), nullable=True),
        schema="products_catalog",
    )
    op.drop_index(
        "ix_products_catalog_products_brand",
        table_name="products",
        schema="products_catalog",
    )
    op.create_index(
        op.f("ix_products_catalog_products_brand_id"),
        "products",
        ["brand_id"],
        unique=False,
        schema="products_catalog",
    )
    op.create_foreign_key(
        op.f("fk_products_brand_id_tags"),
        "products",
        "tags",
        ["brand_id"],
        ["id"],
        source_schema="products_catalog",
        referent_schema="products_catalog",
    )
    # op.execute(
    #     f"""
    #     INSERT INTO products_catalog.tags (id, name, author_id, author_role, description, created_at, updated_at, discarded, version, type)
    #     SELECT
    #         gen_random_uuid(),
    #         brand,
    #         '1',
    #         'administrator',
    #         NULL,
    #         now(),
    #         now(),
    #         FALSE,
    #         1,
    #         'brand'
    #     FROM (
    #         SELECT DISTINCT brand
    #         FROM products_catalog.products
    #         WHERE brand IS NOT NULL
    #     ) AS distinct_values
    #     """
    # )
    # op.execute(
    #     """
    #     UPDATE products_catalog.products
    #     SET brand_id = (
    #         SELECT id FROM products_catalog.tags
    #         WHERE tags.name = products_catalog.products.brand
    #         AND tags.type = 'brand'
    #     )
    #     """
    # )
    op.drop_column("products", "brand", schema="products_catalog")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "products",
        sa.Column("brand", sa.VARCHAR(), autoincrement=False, nullable=True),
        schema="products_catalog",
    )
    op.drop_constraint(
        op.f("fk_products_brand_id_tags"),
        "products",
        schema="products_catalog",
        type_="foreignkey",
    )
    op.drop_index(
        op.f("ix_products_catalog_products_brand_id"),
        table_name="products",
        schema="products_catalog",
    )
    op.create_index(
        "ix_products_catalog_products_brand",
        "products",
        ["brand"],
        unique=False,
        schema="products_catalog",
    )
    op.drop_column("products", "brand_id", schema="products_catalog")
    # ### end Alembic commands ###

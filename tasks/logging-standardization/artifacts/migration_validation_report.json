{
  "timestamp": "1756564324.083113",
  "migration_completeness": {
    "migration_complete": false,
    "remaining_standard_imports": 13,
    "remaining_get_logger_usage": 13,
    "structlog_adoptions": 4,
    "remaining_logger_calls": 440,
    "files_with_standard_imports": [
      "src/contexts/client_onboarding/config.py",
      "src/contexts/client_onboarding/core/adapters/security/webhook_signature_validator.py",
      "src/contexts/client_onboarding/core/adapters/validators/ownership_validator.py",
      "src/contexts/client_onboarding/core/services/command_handlers/delete_onboarding_form.py",
      "src/contexts/client_onboarding/core/services/command_handlers/update_webhook_url.py",
      "src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py",
      "src/contexts/client_onboarding/core/services/command_handlers/setup_onboarding_form.py",
      "src/contexts/client_onboarding/core/services/client_identifier_extractor.py",
      "src/contexts/client_onboarding/core/services/integrations/typeform/client.py",
      "src/contexts/client_onboarding/core/services/webhooks/security.py",
      "src/contexts/client_onboarding/core/services/webhooks/processor.py",
      "src/contexts/client_onboarding/core/services/webhooks/manager.py",
      "src/logging/logger.py"
    ],
    "files_with_get_logger": [
      "src/contexts/client_onboarding/config.py",
      "src/contexts/client_onboarding/core/adapters/security/webhook_signature_validator.py",
      "src/contexts/client_onboarding/core/adapters/validators/ownership_validator.py",
      "src/contexts/client_onboarding/core/services/command_handlers/delete_onboarding_form.py",
      "src/contexts/client_onboarding/core/services/command_handlers/update_webhook_url.py",
      "src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py",
      "src/contexts/client_onboarding/core/services/command_handlers/setup_onboarding_form.py",
      "src/contexts/client_onboarding/core/services/client_identifier_extractor.py",
      "src/contexts/client_onboarding/core/services/integrations/typeform/client.py",
      "src/contexts/client_onboarding/core/services/webhooks/security.py",
      "src/contexts/client_onboarding/core/services/webhooks/processor.py",
      "src/contexts/client_onboarding/core/services/webhooks/manager.py",
      "src/logging/logger.py"
    ],
    "files_with_structlog": [
      "src/contexts/shared_kernel/middleware/auth/authentication.py",
      "src/contexts/shared_kernel/middleware/error_handling/exception_handler.py",
      "src/contexts/shared_kernel/middleware/logging/structured_logger.py",
      "src/logging/logger.py"
    ]
  },
  "correlation_id_preservation": {
    "correlation_id_preserved": true,
    "context_variable_usage": 6,
    "files_with_correlation_id": [
      "src/contexts/shared_kernel/middleware/auth/authentication.py",
      "src/contexts/shared_kernel/middleware/error_handling/exception_handler.py",
      "src/contexts/shared_kernel/middleware/error_handling/error_response.py",
      "src/contexts/shared_kernel/middleware/logging/structured_logger.py",
      "src/contexts/seedwork/shared/adapters/repositories/repository_exceptions.py",
      "src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py",
      "src/contexts/seedwork/shared/adapters/repositories/repository_logger.py",
      "src/contexts/client_onboarding/core/services/integrations/typeform/client.py",
      "src/contexts/client_onboarding/aws_lambda/delete_form.py",
      "src/contexts/client_onboarding/aws_lambda/update_form.py",
      "src/contexts/client_onboarding/aws_lambda/webhook_processor.py",
      "src/contexts/client_onboarding/aws_lambda/create_form.py",
      "src/contexts/client_onboarding/aws_lambda/query_responses.py",
      "src/contexts/client_onboarding/aws_lambda/bulk_query_responses.py",
      "src/contexts/products_catalog/aws_lambda/get_product_source_name_by_id.py",
      "src/contexts/products_catalog/aws_lambda/fetch_product.py",
      "src/contexts/products_catalog/aws_lambda/search_product_similar_name.py",
      "src/contexts/products_catalog/aws_lambda/create_product.py",
      "src/contexts/products_catalog/aws_lambda/get_product_by_id.py",
      "src/contexts/products_catalog/aws_lambda/fetch_product_source_name.py",
      "src/contexts/iam/aws_lambda/create_user.py",
      "src/contexts/iam/aws_lambda/assign_role.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/create_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/fetch_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/rate_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/copy_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/get_recipe_by_id.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/update_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/recipe/delete_recipe.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/create_meal.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/get_meal_by_id.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/update_meal.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/fetch_meal.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/delete_meal.py",
      "src/contexts/recipes_catalog/aws_lambda/meal/copy_meal.py",
      "src/contexts/recipes_catalog/aws_lambda/client/delete_menu.py",
      "src/contexts/recipes_catalog/aws_lambda/client/update_menu.py",
      "src/contexts/recipes_catalog/aws_lambda/client/delete_client.py",
      "src/contexts/recipes_catalog/aws_lambda/client/fetch_client.py",
      "src/contexts/recipes_catalog/aws_lambda/client/create_client.py",
      "src/contexts/recipes_catalog/aws_lambda/client/create_menu.py",
      "src/contexts/recipes_catalog/aws_lambda/client/update_client.py",
      "src/contexts/recipes_catalog/aws_lambda/client/get_client_by_id.py",
      "src/contexts/recipes_catalog/aws_lambda/tag/fetch_tag.py",
      "src/contexts/recipes_catalog/aws_lambda/tag/get_tag_by_id.py",
      "src/contexts/recipes_catalog/aws_lambda/shopping_list/fetch_recipe.py",
      "src/logging/logger.py"
    ],
    "files_with_correlation_ctx": [
      "src/contexts/shared_kernel/middleware/auth/authentication.py",
      "src/contexts/shared_kernel/middleware/error_handling/exception_handler.py",
      "src/contexts/shared_kernel/middleware/logging/structured_logger.py",
      "src/contexts/seedwork/shared/adapters/repositories/repository_logger.py",
      "src/contexts/client_onboarding/core/services/integrations/typeform/client.py",
      "src/logging/logger.py"
    ]
  },
  "log_message_quality": {
    "structured_logging_usage": 0,
    "old_format_usage": 0,
    "quality_score": 0.0
  },
  "performance_impact": {
    "benchmark_tools_available": true,
    "benchmark_files": [
      "benchmark_logging.py",
      "baseline_measurements.json"
    ],
    "performance_validated": false,
    "performance_impact_percent": null
  },
  "linting_validation": {
    "linting_passed": false,
    "exit_code": 1,
    "output": "UP011 [*] Unnecessary parentheses to `functools.lru_cache`\n  --> src/config/api_config.py:63:11\n   |\n63 | @lru_cache()\n   |           ^^\n64 | def get_api_settings() -> APISettings:\n65 |     return APISettings()\n   |\nhelp: Remove unnecessary parentheses\n\nUP011 [*] Unnecessary parentheses to `functools.lru_cache`\n  --> src/config/app_config.py:48:11\n   |\n48 | @lru_cache()\n   |           ^^\n49 | def get_app_settings() -> APPSettings:\n50 |     return APPSettings()\n   |\nhelp: Remove unnecessary parentheses\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/config/feature_flags.py:1:1\n  |\n1 | / import os\n2 | | from functools import lru_cache\n3 | | from typing import Dict, Any\n4 | |\n5 | | from pydantic import Field, field_validator\n6 | | from pydantic_settings import BaseSettings, SettingsConfigDict\n  | |______________________________________________________________^\n  |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/config/feature_flags.py:3:1\n  |\n1 | import os\n2 | from functools import lru_cache\n3 | from typing import Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | from pydantic import Field, field_validator\n  |\n\nW293 Blank line contains whitespace\n  --> src/config/feature_flags.py:12:1\n   |\n10 |     \"\"\"\n11 |     Feature flags for API Schema Standardization rollout.\n12 |     \n   | ^^^^\n13 |     Controls context-by-context rollout of schema pattern standardization\n14 |     across all 5 contexts. Each context can be independently enabled/disabled\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/config/feature_flags.py:16:1\n   |\n14 |     across all 5 contexts. Each context can be independently enabled/disabled\n15 |     for safe incremental deployment.\n16 |     \n   | ^^^^\n17 |     Environment Variables:\n18 |     - SCHEMA_STANDARDIZATION_ENABLED: Master toggle for all schema standardization\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:27:1\n   |\n25 |     - SCHEMA_ROLLBACK_MODE: Enable automatic rollback on errors\n26 |     \"\"\"\n27 |     \n   | ^^^^\n28 |     model_config = SettingsConfigDict(env_prefix=\"SCHEMA_STANDARDIZATION_\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:29:1\n   |\n28 |     model_config = SettingsConfigDict(env_prefix=\"SCHEMA_STANDARDIZATION_\")\n29 |     \n   | ^^^^\n30 |     # Master feature flag - must be True for any context to use standardization\n31 |     enabled: bool = Field(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:35:1\n   |\n33 |         description=\"Master toggle for schema standardization across all contexts\"\n34 |     )\n35 |     \n   | ^^^^\n36 |     # Context-specific feature flags for incremental rollout\n37 |     seedwork_enabled: bool = Field(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:41:1\n   |\n39 |         description=\"Enable schema standardization for Seedwork context (foundation layer)\"\n40 |     )\n41 |     \n   | ^^^^\n42 |     shared_kernel_enabled: bool = Field(\n43 |         default=False,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:46:1\n   |\n44 |         description=\"Enable schema standardization for Shared Kernel context\"\n45 |     )\n46 |     \n   | ^^^^\n47 |     iam_enabled: bool = Field(\n48 |         default=False,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:51:1\n   |\n49 |         description=\"Enable schema standardization for IAM context (authentication/authorization)\"\n50 |     )\n51 |     \n   | ^^^^\n52 |     products_catalog_enabled: bool = Field(\n53 |         default=False,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:56:1\n   |\n54 |         description=\"Enable schema standardization for Products Catalog context\"\n55 |     )\n56 |     \n   | ^^^^\n57 |     recipes_catalog_enabled: bool = Field(\n58 |         default=False,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:61:1\n   |\n59 |         description=\"Enable schema standardization for Recipes Catalog context\"\n60 |     )\n61 |     \n   | ^^^^\n62 |     # Validation and safety settings\n63 |     validation_mode: str = Field(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:67:1\n   |\n65 |         description=\"Validation strictness: strict/lenient/disabled\"\n66 |     )\n67 |     \n   | ^^^^\n68 |     rollback_mode: bool = Field(\n69 |         default=True,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:72:1\n   |\n70 |         description=\"Enable automatic rollback on schema validation errors\"\n71 |     )\n72 |     \n   | ^^^^\n73 |     # Performance and monitoring settings\n74 |     performance_monitoring_enabled: bool = Field(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:78:1\n   |\n76 |         description=\"Enable detailed performance monitoring for schema operations\"\n77 |     )\n78 |     \n   | ^^^^\n79 |     compliance_logging_enabled: bool = Field(\n80 |         default=True,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:83:1\n   |\n81 |         description=\"Enable detailed compliance logging for audit purposes\"\n82 |     )\n83 |     \n   | ^^^^\n84 |     # Testing and debugging\n85 |     debug_mode: bool = Field(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:89:1\n   |\n87 |         description=\"Enable debug mode for schema standardization (development only)\"\n88 |     )\n89 |     \n   | ^^^^\n90 |     @field_validator(\"validation_mode\")\n91 |     @classmethod\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/config/feature_flags.py:97:1\n   |\n95 |             raise ValueError(f\"validation_mode must be one of {allowed_modes}\")\n96 |         return v\n97 |     \n   | ^^^^\n98 |     def is_context_enabled(self, context_name: str) -> bool:\n99 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/config/feature_flags.py:101:1\n    |\n 99 |         \"\"\"\n100 |         Check if schema standardization is enabled for a specific context.\n101 |         \n    | ^^^^^^^^\n102 |         Args:\n103 |             context_name: Name of the context (seedwork, shared_kernel, iam, \n    |\nhelp: Remove whitespace from blank line\n\nW291 Trailing whitespace\n   --> src/config/feature_flags.py:103:77\n    |\n102 |         Args:\n103 |             context_name: Name of the context (seedwork, shared_kernel, iam, \n    |                                                                             ^\n104 |                          products_catalog, recipes_catalog)\n    |\nhelp: Remove trailing whitespace\n\nW293 Blank line contains whitespace\n   --> src/config/feature_flags.py:105:1\n    |\n103 |             context_name: Name of the context (seedwork, shared_kernel, iam, \n104 |                          products_catalog, recipes_catalog)\n105 |         \n    | ^^^^^^^^\n106 |         Returns:\n107 |             bool: True if both master flag and context flag are enabled\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:111:1\n    |\n109 |         if not self.enabled:\n110 |             return False\n111 |             \n    | ^^^^^^^^^^^^\n112 |         context_flag_map = {\n113 |             \"seedwork\": self.seedwork_enabled,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:119:1\n    |\n117 |             \"recipes_catalog\": self.recipes_catalog_enabled\n118 |         }\n119 |         \n    | ^^^^^^^^\n120 |         return context_flag_map.get(context_name, False)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:121:1\n    |\n120 |         return context_flag_map.get(context_name, False)\n121 |     \n    | ^^^^\n122 |     def get_enabled_contexts(self) -> list[str]:\n123 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/config/feature_flags.py:125:1\n    |\n123 |         \"\"\"\n124 |         Get list of all currently enabled contexts.\n125 |         \n    | ^^^^^^^^\n126 |         Returns:\n127 |             list[str]: List of enabled context names\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:131:1\n    |\n129 |         if not self.enabled:\n130 |             return []\n131 |             \n    | ^^^^^^^^^^^^\n132 |         enabled_contexts = []\n133 |         context_checks = [\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:140:1\n    |\n138 |             (\"recipes_catalog\", self.recipes_catalog_enabled)\n139 |         ]\n140 |         \n    | ^^^^^^^^\n141 |         for context_name, is_enabled in context_checks:\n142 |             if is_enabled:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:144:1\n    |\n142 |             if is_enabled:\n143 |                 enabled_contexts.append(context_name)\n144 |                 \n    | ^^^^^^^^^^^^^^^^\n145 |         return enabled_contexts\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/config/feature_flags.py:146:1\n    |\n145 |         return enabled_contexts\n146 |     \n    | ^^^^\n147 |     def get_rollout_status(self) -> Dict[str, Any]:\n148 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/config/feature_flags.py:147:37\n    |\n145 |         return enabled_contexts\n146 |     \n147 |     def get_rollout_status(self) -> Dict[str, Any]:\n    |                                     ^^^^\n148 |         \"\"\"\n149 |         Get comprehensive rollout status for monitoring and reporting.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/config/feature_flags.py:150:1\n    |\n148 |         \"\"\"\n149 |         Get comprehensive rollout status for monitoring and reporting.\n150 |         \n    | ^^^^^^^^\n151 |         Returns:\n152 |             Dict[str, Any]: Status information including enabled contexts,\n    |\nhelp: Remove whitespace from blank line\n\nUP011 [*] Unnecessary parentheses to `functools.lru_cache`\n   --> src/config/feature_flags.py:168:11\n    |\n168 | @lru_cache()\n    |           ^^\n169 | def get_schema_standardization_flags() -> SchemaStandardizationFeatureFlags:\n170 |     \"\"\"Get cached feature flags instance.\"\"\"\n    |\nhelp: Remove unnecessary parentheses\n\nW291 [*] Trailing whitespace\n   --> src/config/feature_flags.py:175:50\n    |\n174 | # Global instance for easy access throughout the application\n175 | schema_flags = get_schema_standardization_flags() \n    |                                                  ^\n    |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n   --> src/config/feature_flags.py:175:51\n    |\n174 | # Global instance for easy access throughout the application\n175 | schema_flags = get_schema_standardization_flags() \n    |                                                   ^\n    |\nhelp: Add trailing newline\n\nW291 [*] Trailing whitespace\n --> src/contexts/client_onboarding/aws_lambda/__init__.py:6:4\n  |\n4 | TypeForm integration Lambda functions for form management, webhook processing,\n5 | response queries, and health monitoring.\n6 | \"\"\" \n  |    ^\n  |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n --> src/contexts/client_onboarding/aws_lambda/__init__.py:6:5\n  |\n4 | TypeForm integration Lambda functions for form management, webhook processing,\n5 | response queries, and health monitoring.\n6 | \"\"\" \n  |     ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/bulk_query_responses.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from typing import Any\n 9 | |\n10 | | import anyio\n11 | |\n12 | | from src.contexts.client_onboarding.aws_lambda.shared import (\n13 | |     CORS_headers,\n14 | |     execute_query,\n15 | | )\n16 | | from src.contexts.client_onboarding.core import Container\n17 | | from src.contexts.client_onboarding.core.adapters import (\n18 | |     BulkResponseQueryRequest,\n19 | |     BulkResponseQueryResponse,\n20 | |     FormOwnershipValidator,\n21 | |     ResponseQueryResponse,\n22 | | )\n23 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n24 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n25 | |     aws_lambda_exception_handler_middleware,\n26 | | )\n27 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n28 | |     aws_lambda_logging_middleware,\n29 | | )\n30 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n31 |\n32 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/create_form.py:16:1\n   |\n14 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n15 |\n16 | / import anyio\n17 | |\n18 | | from src.contexts.client_onboarding.aws_lambda.shared import CORS_headers\n19 | | from src.contexts.client_onboarding.core import Container\n20 | | from src.contexts.client_onboarding.core.adapters import (\n21 | |     ApiSetupOnboardingForm,\n22 | | )\n23 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n24 | |     client_onboarding_aws_auth_middleware,\n25 | | )\n26 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n27 | |     aws_lambda_exception_handler_middleware,\n28 | | )\n29 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n30 | |     aws_lambda_logging_middleware,\n31 | | )\n32 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n33 |\n34 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/delete_form.py:14:1\n   |\n12 |   if TYPE_CHECKING:\n13 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n14 | / import anyio\n15 | |\n16 | | from src.contexts.client_onboarding.aws_lambda.shared import CORS_headers\n17 | | from src.contexts.client_onboarding.core.adapters import (\n18 | |     ApiDeleteOnboardingForm,\n19 | | )\n20 | | from src.contexts.client_onboarding.core.bootstrap.container import Container\n21 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n22 | |     client_onboarding_aws_auth_middleware,\n23 | | )\n24 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n25 | |     aws_lambda_exception_handler_middleware,\n26 | | )\n27 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n28 | |     aws_lambda_logging_middleware,\n29 | | )\n30 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n31 |\n32 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/query_responses.py:9:1\n   |\n 7 |   \"\"\"\n 8 |\n 9 | / from typing import Any\n10 | |\n11 | | import anyio\n12 | |\n13 | | from src.contexts.client_onboarding.aws_lambda.shared import (\n14 | |     CORS_headers,\n15 | |     execute_query,\n16 | | )\n17 | | from src.contexts.client_onboarding.core.adapters import (\n18 | |     FormOwnershipValidator,\n19 | | )\n20 | | from src.contexts.client_onboarding.core.adapters.api_schemas.queries import (\n21 | |     ResponseQueryRequest,\n22 | | )\n23 | | from src.contexts.client_onboarding.core.bootstrap.container import Container\n24 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n25 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n26 | |     aws_lambda_exception_handler_middleware,\n27 | | )\n28 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n29 | |     aws_lambda_logging_middleware,\n30 | | )\n31 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n32 |\n33 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/shared/query_executor.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from contextlib import suppress\n 9 | |\n10 | | from pydantic import ValidationError\n11 | |\n12 | | from src.contexts.client_onboarding.core.adapters import FormOwnershipValidator\n13 | | from src.contexts.client_onboarding.core.adapters.api_schemas.queries import (\n14 | |     FormSummary,\n15 | |     QueryType,\n16 | |     ResponseQueryRequest,\n17 | |     ResponseQueryResponse,\n18 | |     ResponseSummary,\n19 | | )\n20 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses import (\n21 | |     ClientIdentifierSet,\n22 | | )\n23 | | from src.contexts.client_onboarding.core.adapters.validators import (\n24 | |     OwnershipValidationRequest,\n25 | | )\n26 | | from src.contexts.client_onboarding.core.services.uow import UnitOfWork\n27 | | from src.logging.logger import logger\n   | |_____________________________________^\n28 |\n29 |   # Constants\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/update_form.py:18:1\n   |\n16 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n17 |\n18 | / import anyio\n19 | |\n20 | | from src.contexts.client_onboarding.aws_lambda.shared import CORS_headers\n21 | | from src.contexts.client_onboarding.core.adapters.api_schemas.commands import (\n22 | |     ApiUpdateWebhookUrl,\n23 | | )\n24 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses import (\n25 | |     FormManagementResponse,\n26 | |     FormOperationType,\n27 | | )\n28 | | from src.contexts.client_onboarding.core.bootstrap.container import Container\n29 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n30 | |     client_onboarding_aws_auth_middleware,\n31 | | )\n32 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n33 | |     aws_lambda_exception_handler_middleware,\n34 | | )\n35 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n36 | |     aws_lambda_logging_middleware,\n37 | | )\n38 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n39 |\n40 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/aws_lambda/webhook_processor.py:9:1\n   |\n 7 |   \"\"\"\n 8 |\n 9 | / import json\n10 | | from datetime import UTC, datetime\n11 | | from typing import Any\n12 | |\n13 | | import anyio\n14 | |\n15 | | from src.contexts.client_onboarding.aws_lambda.shared import CORS_headers\n16 | | from src.contexts.client_onboarding.core.adapters.api_schemas.commands import (\n17 | |     ApiProcessWebhook,\n18 | | )\n19 | | from src.contexts.client_onboarding.core.bootstrap.container import Container\n20 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n21 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n22 | |     aws_lambda_exception_handler_middleware,\n23 | | )\n24 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n25 | |     aws_lambda_logging_middleware,\n26 | | )\n27 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n28 |\n29 |   # Initialize container\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/__init__.py:8:1\n   |\n 7 |   # API Schemas - Commands\n 8 | / from src.contexts.client_onboarding.core.adapters.api_schemas.commands import (\n 9 | |     ApiDeleteOnboardingForm,\n10 | |     ApiProcessWebhook,\n11 | |     ApiSetupOnboardingForm,\n12 | |     ApiUpdateWebhookUrl,\n13 | | )\n14 | |\n15 | | # API Schemas - Queries\n16 | | from src.contexts.client_onboarding.core.adapters.api_schemas.queries.response_queries import (\n17 | |     BulkResponseQueryRequest,\n18 | |     BulkResponseQueryResponse,\n19 | |     ResponseQueryResponse,\n20 | | )\n21 | |\n22 | | # API Schemas - Responses\n23 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses.form_management import (\n24 | |     FormManagementResponse,\n25 | |     FormOperationType,\n26 | | )\n27 | |\n28 | | # API Schemas - Webhook\n29 | | from src.contexts.client_onboarding.core.adapters.api_schemas.webhook import (\n30 | |     TypeFormWebhookPayload,\n31 | |     WebhookValidationResult,\n32 | | )\n33 | |\n34 | | # External Providers\n35 | | from src.contexts.client_onboarding.core.adapters.external_providers.iam.iam_provider_api_for_client_onboarding import (\n36 | |     IAMProvider,\n37 | | )\n38 | |\n39 | | from src.contexts.client_onboarding.core.adapters.repositories.form_response_repository import (\n40 | |     FormResponseRepo,\n41 | | )\n42 | |\n43 | | # Repositories\n44 | | from src.contexts.client_onboarding.core.adapters.repositories.onboarding_form_repository import (\n45 | |     OnboardingFormRepo,\n46 | | )\n47 | |\n48 | | # Security\n49 | | from src.contexts.client_onboarding.core.adapters.security.webhook_signature_validator import (\n50 | |     WebhookSignatureValidator,\n51 | |     validate_typeform_webhook_signature,\n52 | | )\n53 | |\n54 | | # Validators\n55 | | from src.contexts.client_onboarding.core.adapters.validators.ownership_validator import (\n56 | |     FormOwnershipValidator,\n57 | | )\n   | |_^\n58 |\n59 |   __all__ = [\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/api_schemas/auth/permission_schemas.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from __future__ import annotations\n 9 | |\n10 | | from typing import Annotated, Any\n11 | |\n12 | | from pydantic import BaseModel, BeforeValidator, Field\n13 | |\n14 | | from src.contexts.client_onboarding.core.domain.enums import (\n15 | |     Permission as ClientOnboardingPermission,\n16 | | )\n17 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n18 | |     MODEL_CONFIG,\n19 | | )\n20 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n21 | |     validate_permissions_collection,\n22 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/adapters/api_schemas/commands/api_delete_onboarding_form.py:1:1\n  |\n1 | / from pydantic import Field\n2 | |\n3 | | from src.contexts.client_onboarding.core.domain.commands.delete_onboarding_form import (\n4 | |     DeleteOnboardingFormCommand,\n5 | | )\n6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n7 | |     BaseApiCommand,\n8 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/api_schemas/commands/api_process_webhook.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from pydantic import Field, field_validator\n 4 | |\n 5 | | from src.contexts.client_onboarding.core.domain.commands.process_webhook import (\n 6 | |     ProcessWebhookCommand,\n 7 | | )\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n 9 | |     BaseApiCommand,\n10 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/api_schemas/commands/api_setup_onboarding_form.py:1:1\n   |\n 1 | / from pydantic import Field, HttpUrl, field_validator\n 2 | |\n 3 | | from src.contexts.client_onboarding.core.domain.commands.setup_onboarding_form import (\n 4 | |     SetupOnboardingFormCommand,\n 5 | | )\n 6 | | from src.contexts.client_onboarding.core.services.integrations.typeform.url_parser import (\n 7 | |     TypeformUrlParser,\n 8 | | )\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n10 | |     MODEL_CONFIG,\n11 | |     BaseApiCommand,\n12 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/adapters/api_schemas/commands/api_update_webhook_url.py:1:1\n  |\n1 | / from pydantic import Field, HttpUrl\n2 | |\n3 | | from src.contexts.client_onboarding.core.domain.commands.update_webhook_url import (\n4 | |     UpdateWebhookUrlCommand,\n5 | | )\n6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n7 | |     BaseApiCommand,\n8 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/api_schemas/form_config.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from datetime import datetime\n 9 | | from typing import Any\n10 | |\n11 | | from pydantic import BaseModel, ConfigDict, Field, HttpUrl, field_validator\n12 | |\n13 | | from src.contexts.client_onboarding.core.domain.models.onboarding_form import (\n14 | |     OnboardingFormStatus,\n15 | | )\n16 | | from src.contexts.client_onboarding.core.services.integrations.typeform import (\n17 | |     TypeformUrlParser,\n18 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/api_schemas/queries/response_queries.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from datetime import datetime\n 9 | | from enum import Enum\n10 | | from typing import Any\n11 | |\n12 | | from pydantic import BaseModel, Field, field_validator\n13 | |\n14 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses import (\n15 | |     ClientIdentifierSet,\n16 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `TRY301`)\n --> src/contexts/client_onboarding/core/adapters/api_schemas/responses/form_response_data.py:1:1\n  |\n1 | # ruff: noqa: TRY301\n  | ^^^^^^^^^^^^^^^^^^^^\n2 | \"\"\"\n3 | Form Response Data Validation Schemas\n  |\nhelp: Remove unused `noqa` directive\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> src/contexts/client_onboarding/core/adapters/api_schemas/webhook/typeform_webhook_payload.py:173:17\n    |\n171 |                 datetime.fromisoformat(v.replace(\"Z\", \"+00:00\"))\n172 |             except ValueError:\n173 |                 raise ValueError(\"Date must be in ISO format\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n174 |         return v\n    |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/repositories/form_response_repository.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from sqlalchemy import select\n 9 | | from sqlalchemy.ext.asyncio import AsyncSession\n10 | |\n11 | | from src.contexts.client_onboarding.core.domain.models.form_response import FormResponse\n   | |________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/adapters/repositories/onboarding_form_repository.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from sqlalchemy import select\n 9 | | from sqlalchemy.ext.asyncio import AsyncSession\n10 | |\n11 | | from src.contexts.client_onboarding.core.domain.models.onboarding_form import (\n12 | |     OnboardingForm,\n13 | |     OnboardingFormStatus,\n14 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/bootstrap/container.py:1:1\n  |\n1 | / from dependency_injector import containers, providers\n2 | |\n3 | | from src.contexts.client_onboarding.core.bootstrap.bootstrap import bootstrap\n4 | | from src.contexts.client_onboarding.core.services.uow import UnitOfWork\n5 | | from src.contexts.client_onboarding.core.services.webhooks.manager import (\n6 | |     create_webhook_manager,\n7 | | )\n8 | | from src.db.database import async_db\n  | |____________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/domain/commands/delete_onboarding_form.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/domain/commands/process_webhook.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from typing import Any\n4 | |\n5 | | from attrs import frozen\n6 | |\n7 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/domain/commands/setup_onboarding_form.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/domain/commands/update_webhook_url.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:22:26\n   |\n20 |   @unique\n21 |   class Role(SeedRole):\n22 |       FORM_ADMINISTRATOR = {\n   |  __________________________^\n23 | |         Permission.MANAGE_ONBOARDING_FORMS,\n24 | |         Permission.VIEW_ONBOARDING_RESPONSES,\n25 | |         Permission.CONFIGURE_TYPEFORM_WEBHOOKS,\n26 | |         Permission.ACCESS_CLIENT_DATA,\n27 | |         Permission.MANAGE_FIELD_MAPPINGS,\n28 | |         Permission.VIEW_AUDIT_LOG,\n29 | |     }\n   | |_____^\n30 |       FORM_MANAGER = {\n31 |           Permission.MANAGE_ONBOARDING_FORMS,\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:30:20\n   |\n28 |           Permission.VIEW_AUDIT_LOG,\n29 |       }\n30 |       FORM_MANAGER = {\n   |  ____________________^\n31 | |         Permission.MANAGE_ONBOARDING_FORMS,\n32 | |         Permission.VIEW_ONBOARDING_RESPONSES,\n33 | |         Permission.CONFIGURE_TYPEFORM_WEBHOOKS,\n34 | |         Permission.ACCESS_CLIENT_DATA,\n35 | |     }\n   | |_____^\n36 |       FORM_VIEWER = {\n37 |           Permission.VIEW_ONBOARDING_RESPONSES,\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:36:19\n   |\n34 |           Permission.ACCESS_CLIENT_DATA,\n35 |       }\n36 |       FORM_VIEWER = {\n   |  ___________________^\n37 | |         Permission.VIEW_ONBOARDING_RESPONSES,\n38 | |         Permission.ACCESS_CLIENT_DATA,\n39 | |     }\n   | |_____^\n40 |       USER = {Permission.ACCESS_BASIC_FEATURES}\n41 |       DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:40:12\n   |\n38 |         Permission.ACCESS_CLIENT_DATA,\n39 |     }\n40 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n41 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n42 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:41:17\n   |\n39 |     }\n40 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n41 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n42 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/domain/enums.py:42:21\n   |\n40 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n41 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n42 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n43 |\n44 |     @property\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/domain/models/form_response.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from datetime import datetime\n 4 | | from typing import TYPE_CHECKING, Any\n 5 | |\n 6 | | from sqlalchemy import ForeignKey, Text, func\n 7 | | from sqlalchemy.dialects.postgresql import JSON\n 8 | | from sqlalchemy.orm import Mapped, mapped_column, relationship\n 9 | |\n10 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n11 |\n12 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/domain/models/onboarding_form.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from datetime import datetime\n 4 | | from enum import Enum as PyEnum\n 5 | | from typing import TYPE_CHECKING\n 6 | |\n 7 | | from sqlalchemy import String, Text, func\n 8 | | from sqlalchemy.dialects.postgresql import ENUM\n 9 | | from sqlalchemy.orm import Mapped, mapped_column, relationship\n10 | |\n11 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n12 |\n13 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nW291 [*] Trailing whitespace\n --> src/contexts/client_onboarding/core/domain/shared/__init__.py:1:43\n  |\n1 | # Empty init file for shared domain module \n  |                                           ^\n  |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n --> src/contexts/client_onboarding/core/domain/shared/__init__.py:1:44\n  |\n1 | # Empty init file for shared domain module \n  |                                            ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/domain/shared/value_objects/role.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from attrs import frozen\n4 | |\n5 | | from src.contexts.client_onboarding.core.domain.enums import Role as EnumRoles\n6 | | from src.contexts.seedwork.shared.domain.value_objects.role import SeedRole\n  | |___________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/client_onboarding/core/endpoints/__init__.py:7:13\n  |\n5 | \"\"\"\n6 |\n7 | __all__ = []\n  |             ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/client_onboarding/core/endpoints/internal/__init__.py:14:2\n   |\n12 |     \"get_form_response\",\n13 |     \"get_form_responses\",\n14 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/endpoints/internal/get_form_responses.py:25:14\n   |\n23 | async def get_form_responses(\n24 |     caller_context: str,\n25 |     form_id: Optional[int] = None,\n   |              ^^^^^^^^^^^^^\n26 |     limit: Optional[int] = None,\n27 |     offset: Optional[int] = None,\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/endpoints/internal/get_form_responses.py:26:12\n   |\n24 |     caller_context: str,\n25 |     form_id: Optional[int] = None,\n26 |     limit: Optional[int] = None,\n   |            ^^^^^^^^^^^^^\n27 |     offset: Optional[int] = None,\n28 | ) -> dict[str, int | str]:\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/endpoints/internal/get_form_responses.py:27:13\n   |\n25 |     form_id: Optional[int] = None,\n26 |     limit: Optional[int] = None,\n27 |     offset: Optional[int] = None,\n   |             ^^^^^^^^^^^^^\n28 | ) -> dict[str, int | str]:\n29 |     \"\"\"\n   |\nhelp: Convert to `X | None`\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/client_onboarding/core/endpoints/internal/get_form_responses.py:78:115\n   |\n76 |             elapsed_time = time.time() - start_time\n77 |             logger.error(\n78 |                 f\"Database error after {elapsed_time:.3f}s for form responses query - Error: {type(e).__name__}: {str(e)}\"\n   |                                                                                                                   ^^^^^^\n79 |             )\n80 |             return {\n   |\nhelp: Replace with conversion flag\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:9:1\n   |\n 7 |   \"\"\"\n 8 |\n 9 | / import logging\n10 | | import re\n11 | | from typing import Dict, Any, Optional, List, Tuple\n12 | | from datetime import datetime\n13 | | from dataclasses import dataclass\n14 | |\n15 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses.form_response_data import (\n16 | |     FormResponseDataValidation,\n17 | |     NormalizedFieldResponse,\n18 | |     ResponseFieldType\n19 | | )\n20 | | from src.contexts.client_onboarding.core.adapters.api_schemas.responses.client_identifiers import (\n21 | |     ClientIdentifierType,\n22 | |     ValidatedEmail,\n23 | |     ValidatedPhoneNumber,\n24 | |     ValidatedName,\n25 | |     ClientIdentifierSet,\n26 | |     IdentifierExtractionResult,\n27 | |     IdentifierExtractionStatus\n28 | | )\n29 | | from src.contexts.client_onboarding.core.services.exceptions import (\n30 | |     FormResponseProcessingError\n31 | | )\n   | |_^\n32 |\n33 |   logger = logging.getLogger(__name__)\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:11:1\n   |\n 9 | import logging\n10 | import re\n11 | from typing import Dict, Any, Optional, List, Tuple\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from datetime import datetime\n13 | from dataclasses import dataclass\n   |\n\nUP035 `typing.List` is deprecated, use `list` instead\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:11:1\n   |\n 9 | import logging\n10 | import re\n11 | from typing import Dict, Any, Optional, List, Tuple\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from datetime import datetime\n13 | from dataclasses import dataclass\n   |\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:11:1\n   |\n 9 | import logging\n10 | import re\n11 | from typing import Dict, Any, Optional, List, Tuple\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from datetime import datetime\n13 | from dataclasses import dataclass\n   |\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:51:21\n   |\n49 |     form_id: str\n50 |     response_token: str\n51 |     field_mappings: Dict[str, FieldMapping]\n   |                     ^^^^\n52 |     confidence_threshold: float = 0.7\n53 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:53:27\n   |\n51 |     field_mappings: Dict[str, FieldMapping]\n52 |     confidence_threshold: float = 0.7\n53 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n54 |     \n55 |     def __post_init__(self):\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:53:36\n   |\n51 |     field_mappings: Dict[str, FieldMapping]\n52 |     confidence_threshold: float = 0.7\n53 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n   |                                    ^^^^\n54 |     \n55 |     def __post_init__(self):\n   |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:54:1\n   |\n52 |     confidence_threshold: float = 0.7\n53 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n54 |     \n   | ^^^^\n55 |     def __post_init__(self):\n56 |         if self.required_identifiers is None:\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:63:1\n   |\n61 |     \"\"\"\n62 |     Extract and validate client identifiers from normalized TypeForm responses.\n63 |     \n   | ^^^^\n64 |     Uses intelligent field mapping and confidence scoring to identify client\n65 |     information (name, email, phone) from form response data with fallback\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:68:1\n   |\n66 |     strategies for handling incomplete or ambiguous data.\n67 |     \"\"\"\n68 |     \n   | ^^^^\n69 |     def __init__(self):\n70 |         \"\"\"Initialize client identifier extractor.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:78:1\n   |\n76 |             'validation_success': 0.1\n77 |         }\n78 |     \n   | ^^^^\n79 |     async def extract_identifiers(\n80 |         self,\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:82:25\n   |\n80 |         self,\n81 |         validated_response: FormResponseDataValidation,\n82 |         field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n83 |         required_identifiers: Optional[List[ClientIdentifierType]] = None\n84 |     ) -> IdentifierExtractionResult:\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:82:34\n   |\n80 |         self,\n81 |         validated_response: FormResponseDataValidation,\n82 |         field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n   |                                  ^^^^\n83 |         required_identifiers: Optional[List[ClientIdentifierType]] = None\n84 |     ) -> IdentifierExtractionResult:\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:83:31\n   |\n81 |         validated_response: FormResponseDataValidation,\n82 |         field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n83 |         required_identifiers: Optional[List[ClientIdentifierType]] = None\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n84 |     ) -> IdentifierExtractionResult:\n85 |         \"\"\"\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:83:40\n   |\n81 |         validated_response: FormResponseDataValidation,\n82 |         field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n83 |         required_identifiers: Optional[List[ClientIdentifierType]] = None\n   |                                        ^^^^\n84 |     ) -> IdentifierExtractionResult:\n85 |         \"\"\"\n   |\nhelp: Replace with `list`\n\nW293 Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:87:1\n   |\n85 |         \"\"\"\n86 |         Extract client identifiers from validated form response.\n87 |         \n   | ^^^^^^^^\n88 |         Args:\n89 |             validated_response: Validated form response data\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:92:1\n   |\n90 |             field_mappings: Optional explicit field mappings\n91 |             required_identifiers: Required identifier types for validation\n92 |             \n   | ^^^^^^^^^^^^\n93 |         Returns:\n94 |             IdentifierExtractionResult with extracted identifiers and metadata\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:95:1\n   |\n93 |         Returns:\n94 |             IdentifierExtractionResult with extracted identifiers and metadata\n95 |             \n   | ^^^^^^^^^^^^\n96 |         Raises:\n97 |             FormResponseProcessingError: For extraction failures\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:102:1\n    |\n100 |             self.logger.info(f\"Extracting identifiers from form {validated_response.form_id}, \"\n101 |                            f\"response {validated_response.response_token}\")\n102 |             \n    | ^^^^^^^^^^^^\n103 |             # Build extraction context\n104 |             context = await self._build_extraction_context(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:107:1\n    |\n105 |                 validated_response, field_mappings, required_identifiers\n106 |             )\n107 |             \n    | ^^^^^^^^^^^^\n108 |             # Extract identifiers by type\n109 |             email_data = await self._extract_emails(validated_response, context)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:112:1\n    |\n110 |             phone_data = await self._extract_phones(validated_response, context)\n111 |             name_data = await self._extract_names(validated_response, context)\n112 |             \n    | ^^^^^^^^^^^^\n113 |             # Build identifier set\n114 |             identifier_set = ClientIdentifierSet(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:128:1\n    |\n126 |                 overall_confidence=self._calculate_overall_confidence(email_data, phone_data, name_data)\n127 |             )\n128 |             \n    | ^^^^^^^^^^^^\n129 |             # Evaluate extraction status and quality\n130 |             extraction_status = self._determine_extraction_status(identifier_set, context)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:132:1\n    |\n130 |             extraction_status = self._determine_extraction_status(identifier_set, context)\n131 |             quality_metrics = self._calculate_quality_metrics(identifier_set, context)\n132 |             \n    | ^^^^^^^^^^^^\n133 |             result = IdentifierExtractionResult(\n134 |                 identifiers=identifier_set,\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:136:80\n    |\n134 |                 identifiers=identifier_set,\n135 |                 extraction_status=extraction_status,\n136 |                 field_mappings={mapping.field_id: mapping.identifier_type.value \n    |                                                                                ^\n137 |                               for mapping in context.field_mappings.values()},\n138 |                 unmapped_fields=self._find_unmapped_fields(validated_response, context),\n    |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:146:1\n    |\n144 |                 fallback_strategies_used=quality_metrics['fallbacks']\n145 |             )\n146 |             \n    | ^^^^^^^^^^^^\n147 |             self.logger.info(f\"Successfully extracted identifiers with overall confidence: \"\n148 |                            f\"{identifier_set.overall_confidence:.2f}\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:150:1\n    |\n148 |                            f\"{identifier_set.overall_confidence:.2f}\")\n149 |             return result\n150 |             \n    | ^^^^^^^^^^^^\n151 |         except Exception as e:\n152 |             error_msg = f\"Error extracting identifiers from form {validated_response.form_id}: {str(e)}\"\n    |\nhelp: Remove whitespace from blank line\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:152:97\n    |\n151 |         except Exception as e:\n152 |             error_msg = f\"Error extracting identifiers from form {validated_response.form_id}: {str(e)}\"\n    |                                                                                                 ^^^^^^\n153 |             self.logger.error(error_msg, exc_info=True)\n154 |             raise FormResponseProcessingError(\n    |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:159:1\n    |\n157 |                 error_msg\n158 |             ) from e\n159 |     \n    | ^^^^\n160 |     async def _build_extraction_context(\n161 |         self,\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:163:28\n    |\n161 |         self,\n162 |         validated_response: FormResponseDataValidation,\n163 |         explicit_mappings: Optional[Dict[str, ClientIdentifierType]],\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |         required_identifiers: Optional[List[ClientIdentifierType]]\n165 |     ) -> ExtractionContext:\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:163:37\n    |\n161 |         self,\n162 |         validated_response: FormResponseDataValidation,\n163 |         explicit_mappings: Optional[Dict[str, ClientIdentifierType]],\n    |                                     ^^^^\n164 |         required_identifiers: Optional[List[ClientIdentifierType]]\n165 |     ) -> ExtractionContext:\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:164:31\n    |\n162 |         validated_response: FormResponseDataValidation,\n163 |         explicit_mappings: Optional[Dict[str, ClientIdentifierType]],\n164 |         required_identifiers: Optional[List[ClientIdentifierType]]\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n165 |     ) -> ExtractionContext:\n166 |         \"\"\"Build extraction context with field mappings.\"\"\"\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:164:40\n    |\n162 |         validated_response: FormResponseDataValidation,\n163 |         explicit_mappings: Optional[Dict[str, ClientIdentifierType]],\n164 |         required_identifiers: Optional[List[ClientIdentifierType]]\n    |                                        ^^^^\n165 |     ) -> ExtractionContext:\n166 |         \"\"\"Build extraction context with field mappings.\"\"\"\n    |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:168:1\n    |\n166 |         \"\"\"Build extraction context with field mappings.\"\"\"\n167 |         field_mappings = {}\n168 |         \n    | ^^^^^^^^\n169 |         # Use explicit mappings if provided, otherwise auto-detect\n170 |         if explicit_mappings:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:183:1\n    |\n181 |             # Auto-detect field mappings\n182 |             field_mappings = await self._auto_detect_field_mappings(validated_response)\n183 |         \n    | ^^^^^^^^\n184 |         return ExtractionContext(\n185 |             form_id=validated_response.form_id,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:190:1\n    |\n188 |             required_identifiers=required_identifiers or [ClientIdentifierType.EMAIL]\n189 |         )\n190 |     \n    | ^^^^\n191 |     async def _auto_detect_field_mappings(\n192 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:192:14\n    |\n191 |     async def _auto_detect_field_mappings(\n192 |         self, \n    |              ^\n193 |         validated_response: FormResponseDataValidation\n194 |     ) -> Dict[str, FieldMapping]:\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:194:10\n    |\n192 |         self, \n193 |         validated_response: FormResponseDataValidation\n194 |     ) -> Dict[str, FieldMapping]:\n    |          ^^^^\n195 |         \"\"\"Auto-detect field mappings based on field types and titles.\"\"\"\n196 |         mappings = {}\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:197:1\n    |\n195 |         \"\"\"Auto-detect field mappings based on field types and titles.\"\"\"\n196 |         mappings = {}\n197 |         \n    | ^^^^^^^^\n198 |         for field in validated_response.validated_fields:\n199 |             # Detect by field type first\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:201:1\n    |\n199 |             # Detect by field type first\n200 |             identifier_type, type_confidence = self._detect_by_field_type(field)\n201 |             \n    | ^^^^^^^^^^^^\n202 |             if identifier_type:\n203 |                 # Enhance confidence with title analysis\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:206:1\n    |\n204 |                 title_confidence = self._analyze_field_title(field.field_title, identifier_type)\n205 |                 combined_confidence = (type_confidence * 0.7) + (title_confidence * 0.3)\n206 |                 \n    | ^^^^^^^^^^^^^^^^\n207 |                 if combined_confidence >= 0.5:  # Minimum confidence threshold\n208 |                     mappings[field.field_id] = FieldMapping(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:215:1\n    |\n213 |                         is_primary=combined_confidence >= 0.8\n214 |                     )\n215 |         \n    | ^^^^^^^^\n216 |         return mappings\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:217:1\n    |\n216 |         return mappings\n217 |     \n    | ^^^^\n218 |     def _detect_by_field_type(self, field: NormalizedFieldResponse) -> Tuple[Optional[ClientIdentifierType], float]:\n219 |         \"\"\"Detect identifier type by field type with confidence.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:218:72\n    |\n216 |         return mappings\n217 |     \n218 |     def _detect_by_field_type(self, field: NormalizedFieldResponse) -> Tuple[Optional[ClientIdentifierType], float]:\n    |                                                                        ^^^^^\n219 |         \"\"\"Detect identifier type by field type with confidence.\"\"\"\n220 |         type_mappings = {\n    |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:218:78\n    |\n216 |         return mappings\n217 |     \n218 |     def _detect_by_field_type(self, field: NormalizedFieldResponse) -> Tuple[Optional[ClientIdentifierType], float]:\n    |                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n219 |         \"\"\"Detect identifier type by field type with confidence.\"\"\"\n220 |         type_mappings = {\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:226:1\n    |\n224 |             ResponseFieldType.LONG_TEXT: None,   # Needs title analysis\n225 |         }\n226 |         \n    | ^^^^^^^^\n227 |         direct_mapping = type_mappings.get(field.field_type)\n228 |         if direct_mapping:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:230:1\n    |\n228 |         if direct_mapping:\n229 |             return direct_mapping\n230 |         \n    | ^^^^^^^^\n231 |         # For text fields, try to infer from content\n232 |         if field.field_type in [ResponseFieldType.SHORT_TEXT, ResponseFieldType.LONG_TEXT]:\n    |\nhelp: Remove whitespace from blank line\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:232:9\n    |\n231 |           # For text fields, try to infer from content\n232 | /         if field.field_type in [ResponseFieldType.SHORT_TEXT, ResponseFieldType.LONG_TEXT]:\n233 | |             if field.text_response:\n    | |___________________________________^\n234 |                   return self._infer_from_text_content(field.text_response.sanitized_value)\n    |\nhelp: Combine `if` statements using `and`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:235:1\n    |\n233 |             if field.text_response:\n234 |                 return self._infer_from_text_content(field.text_response.sanitized_value)\n235 |         \n    | ^^^^^^^^\n236 |         return None, 0.0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:237:1\n    |\n236 |         return None, 0.0\n237 |     \n    | ^^^^\n238 |     def _analyze_field_title(self, title: str, suspected_type: ClientIdentifierType) -> float:\n239 |         \"\"\"Analyze field title to enhance confidence in identifier type.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:241:1\n    |\n239 |         \"\"\"Analyze field title to enhance confidence in identifier type.\"\"\"\n240 |         title_lower = title.lower()\n241 |         \n    | ^^^^^^^^\n242 |         # Define keywords for each identifier type\n243 |         keywords = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:251:1\n    |\n249 |             ClientIdentifierType.COMPANY_NAME: ['company', 'organization', 'business', 'firm']\n250 |         }\n251 |         \n    | ^^^^^^^^\n252 |         type_keywords = keywords.get(suspected_type, [])\n253 |         matches = sum(1 for keyword in type_keywords if keyword in title_lower)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:254:1\n    |\n252 |         type_keywords = keywords.get(suspected_type, [])\n253 |         matches = sum(1 for keyword in type_keywords if keyword in title_lower)\n254 |         \n    | ^^^^^^^^\n255 |         return min(1.0, matches * 0.4)  # Each keyword match adds 0.4 confidence\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:256:1\n    |\n255 |         return min(1.0, matches * 0.4)  # Each keyword match adds 0.4 confidence\n256 |     \n    | ^^^^\n257 |     def _infer_from_text_content(self, content: str) -> Tuple[Optional[ClientIdentifierType], float]:\n258 |         \"\"\"Infer identifier type from text content patterns.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:257:57\n    |\n255 |         return min(1.0, matches * 0.4)  # Each keyword match adds 0.4 confidence\n256 |     \n257 |     def _infer_from_text_content(self, content: str) -> Tuple[Optional[ClientIdentifierType], float]:\n    |                                                         ^^^^^\n258 |         \"\"\"Infer identifier type from text content patterns.\"\"\"\n259 |         if not content:\n    |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:257:63\n    |\n255 |         return min(1.0, matches * 0.4)  # Each keyword match adds 0.4 confidence\n256 |     \n257 |     def _infer_from_text_content(self, content: str) -> Tuple[Optional[ClientIdentifierType], float]:\n    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n258 |         \"\"\"Infer identifier type from text content patterns.\"\"\"\n259 |         if not content:\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:261:1\n    |\n259 |         if not content:\n260 |             return None, 0.0\n261 |         \n    | ^^^^^^^^\n262 |         content_lower = content.lower().strip()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:263:1\n    |\n262 |         content_lower = content.lower().strip()\n263 |         \n    | ^^^^^^^^\n264 |         # Email pattern\n265 |         if '@' in content_lower and '.' in content_lower:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:267:1\n    |\n265 |         if '@' in content_lower and '.' in content_lower:\n266 |             return ClientIdentifierType.EMAIL, 0.8\n267 |         \n    | ^^^^^^^^\n268 |         # Phone pattern\n269 |         if re.match(r'^[\\+]?[\\d\\s\\-\\(\\)]+$', content) and len(re.sub(r'[^\\d]', '', content)) >= 7:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:271:1\n    |\n269 |         if re.match(r'^[\\+]?[\\d\\s\\-\\(\\)]+$', content) and len(re.sub(r'[^\\d]', '', content)) >= 7:\n270 |             return ClientIdentifierType.PHONE, 0.8\n271 |         \n    | ^^^^^^^^\n272 |         # Name patterns (heuristic based on word count and capitalization)\n273 |         words = content.split()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:279:1\n    |\n277 |             elif len(words) == 2:\n278 |                 return ClientIdentifierType.FULL_NAME, 0.7\n279 |         \n    | ^^^^^^^^\n280 |         return None, 0.0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:281:1\n    |\n280 |         return None, 0.0\n281 |     \n    | ^^^^\n282 |     async def _extract_emails(\n283 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:283:14\n    |\n282 |     async def _extract_emails(\n283 |         self, \n    |              ^\n284 |         validated_response: FormResponseDataValidation,\n285 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:286:10\n    |\n284 |         validated_response: FormResponseDataValidation,\n285 |         context: ExtractionContext\n286 |     ) -> Dict[str, Any]:\n    |          ^^^^\n287 |         \"\"\"Extract email identifiers from validated response.\"\"\"\n288 |         emails = []\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:289:1\n    |\n287 |         \"\"\"Extract email identifiers from validated response.\"\"\"\n288 |         emails = []\n289 |         \n    | ^^^^^^^^\n290 |         for field in validated_response.validated_fields:\n291 |             mapping = context.field_mappings.get(field.field_id)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:293:1\n    |\n291 |             mapping = context.field_mappings.get(field.field_id)\n292 |             if mapping and mapping.identifier_type == ClientIdentifierType.EMAIL:\n293 |                 \n    | ^^^^^^^^^^^^^^^^\n294 |                 if field.email_response and field.email_response.is_valid_format:\n295 |                     email = ValidatedEmail(\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:304:100\n    |\n302 |                 elif field.text_response:\n303 |                     # Try to extract email from text field\n304 |                     email_match = re.search(r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b', \n    |                                                                                                    ^\n305 |                                           field.text_response.sanitized_value)\n306 |                     if email_match:\n    |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:314:1\n    |\n312 |                         )\n313 |                         emails.append(email)\n314 |         \n    | ^^^^^^^^\n315 |         # Sort by confidence and primary status\n316 |         emails.sort(key=lambda x: (x.is_primary, x.confidence), reverse=True)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:317:1\n    |\n315 |         # Sort by confidence and primary status\n316 |         emails.sort(key=lambda x: (x.is_primary, x.confidence), reverse=True)\n317 |         \n    | ^^^^^^^^\n318 |         return {\n319 |             'primary': emails[0] if emails else None,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:322:1\n    |\n320 |             'alternates': emails[1:] if len(emails) > 1 else []\n321 |         }\n322 |     \n    | ^^^^\n323 |     async def _extract_phones(\n324 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:324:14\n    |\n323 |     async def _extract_phones(\n324 |         self, \n    |              ^\n325 |         validated_response: FormResponseDataValidation,\n326 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:327:10\n    |\n325 |         validated_response: FormResponseDataValidation,\n326 |         context: ExtractionContext\n327 |     ) -> Dict[str, Any]:\n    |          ^^^^\n328 |         \"\"\"Extract phone number identifiers from validated response.\"\"\"\n329 |         phones = []\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:330:1\n    |\n328 |         \"\"\"Extract phone number identifiers from validated response.\"\"\"\n329 |         phones = []\n330 |         \n    | ^^^^^^^^\n331 |         for field in validated_response.validated_fields:\n332 |             mapping = context.field_mappings.get(field.field_id)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:334:1\n    |\n332 |             mapping = context.field_mappings.get(field.field_id)\n333 |             if mapping and mapping.identifier_type == ClientIdentifierType.PHONE:\n334 |                 \n    | ^^^^^^^^^^^^^^^^\n335 |                 if field.phone_response and field.phone_response.is_valid:\n336 |                     phone = ValidatedPhoneNumber(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:349:1\n    |\n347 |                     phone_text = field.text_response.sanitized_value\n348 |                     digits_only = re.sub(r'[^\\d]', '', phone_text)\n349 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n350 |                     if len(digits_only) >= 7:\n351 |                         phone = ValidatedPhoneNumber(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:360:1\n    |\n358 |                         )\n359 |                         phones.append(phone)\n360 |         \n    | ^^^^^^^^\n361 |         # Sort by confidence and validity\n362 |         phones.sort(key=lambda x: (x.is_valid, x.confidence), reverse=True)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:363:1\n    |\n361 |         # Sort by confidence and validity\n362 |         phones.sort(key=lambda x: (x.is_valid, x.confidence), reverse=True)\n363 |         \n    | ^^^^^^^^\n364 |         return {\n365 |             'primary': phones[0] if phones else None,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:368:1\n    |\n366 |             'alternates': phones[1:] if len(phones) > 1 else []\n367 |         }\n368 |     \n    | ^^^^\n369 |     async def _extract_names(\n370 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:370:14\n    |\n369 |     async def _extract_names(\n370 |         self, \n    |              ^\n371 |         validated_response: FormResponseDataValidation,\n372 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:373:10\n    |\n371 |         validated_response: FormResponseDataValidation,\n372 |         context: ExtractionContext\n373 |     ) -> Dict[str, Any]:\n    |          ^^^^\n374 |         \"\"\"Extract name identifiers from validated response.\"\"\"\n375 |         names: Dict[str, Optional[ValidatedName]] = {\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:375:16\n    |\n373 |     ) -> Dict[str, Any]:\n374 |         \"\"\"Extract name identifiers from validated response.\"\"\"\n375 |         names: Dict[str, Optional[ValidatedName]] = {\n    |                ^^^^\n376 |             'full_name': None,\n377 |             'first_name': None,\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:375:26\n    |\n373 |     ) -> Dict[str, Any]:\n374 |         \"\"\"Extract name identifiers from validated response.\"\"\"\n375 |         names: Dict[str, Optional[ValidatedName]] = {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^\n376 |             'full_name': None,\n377 |             'first_name': None,\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:381:1\n    |\n379 |             'company_name': None\n380 |         }\n381 |         \n    | ^^^^^^^^\n382 |         for field in validated_response.validated_fields:\n383 |             mapping = context.field_mappings.get(field.field_id)\n    |\nhelp: Remove whitespace from blank line\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:384:13\n    |\n382 |           for field in validated_response.validated_fields:\n383 |               mapping = context.field_mappings.get(field.field_id)\n384 | /             if mapping and mapping.identifier_type in [\n385 | |                 ClientIdentifierType.FULL_NAME, \n386 | |                 ClientIdentifierType.FIRST_NAME,\n387 | |                 ClientIdentifierType.LAST_NAME,\n388 | |                 ClientIdentifierType.COMPANY_NAME\n389 | |             ]:\n390 | |                 \n391 | |                 if field.text_response and field.text_response.sanitized_value:\n    | |_______________________________________________________________________________^\n392 |                       name_text = field.text_response.sanitized_value\n    |\nhelp: Combine `if` statements using `and`\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:385:48\n    |\n383 |             mapping = context.field_mappings.get(field.field_id)\n384 |             if mapping and mapping.identifier_type in [\n385 |                 ClientIdentifierType.FULL_NAME, \n    |                                                ^\n386 |                 ClientIdentifierType.FIRST_NAME,\n387 |                 ClientIdentifierType.LAST_NAME,\n    |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:390:1\n    |\n388 |                 ClientIdentifierType.COMPANY_NAME\n389 |             ]:\n390 |                 \n    | ^^^^^^^^^^^^^^^^\n391 |                 if field.text_response and field.text_response.sanitized_value:\n392 |                     name_text = field.text_response.sanitized_value\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:393:1\n    |\n391 |                 if field.text_response and field.text_response.sanitized_value:\n392 |                     name_text = field.text_response.sanitized_value\n393 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n394 |                     # Validate name content\n395 |                     if self._is_valid_name(name_text):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:403:1\n    |\n401 | \u2026         is_complete=len(name_text.split()) >= 2 if mapping.identifier_type == ClientIdentifierType.FULL_NAME else True\n402 | \u2026     )\n403 | \u2026     \n^^^^^^^^^^^^\n404 | \u2026     # Map to appropriate name type\n405 | \u2026     if mapping.identifier_type == ClientIdentifierType.FULL_NAME:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:413:1\n    |\n411 |                         elif mapping.identifier_type == ClientIdentifierType.COMPANY_NAME:\n412 |                             names['company_name'] = name\n413 |         \n    | ^^^^^^^^\n414 |         return names\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:415:1\n    |\n414 |         return names\n415 |     \n    | ^^^^\n416 |     def _is_valid_name(self, name_text: str) -> bool:\n417 |         \"\"\"Validate that text appears to be a name.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:420:1\n    |\n418 |         if not name_text or len(name_text.strip()) < 2:\n419 |             return False\n420 |         \n    | ^^^^^^^^\n421 |         # Check for reasonable name patterns\n422 |         name_pattern = re.compile(r\"^[a-zA-Z\\s\\'\\-\\.]+$\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:424:1\n    |\n422 |         name_pattern = re.compile(r\"^[a-zA-Z\\s\\'\\-\\.]+$\")\n423 |         return bool(name_pattern.match(name_text))\n424 |     \n    | ^^^^\n425 |     def _sanitize_name(self, name_text: str) -> str:\n426 |         \"\"\"Sanitize name text for storage.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:429:1\n    |\n427 |         # Remove extra whitespace and normalize\n428 |         sanitized = ' '.join(name_text.split())\n429 |         \n    | ^^^^^^^^\n430 |         # Title case\n431 |         sanitized = sanitized.title()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:432:1\n    |\n430 |         # Title case\n431 |         sanitized = sanitized.title()\n432 |         \n    | ^^^^^^^^\n433 |         return sanitized\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:434:1\n    |\n433 |         return sanitized\n434 |     \n    | ^^^^\n435 |     def _calculate_overall_confidence(self, email_data: Dict, phone_data: Dict, name_data: Dict) -> float:\n436 |         \"\"\"Calculate overall confidence score for extracted identifiers.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:435:57\n    |\n433 |         return sanitized\n434 |     \n435 |     def _calculate_overall_confidence(self, email_data: Dict, phone_data: Dict, name_data: Dict) -> float:\n    |                                                         ^^^^\n436 |         \"\"\"Calculate overall confidence score for extracted identifiers.\"\"\"\n437 |         confidences = []\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:435:75\n    |\n433 |         return sanitized\n434 |     \n435 |     def _calculate_overall_confidence(self, email_data: Dict, phone_data: Dict, name_data: Dict) -> float:\n    |                                                                           ^^^^\n436 |         \"\"\"Calculate overall confidence score for extracted identifiers.\"\"\"\n437 |         confidences = []\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:435:92\n    |\n433 |         return sanitized\n434 |     \n435 |     def _calculate_overall_confidence(self, email_data: Dict, phone_data: Dict, name_data: Dict) -> float:\n    |                                                                                            ^^^^\n436 |         \"\"\"Calculate overall confidence score for extracted identifiers.\"\"\"\n437 |         confidences = []\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:438:1\n    |\n436 |         \"\"\"Calculate overall confidence score for extracted identifiers.\"\"\"\n437 |         confidences = []\n438 |         \n    | ^^^^^^^^\n439 |         # Email confidence\n440 |         if email_data.get('primary'):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:442:1\n    |\n440 |         if email_data.get('primary'):\n441 |             confidences.append(email_data['primary'].confidence)\n442 |         \n    | ^^^^^^^^\n443 |         # Phone confidence\n444 |         if phone_data.get('primary'):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:446:1\n    |\n444 |         if phone_data.get('primary'):\n445 |             confidences.append(phone_data['primary'].confidence)\n446 |         \n    | ^^^^^^^^\n447 |         # Name confidences\n448 |         for name_type in ['full_name', 'first_name', 'last_name', 'company_name']:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:452:1\n    |\n450 |             if name_obj:\n451 |                 confidences.append(name_obj.confidence)\n452 |         \n    | ^^^^^^^^\n453 |         return sum(confidences) / len(confidences) if confidences else 0.0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:454:1\n    |\n453 |         return sum(confidences) / len(confidences) if confidences else 0.0\n454 |     \n    | ^^^^\n455 |     def _determine_extraction_status(\n456 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:456:14\n    |\n455 |     def _determine_extraction_status(\n456 |         self, \n    |              ^\n457 |         identifier_set: ClientIdentifierSet, \n458 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:457:45\n    |\n455 |     def _determine_extraction_status(\n456 |         self, \n457 |         identifier_set: ClientIdentifierSet, \n    |                                             ^\n458 |         context: ExtractionContext\n459 |     ) -> IdentifierExtractionStatus:\n    |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:463:1\n    |\n461 |         if not context.required_identifiers:\n462 |             return IdentifierExtractionStatus.EXTRACTED\n463 |         \n    | ^^^^^^^^\n464 |         required_present = 0\n465 |         for required_type in context.required_identifiers:\n    |\nhelp: Remove whitespace from blank line\n\nSIM114 [*] Combine `if` branches using logical `or` operator\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:466:13\n    |\n464 |           required_present = 0\n465 |           for required_type in context.required_identifiers:\n466 | /             if required_type == ClientIdentifierType.EMAIL and identifier_set.email:\n467 | |                 required_present += 1\n468 | |             elif required_type == ClientIdentifierType.PHONE and identifier_set.phone:\n469 | |                 required_present += 1\n    | |_____________________________________^\n470 |               elif required_type == ClientIdentifierType.FULL_NAME and identifier_set.full_name:\n471 |                   required_present += 1\n    |\nhelp: Combine `if` branches\n\nSIM114 [*] Combine `if` branches using logical `or` operator\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:468:13\n    |\n466 |               if required_type == ClientIdentifierType.EMAIL and identifier_set.email:\n467 |                   required_present += 1\n468 | /             elif required_type == ClientIdentifierType.PHONE and identifier_set.phone:\n469 | |                 required_present += 1\n470 | |             elif required_type == ClientIdentifierType.FULL_NAME and identifier_set.full_name:\n471 | |                 required_present += 1\n    | |_____________________________________^\n472 |               elif required_type == ClientIdentifierType.FIRST_NAME and identifier_set.first_name:\n473 |                   required_present += 1\n    |\nhelp: Combine `if` branches\n\nSIM114 [*] Combine `if` branches using logical `or` operator\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:470:13\n    |\n468 |               elif required_type == ClientIdentifierType.PHONE and identifier_set.phone:\n469 |                   required_present += 1\n470 | /             elif required_type == ClientIdentifierType.FULL_NAME and identifier_set.full_name:\n471 | |                 required_present += 1\n472 | |             elif required_type == ClientIdentifierType.FIRST_NAME and identifier_set.first_name:\n473 | |                 required_present += 1\n    | |_____________________________________^\n474 |               elif required_type == ClientIdentifierType.LAST_NAME and identifier_set.last_name:\n475 |                   required_present += 1\n    |\nhelp: Combine `if` branches\n\nSIM114 [*] Combine `if` branches using logical `or` operator\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:472:13\n    |\n470 |               elif required_type == ClientIdentifierType.FULL_NAME and identifier_set.full_name:\n471 |                   required_present += 1\n472 | /             elif required_type == ClientIdentifierType.FIRST_NAME and identifier_set.first_name:\n473 | |                 required_present += 1\n474 | |             elif required_type == ClientIdentifierType.LAST_NAME and identifier_set.last_name:\n475 | |                 required_present += 1\n    | |_____________________________________^\n476 |               elif required_type == ClientIdentifierType.COMPANY_NAME and identifier_set.company_name:\n477 |                   required_present += 1\n    |\nhelp: Combine `if` branches\n\nSIM114 [*] Combine `if` branches using logical `or` operator\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:474:13\n    |\n472 |               elif required_type == ClientIdentifierType.FIRST_NAME and identifier_set.first_name:\n473 |                   required_present += 1\n474 | /             elif required_type == ClientIdentifierType.LAST_NAME and identifier_set.last_name:\n475 | |                 required_present += 1\n476 | |             elif required_type == ClientIdentifierType.COMPANY_NAME and identifier_set.company_name:\n477 | |                 required_present += 1\n    | |_____________________________________^\n478 |           \n479 |           if required_present == len(context.required_identifiers):\n    |\nhelp: Combine `if` branches\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:478:1\n    |\n476 |             elif required_type == ClientIdentifierType.COMPANY_NAME and identifier_set.company_name:\n477 |                 required_present += 1\n478 |         \n    | ^^^^^^^^\n479 |         if required_present == len(context.required_identifiers):\n480 |             return IdentifierExtractionStatus.EXTRACTED\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:485:1\n    |\n483 |         else:\n484 |             return IdentifierExtractionStatus.MISSING\n485 |     \n    | ^^^^\n486 |     def _calculate_quality_metrics(\n487 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:487:14\n    |\n486 |     def _calculate_quality_metrics(\n487 |         self, \n    |              ^\n488 |         identifier_set: ClientIdentifierSet, \n489 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:488:45\n    |\n486 |     def _calculate_quality_metrics(\n487 |         self, \n488 |         identifier_set: ClientIdentifierSet, \n    |                                             ^\n489 |         context: ExtractionContext\n490 |     ) -> Dict[str, Any]:\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:490:10\n    |\n488 |         identifier_set: ClientIdentifierSet, \n489 |         context: ExtractionContext\n490 |     ) -> Dict[str, Any]:\n    |          ^^^^\n491 |         \"\"\"Calculate quality metrics for extracted identifiers.\"\"\"\n492 |         present = []\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:496:1\n    |\n494 |         warnings = []\n495 |         fallbacks = []\n496 |         \n    | ^^^^^^^^\n497 |         # Check required identifiers\n498 |         if context.required_identifiers:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:513:1\n    |\n511 |                         warnings.append(\"Required phone identifier not found\")\n512 |                 # Add other required types as needed\n513 |         \n    | ^^^^^^^^\n514 |         # Calculate quality score\n515 |         quality_factors = []\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:516:1\n    |\n514 |         # Calculate quality score\n515 |         quality_factors = []\n516 |         \n    | ^^^^^^^^\n517 |         # Identifier completeness\n518 |         total_required = len(context.required_identifiers) if context.required_identifiers else 1\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:521:1\n    |\n519 |         completeness = len(present) / total_required\n520 |         quality_factors.append(completeness * 0.4)\n521 |         \n    | ^^^^^^^^\n522 |         # Overall confidence\n523 |         quality_factors.append(identifier_set.overall_confidence * 0.4)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:524:1\n    |\n522 |         # Overall confidence\n523 |         quality_factors.append(identifier_set.overall_confidence * 0.4)\n524 |         \n    | ^^^^^^^^\n525 |         # Data validity\n526 |         validity_score = 1.0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:532:1\n    |\n530 |             validity_score -= 0.3\n531 |         quality_factors.append(max(0.0, validity_score) * 0.2)\n532 |         \n    | ^^^^^^^^\n533 |         quality_score = sum(quality_factors)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:534:1\n    |\n533 |         quality_score = sum(quality_factors)\n534 |         \n    | ^^^^^^^^\n535 |         return {\n536 |             'present': present,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:542:1\n    |\n540 |             'quality_score': quality_score\n541 |         }\n542 |     \n    | ^^^^\n543 |     def _find_unmapped_fields(\n544 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:544:14\n    |\n543 |     def _find_unmapped_fields(\n544 |         self, \n    |              ^\n545 |         validated_response: FormResponseDataValidation,\n546 |         context: ExtractionContext\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:547:10\n    |\n545 |         validated_response: FormResponseDataValidation,\n546 |         context: ExtractionContext\n547 |     ) -> List[str]:\n    |          ^^^^\n548 |         \"\"\"Find fields that weren't mapped to any identifier type.\"\"\"\n549 |         mapped_field_ids = set(context.field_mappings.keys())\n    |\nhelp: Replace with `list`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:557:21\n    |\n555 | async def extract_client_identifiers(\n556 |     validated_response: FormResponseDataValidation,\n557 |     field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n558 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n559 | ) -> IdentifierExtractionResult:\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:557:30\n    |\n555 | async def extract_client_identifiers(\n556 |     validated_response: FormResponseDataValidation,\n557 |     field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n    |                              ^^^^\n558 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n559 | ) -> IdentifierExtractionResult:\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:558:27\n    |\n556 |     validated_response: FormResponseDataValidation,\n557 |     field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n558 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n559 | ) -> IdentifierExtractionResult:\n560 |     \"\"\"\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:558:36\n    |\n556 |     validated_response: FormResponseDataValidation,\n557 |     field_mappings: Optional[Dict[str, ClientIdentifierType]] = None,\n558 |     required_identifiers: Optional[List[ClientIdentifierType]] = None\n    |                                    ^^^^\n559 | ) -> IdentifierExtractionResult:\n560 |     \"\"\"\n    |\nhelp: Replace with `list`\n\nW293 Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:562:1\n    |\n560 |     \"\"\"\n561 |     Convenience function to extract client identifiers.\n562 |     \n    | ^^^^\n563 |     Args:\n564 |         validated_response: Validated form response data\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:567:1\n    |\n565 |         field_mappings: Optional explicit field mappings\n566 |         required_identifiers: Required identifier types for validation\n567 |         \n    | ^^^^^^^^\n568 |     Returns:\n569 |         IdentifierExtractionResult with extracted identifiers\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:572:105\n    |\n570 |     \"\"\"\n571 |     extractor = ClientIdentifierExtractor()\n572 |     return await extractor.extract_identifiers(validated_response, field_mappings, required_identifiers) \n    |                                                                                                         ^\n    |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n   --> src/contexts/client_onboarding/core/services/client_identifier_extractor.py:572:106\n    |\n570 |     \"\"\"\n571 |     extractor = ClientIdentifierExtractor()\n572 |     return await extractor.extract_identifiers(validated_response, field_mappings, required_identifiers) \n    |                                                                                                          ^\n    |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/command_handlers/delete_onboarding_form.py:7:1\n   |\n 5 |   \"\"\"\n 6 |\n 7 | / import logging\n 8 | |\n 9 | | from src.contexts.client_onboarding.core.domain.commands.delete_onboarding_form import (\n10 | |     DeleteOnboardingFormCommand,\n11 | | )\n12 | | from src.contexts.client_onboarding.core.services.webhooks.manager import WebhookManager\n13 | |\n14 | | from ..uow import UnitOfWork\n   | |____________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py:9:1\n   |\n 7 |   \"\"\"\n 8 |\n 9 | / from __future__ import annotations\n10 | |\n11 | | import logging\n12 | | import json\n13 | |\n14 | | from src.contexts.client_onboarding.core.domain.commands.process_webhook import (\n15 | |     ProcessWebhookCommand,\n16 | | )\n17 | | from src.contexts.client_onboarding.core.services.webhooks.processor import (\n18 | |     WebhookPayloadProcessor,\n19 | |     WebhookSecurityVerifier,\n20 | | )\n21 | |\n22 | | from ..uow import UnitOfWork\n   | |____________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py:45:9\n   |\n43 |     except json.JSONDecodeError as e:\n44 |         # Normalize to same error class as processor uses\n45 |         from src.contexts.client_onboarding.core.services.exceptions import WebhookPayloadError\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n46 |\n47 |         raise WebhookPayloadError(f\"Invalid JSON payload: {str(e)}\") from e\n   |\nhelp: Organize imports\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py:47:60\n   |\n45 |         from src.contexts.client_onboarding.core.services.exceptions import WebhookPayloadError\n46 |\n47 |         raise WebhookPayloadError(f\"Invalid JSON payload: {str(e)}\") from e\n   |                                                            ^^^^^^\n48 |\n49 |     async with uow:\n   |\nhelp: Replace with conversion flag\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> src/contexts/client_onboarding/core/services/command_handlers/process_webhook.py:55:5\n   |\n54 |       # Best-effort mark processed (non-fatal if it fails)\n55 | /     try:\n56 | |         await WebhookSecurityVerifier.mark_request_processed(cmd.payload, cmd.headers)\n57 | |     except Exception:\n58 | |         pass\n   | |____________^\n   |\nhelp: Replace with `contextlib.suppress(Exception)`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/command_handlers/setup_onboarding_form.py:7:1\n   |\n 5 |   \"\"\"\n 6 |\n 7 | / import logging\n 8 | | from typing import Tuple\n 9 | |\n10 | | from src.contexts.client_onboarding.core.domain.commands import (\n11 | |     SetupOnboardingFormCommand,\n12 | | )\n13 | | from src.contexts.client_onboarding.core.domain.models.onboarding_form import (\n14 | |     OnboardingForm,\n15 | |     OnboardingFormStatus,\n16 | | )\n17 | | from src.contexts.client_onboarding.core.services.integrations.typeform.client import WebhookInfo\n18 | | from src.contexts.client_onboarding.core.services.webhooks.manager import WebhookManager\n19 | |\n20 | | from ..uow import UnitOfWork\n   | |____________________________^\n   |\nhelp: Organize imports\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n  --> src/contexts/client_onboarding/core/services/command_handlers/setup_onboarding_form.py:8:1\n   |\n 7 | import logging\n 8 | from typing import Tuple\n   | ^^^^^^^^^^^^^^^^^^^^^^^^\n 9 |\n10 | from src.contexts.client_onboarding.core.domain.commands import (\n   |\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n  --> src/contexts/client_onboarding/core/services/command_handlers/setup_onboarding_form.py:30:6\n   |\n28 |     uow: UnitOfWork,\n29 |     webhook_manager: WebhookManager,\n30 | ) -> Tuple[OnboardingForm, WebhookInfo]:\n   |      ^^^^^\n31 |     \"\"\"\n32 |     Handle setup of new onboarding form with webhook integration.\n   |\nhelp: Replace with `tuple`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/command_handlers/update_webhook_url.py:7:1\n   |\n 5 |   \"\"\"\n 6 |\n 7 | / import logging\n 8 | |\n 9 | | from src.contexts.client_onboarding.core.domain.commands import (\n10 | |     UpdateWebhookUrlCommand,\n11 | | )\n12 | | from src.contexts.client_onboarding.core.domain.models.onboarding_form import (\n13 | |     OnboardingForm,\n14 | | )\n15 | | from src.contexts.client_onboarding.core.services.webhooks.manager import WebhookManager\n16 | |\n17 | | from ..uow import UnitOfWork\n   | |____________________________^\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/client_onboarding/core/services/exceptions.py:8:1\n  |\n6 | \"\"\"\n7 |\n8 | from typing import Optional, Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/client_onboarding/core/services/exceptions.py:8:1\n  |\n6 | \"\"\"\n7 |\n8 | from typing import Optional, Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:13:1\n   |\n11 | class ClientOnboardingError(Exception):\n12 |     \"\"\"Base exception for all client onboarding related errors.\"\"\"\n13 |     \n   | ^^^^\n14 |     def __init__(self, message: str, details: Optional[Dict[str, Any]] = None):\n15 |         super().__init__(message)\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:14:47\n   |\n12 |     \"\"\"Base exception for all client onboarding related errors.\"\"\"\n13 |     \n14 |     def __init__(self, message: str, details: Optional[Dict[str, Any]] = None):\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n15 |         super().__init__(message)\n16 |         self.message = message\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/exceptions.py:14:56\n   |\n12 |     \"\"\"Base exception for all client onboarding related errors.\"\"\"\n13 |     \n14 |     def __init__(self, message: str, details: Optional[Dict[str, Any]] = None):\n   |                                                        ^^^^\n15 |         super().__init__(message)\n16 |         self.message = message\n   |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:22:1\n   |\n20 | class TypeFormAPIError(ClientOnboardingError):\n21 |     \"\"\"Base exception for TypeForm API related errors.\"\"\"\n22 |     \n   | ^^^^\n23 |     def __init__(\n24 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:24:14\n   |\n23 |     def __init__(\n24 |         self, \n   |              ^\n25 |         message: str, \n26 |         status_code: Optional[int] = None,\n   |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:25:22\n   |\n23 |     def __init__(\n24 |         self, \n25 |         message: str, \n   |                      ^\n26 |         status_code: Optional[int] = None,\n27 |         response_data: Optional[Dict[str, Any]] = None,\n   |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:26:22\n   |\n24 |         self, \n25 |         message: str, \n26 |         status_code: Optional[int] = None,\n   |                      ^^^^^^^^^^^^^\n27 |         response_data: Optional[Dict[str, Any]] = None,\n28 |         details: Optional[Dict[str, Any]] = None,\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:27:24\n   |\n25 |         message: str, \n26 |         status_code: Optional[int] = None,\n27 |         response_data: Optional[Dict[str, Any]] = None,\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^\n28 |         details: Optional[Dict[str, Any]] = None,\n29 |         retry_after: Optional[int] = None\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/exceptions.py:27:33\n   |\n25 |         message: str, \n26 |         status_code: Optional[int] = None,\n27 |         response_data: Optional[Dict[str, Any]] = None,\n   |                                 ^^^^\n28 |         details: Optional[Dict[str, Any]] = None,\n29 |         retry_after: Optional[int] = None\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:28:18\n   |\n26 |         status_code: Optional[int] = None,\n27 |         response_data: Optional[Dict[str, Any]] = None,\n28 |         details: Optional[Dict[str, Any]] = None,\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n29 |         retry_after: Optional[int] = None\n30 |     ):\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/exceptions.py:28:27\n   |\n26 |         status_code: Optional[int] = None,\n27 |         response_data: Optional[Dict[str, Any]] = None,\n28 |         details: Optional[Dict[str, Any]] = None,\n   |                           ^^^^\n29 |         retry_after: Optional[int] = None\n30 |     ):\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:29:22\n   |\n27 |         response_data: Optional[Dict[str, Any]] = None,\n28 |         details: Optional[Dict[str, Any]] = None,\n29 |         retry_after: Optional[int] = None\n   |                      ^^^^^^^^^^^^^\n30 |     ):\n31 |         super().__init__(message, details)\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:39:1\n   |\n37 | class TypeFormAuthenticationError(TypeFormAPIError):\n38 |     \"\"\"Raised when TypeForm API authentication fails.\"\"\"\n39 |     \n   | ^^^^\n40 |     def __init__(self, message: str = \"TypeForm API authentication failed\", **kwargs):\n41 |         super().__init__(message, **kwargs)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:46:1\n   |\n44 | class TypeFormFormNotFoundError(TypeFormAPIError):\n45 |     \"\"\"Raised when a TypeForm form cannot be found or accessed.\"\"\"\n46 |     \n   | ^^^^\n47 |     def __init__(self, form_id: str, **kwargs):\n48 |         message = f\"TypeForm form not found or inaccessible: {form_id}\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:60:1\n   |\n58 | class TypeFormWebhookCreationError(TypeFormWebhookError):\n59 |     \"\"\"Raised when webhook creation fails.\"\"\"\n60 |     \n   | ^^^^\n61 |     def __init__(self, webhook_url: str, reason: str, **kwargs):\n62 |         message = f\"Failed to create TypeForm webhook for URL {webhook_url}: {reason}\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:70:1\n   |\n68 | class TypeFormWebhookNotFoundError(TypeFormWebhookError):\n69 |     \"\"\"Raised when a webhook cannot be found for deletion/update.\"\"\"\n70 |     \n   | ^^^^\n71 |     def __init__(self, webhook_id: str, **kwargs):\n72 |         message = f\"TypeForm webhook not found: {webhook_id}\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:80:1\n   |\n78 | class WebhookConfigurationError(TypeFormWebhookError):\n79 |     \"\"\"Base exception for webhook configuration and management errors.\"\"\"\n80 |     \n   | ^^^^\n81 |     def __init__(self, message: str, form_id: Optional[str] = None, **kwargs):\n82 |         super().__init__(message, **kwargs)\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:81:47\n   |\n79 |     \"\"\"Base exception for webhook configuration and management errors.\"\"\"\n80 |     \n81 |     def __init__(self, message: str, form_id: Optional[str] = None, **kwargs):\n   |                                               ^^^^^^^^^^^^^\n82 |         super().__init__(message, **kwargs)\n83 |         self.form_id = form_id\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/exceptions.py:88:1\n   |\n86 | class FormOwnershipError(WebhookConfigurationError):\n87 |     \"\"\"Raised when form ownership validation fails during webhook management.\"\"\"\n88 |     \n   | ^^^^\n89 |     def __init__(self, form_id: str, user_id: Optional[int] = None, **kwargs):\n90 |         if user_id:\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/exceptions.py:89:47\n   |\n87 |     \"\"\"Raised when form ownership validation fails during webhook management.\"\"\"\n88 |     \n89 |     def __init__(self, form_id: str, user_id: Optional[int] = None, **kwargs):\n   |                                               ^^^^^^^^^^^^^\n90 |         if user_id:\n91 |             message = f\"User {user_id} does not own TypeForm form {form_id}\"\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:100:1\n    |\n 98 | class WebhookAlreadyExistsError(WebhookConfigurationError):\n 99 |     \"\"\"Raised when attempting to create a webhook that already exists.\"\"\"\n100 |     \n    | ^^^^\n101 |     def __init__(self, form_id: str, webhook_tag: str, **kwargs):\n102 |         message = f\"Webhook with tag '{webhook_tag}' already exists for form {form_id}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:109:1\n    |\n107 | class WebhookOperationError(WebhookConfigurationError):\n108 |     \"\"\"Raised when webhook lifecycle operations fail.\"\"\"\n109 |     \n    | ^^^^\n110 |     def __init__(self, operation: str, form_id: str, reason: str, **kwargs):\n111 |         message = f\"Webhook {operation} operation failed for form {form_id}: {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:119:1\n    |\n117 | class WebhookSynchronizationError(WebhookConfigurationError):\n118 |     \"\"\"Raised when webhook status synchronization between database and TypeForm fails.\"\"\"\n119 |     \n    | ^^^^\n120 |     def __init__(self, form_id: str, sync_issue: str, **kwargs):\n121 |         message = f\"Webhook synchronization failed for form {form_id}: {sync_issue}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:128:1\n    |\n126 | class WebhookStatusError(WebhookConfigurationError):\n127 |     \"\"\"Raised when webhook status checking or validation fails.\"\"\"\n128 |     \n    | ^^^^\n129 |     def __init__(self, form_id: str, status_issue: str, **kwargs):\n130 |         message = f\"Webhook status error for form {form_id}: {status_issue}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:137:1\n    |\n135 | class WebhookLifecycleError(WebhookConfigurationError):\n136 |     \"\"\"Raised when webhook lifecycle management encounters errors.\"\"\"\n137 |     \n    | ^^^^\n138 |     def __init__(self, lifecycle_stage: str, form_id: str, details: str, **kwargs):\n139 |         message = f\"Webhook lifecycle error during {lifecycle_stage} for form {form_id}: {details}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:147:1\n    |\n145 | class BulkWebhookOperationError(WebhookConfigurationError):\n146 |     \"\"\"Raised when bulk webhook operations encounter failures.\"\"\"\n147 |     \n    | ^^^^\n148 |     def __init__(self, total_operations: int, failed_operations: int, error_details: Dict[str, str], **kwargs):\n149 |         message = f\"Bulk webhook operation failed: {failed_operations}/{total_operations} operations failed\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/exceptions.py:148:86\n    |\n146 |     \"\"\"Raised when bulk webhook operations encounter failures.\"\"\"\n147 |     \n148 |     def __init__(self, total_operations: int, failed_operations: int, error_details: Dict[str, str], **kwargs):\n    |                                                                                      ^^^^\n149 |         message = f\"Bulk webhook operation failed: {failed_operations}/{total_operations} operations failed\"\n150 |         super().__init__(message, **kwargs)\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:159:1\n    |\n157 | class TypeFormRateLimitError(Exception):\n158 |     \"\"\"Raised when TypeForm API rate limit is exceeded.\"\"\"\n159 |     \n    | ^^^^\n160 |     def __init__(self, message: str, status_code: Optional[int] = None, response_data: Optional[Dict] = None, retry_after: Optional[i\u2026\n161 |         self.message = message\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:160:51\n    |\n158 |     \"\"\"Raised when TypeForm API rate limit is exceeded.\"\"\"\n159 |     \n160 |     def __init__(self, message: str, status_code: Optional[int] = None, response_data: Optional[Dict] = None, retry_after: Optional[i\u2026\n    |                                                   ^^^^^^^^^^^^^\n161 |         self.message = message\n162 |         self.status_code = status_code\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:160:88\n    |\n158 |     \"\"\"Raised when TypeForm API rate limit is exceeded.\"\"\"\n159 |     \n160 |     def __init__(self, message: str, status_code: Optional[int] = None, response_data: Optional[Dict] = None, retry_after: Optional[i\u2026\n    |                                                                                        ^^^^^^^^^^^^^^\n161 |         self.message = message\n162 |         self.status_code = status_code\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/exceptions.py:160:97\n    |\n158 |     \"\"\"Raised when TypeForm API rate limit is exceeded.\"\"\"\n159 |     \n160 |     def __init__(self, message: str, status_code: Optional[int] = None, response_data: Optional[Dict] = None, retry_after: Optional[i\u2026\n    |                                                                                                 ^^^^\n161 |         self.message = message\n162 |         self.status_code = status_code\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:160:124\n    |\n158 | \u2026\n159 | \u2026\n160 | \u2026= None, response_data: Optional[Dict] = None, retry_after: Optional[int] = None):\n    |                                                             ^^^^^^^^^^^^^\n161 | \u2026\n162 | \u2026\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:170:1\n    |\n168 | class FormValidationError(TypeFormAPIError):\n169 |     \"\"\"Raised when form configuration validation fails.\"\"\"\n170 |     \n    | ^^^^\n171 |     def __init__(self, field: str, value: Any, reason: str, **kwargs):\n172 |         message = f\"Form validation failed for field '{field}' with value '{value}': {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:181:1\n    |\n179 | class WebhookSecurityError(ClientOnboardingError):\n180 |     \"\"\"Raised when webhook security validation fails.\"\"\"\n181 |     \n    | ^^^^\n182 |     def __init__(self, reason: str, **kwargs):\n183 |         message = f\"Webhook security validation failed: {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:190:1\n    |\n188 | class WebhookSignatureError(WebhookSecurityError):\n189 |     \"\"\"Raised when webhook signature verification fails.\"\"\"\n190 |     \n    | ^^^^\n191 |     def __init__(self, \n192 |                  reason: str,\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:191:23\n    |\n189 |     \"\"\"Raised when webhook signature verification fails.\"\"\"\n190 |     \n191 |     def __init__(self, \n    |                       ^\n192 |                  reason: str,\n193 |                  expected_signature: Optional[str] = None, \n    |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:193:38\n    |\n191 |     def __init__(self, \n192 |                  reason: str,\n193 |                  expected_signature: Optional[str] = None, \n    |                                      ^^^^^^^^^^^^^\n194 |                  received_signature: Optional[str] = None,\n195 |                  source_ip: Optional[str] = None,\n    |\nhelp: Convert to `X | None`\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:193:59\n    |\n191 |     def __init__(self, \n192 |                  reason: str,\n193 |                  expected_signature: Optional[str] = None, \n    |                                                           ^\n194 |                  received_signature: Optional[str] = None,\n195 |                  source_ip: Optional[str] = None,\n    |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:194:38\n    |\n192 |                  reason: str,\n193 |                  expected_signature: Optional[str] = None, \n194 |                  received_signature: Optional[str] = None,\n    |                                      ^^^^^^^^^^^^^\n195 |                  source_ip: Optional[str] = None,\n196 |                  payload_hash: Optional[str] = None,\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:195:29\n    |\n193 |                  expected_signature: Optional[str] = None, \n194 |                  received_signature: Optional[str] = None,\n195 |                  source_ip: Optional[str] = None,\n    |                             ^^^^^^^^^^^^^\n196 |                  payload_hash: Optional[str] = None,\n197 |                  **kwargs):\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:196:32\n    |\n194 |                  received_signature: Optional[str] = None,\n195 |                  source_ip: Optional[str] = None,\n196 |                  payload_hash: Optional[str] = None,\n    |                                ^^^^^^^^^^^^^\n197 |                  **kwargs):\n198 |         message = f\"Webhook signature verification failed: {reason}\"\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:205:1\n    |\n203 |         self.source_ip = source_ip\n204 |         self.payload_hash = payload_hash\n205 |         \n    | ^^^^^^^^\n206 |     def to_dict(self) -> Dict[str, Any]:\n207 |         \"\"\"Convert exception details to dictionary for logging.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/exceptions.py:206:26\n    |\n204 |         self.payload_hash = payload_hash\n205 |         \n206 |     def to_dict(self) -> Dict[str, Any]:\n    |                          ^^^^\n207 |         \"\"\"Convert exception details to dictionary for logging.\"\"\"\n208 |         return {\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:220:1\n    |\n218 | class WebhookPayloadError(ClientOnboardingError):\n219 |     \"\"\"Raised when webhook payload processing fails.\"\"\"\n220 |     \n    | ^^^^\n221 |     def __init__(self, payload_issue: str, payload_data: Optional[Dict[str, Any]] = None, **kwargs):\n222 |         message = f\"Webhook payload processing failed: {payload_issue}\"\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:221:58\n    |\n219 |     \"\"\"Raised when webhook payload processing fails.\"\"\"\n220 |     \n221 |     def __init__(self, payload_issue: str, payload_data: Optional[Dict[str, Any]] = None, **kwargs):\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^\n222 |         message = f\"Webhook payload processing failed: {payload_issue}\"\n223 |         super().__init__(message, **kwargs)\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/exceptions.py:221:67\n    |\n219 |     \"\"\"Raised when webhook payload processing fails.\"\"\"\n220 |     \n221 |     def __init__(self, payload_issue: str, payload_data: Optional[Dict[str, Any]] = None, **kwargs):\n    |                                                                   ^^^^\n222 |         message = f\"Webhook payload processing failed: {payload_issue}\"\n223 |         super().__init__(message, **kwargs)\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:230:1\n    |\n228 | class OnboardingFormNotFoundError(ClientOnboardingError):\n229 |     \"\"\"Raised when an onboarding form cannot be found in the database.\"\"\"\n230 |     \n    | ^^^^\n231 |     def __init__(self, identifier: str, identifier_type: str = \"id\", **kwargs):\n232 |         message = f\"Onboarding form not found by {identifier_type}: {identifier}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:240:1\n    |\n238 | class OnboardingFormAccessError(ClientOnboardingError):\n239 |     \"\"\"Raised when user lacks access to an onboarding form.\"\"\"\n240 |     \n    | ^^^^\n241 |     def __init__(self, user_id: str, form_id: int, **kwargs):\n242 |         message = f\"User {user_id} does not have access to onboarding form {form_id}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:250:1\n    |\n248 | class FormResponseProcessingError(ClientOnboardingError):\n249 |     \"\"\"Raised when form response processing fails.\"\"\"\n250 |     \n    | ^^^^\n251 |     def __init__(self, response_id: str, processing_stage: str, reason: str, **kwargs):\n252 |         message = f\"Form response processing failed at stage '{processing_stage}' for response {response_id}: {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:261:1\n    |\n259 | class DatabaseOperationError(ClientOnboardingError):\n260 |     \"\"\"Raised when database operations fail in the onboarding context.\"\"\"\n261 |     \n    | ^^^^\n262 |     def __init__(self, operation: str, entity: str, reason: str, **kwargs):\n263 |         message = f\"Database operation '{operation}' failed for entity '{entity}': {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:272:1\n    |\n270 | class ConfigurationError(ClientOnboardingError):\n271 |     \"\"\"Raised when configuration validation fails.\"\"\"\n272 |     \n    | ^^^^\n273 |     def __init__(self, config_key: str, issue: str, **kwargs):\n274 |         message = f\"Configuration error for key '{config_key}': {issue}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:283:1\n    |\n281 | class WebhookRetryError(WebhookConfigurationError):\n282 |     \"\"\"Base exception for webhook retry operations.\"\"\"\n283 |     \n    | ^^^^\n284 |     def __init__(self, webhook_id: str, reason: str, **kwargs):\n285 |         message = f\"Webhook retry failed for {webhook_id}: {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:293:1\n    |\n291 | class WebhookRetryPolicyViolationError(WebhookRetryError):\n292 |     \"\"\"Raised when retry policy constraints are violated.\"\"\"\n293 |     \n    | ^^^^\n294 |     def __init__(self, webhook_id: str, policy_violation: str, **kwargs):\n295 |         reason = f\"Retry policy violation: {policy_violation}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:302:1\n    |\n300 | class WebhookRetryExecutionError(WebhookRetryError):\n301 |     \"\"\"Raised when retry execution fails.\"\"\"\n302 |     \n    | ^^^^\n303 |     def __init__(self, webhook_id: str, execution_error: str, **kwargs):\n304 |         reason = f\"Retry execution error: {execution_error}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:311:1\n    |\n309 | class WebhookMaxRetriesExceededError(WebhookRetryError):\n310 |     \"\"\"Raised when maximum retry attempts are exceeded.\"\"\"\n311 |     \n    | ^^^^\n312 |     def __init__(self, webhook_id: str, max_attempts: int, current_attempts: int, **kwargs):\n313 |         reason = f\"Maximum retry attempts exceeded: {current_attempts}/{max_attempts}\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:321:1\n    |\n319 | class WebhookRetryDurationExceededError(WebhookRetryError):\n320 |     \"\"\"Raised when maximum retry duration is exceeded.\"\"\"\n321 |     \n    | ^^^^\n322 |     def __init__(self, webhook_id: str, max_duration_hours: int, actual_duration_hours: float, **kwargs):\n323 |         reason = f\"Maximum retry duration exceeded: {actual_duration_hours:.1f}h/{max_duration_hours}h\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:331:1\n    |\n329 | class WebhookPermanentlyDisabledError(WebhookRetryError):\n330 |     \"\"\"Raised when webhook is permanently disabled due to failure conditions.\"\"\"\n331 |     \n    | ^^^^\n332 |     def __init__(self, webhook_id: str, disable_reason: str, status_code: Optional[int] = None, **kwargs):\n333 |         reason = f\"Webhook permanently disabled: {disable_reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/exceptions.py:332:75\n    |\n330 |     \"\"\"Raised when webhook is permanently disabled due to failure conditions.\"\"\"\n331 |     \n332 |     def __init__(self, webhook_id: str, disable_reason: str, status_code: Optional[int] = None, **kwargs):\n    |                                                                           ^^^^^^^^^^^^^\n333 |         reason = f\"Webhook permanently disabled: {disable_reason}\"\n334 |         if status_code:\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:343:1\n    |\n341 | class WebhookRetryQueueError(WebhookRetryError):\n342 |     \"\"\"Raised when retry queue operations fail.\"\"\"\n343 |     \n    | ^^^^\n344 |     def __init__(self, webhook_id: str, queue_operation: str, reason: str, **kwargs):\n345 |         error_reason = f\"Retry queue {queue_operation} failed: {reason}\"\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/client_onboarding/core/services/exceptions.py:347:47\n    |\n345 |         error_reason = f\"Retry queue {queue_operation} failed: {reason}\"\n346 |         super().__init__(webhook_id, error_reason, **kwargs)\n347 |         self.queue_operation = queue_operation \n    |                                               ^\n    |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n   --> src/contexts/client_onboarding/core/services/exceptions.py:347:48\n    |\n345 |         error_reason = f\"Retry queue {queue_operation} failed: {reason}\"\n346 |         super().__init__(webhook_id, error_reason, **kwargs)\n347 |         self.queue_operation = queue_operation \n    |                                                ^\n    |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/integrations/typeform/client.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | import json\n 4 | |\n 5 | | # Relocated content from services/typeform_client.py\n 6 | | import logging\n 7 | | import time\n 8 | | from collections import deque\n 9 | | from datetime import UTC, datetime\n10 | | from typing import Any\n11 | | from urllib.parse import urljoin\n12 | |\n13 | | import anyio\n14 | | import boto3\n15 | | import httpx\n16 | | from anyio import to_thread\n17 | | from boto3.session import Session as Boto3Session\n18 | | from botocore.config import Config as BotoConfig\n19 | | from pydantic import BaseModel, ConfigDict, ValidationError\n20 | |\n21 | | from src.contexts.client_onboarding.config import config\n22 | | from src.contexts.client_onboarding.core.services.exceptions import (\n23 | |     FormValidationError,\n24 | |     TypeFormAPIError,\n25 | |     TypeFormAuthenticationError,\n26 | |     TypeFormFormNotFoundError,\n27 | |     TypeFormRateLimitError,\n28 | |     TypeFormWebhookCreationError,\n29 | |     TypeFormWebhookNotFoundError,\n30 | | )\n31 | | from src.logging.logger import correlation_id_ctx\n   | |_________________________________________________^\n32 |\n33 |   logger = logging.getLogger(__name__)\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/uow.py:7:1\n   |\n 5 |   \"\"\"\n 6 |\n 7 | / from __future__ import annotations\n 8 | |\n 9 | | from src.contexts.client_onboarding.core.adapters.repositories import (\n10 | |     OnboardingFormRepo,\n11 | |     FormResponseRepo\n12 | | )\n13 | | from src.contexts.seedwork.shared.services.uow import UnitOfWork as SeedUnitOfWork\n   | |__________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/uow.py:19:1\n   |\n17 |     \"\"\"\n18 |     Unit of Work for client onboarding context.\n19 |     \n   | ^^^^\n20 |     Provides access to onboarding form and form response repositories\n21 |     with async session management.\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/client_onboarding/core/services/uow.py:23:1\n   |\n21 |     with async session management.\n22 |     \"\"\"\n23 |     \n   | ^^^^\n24 |     async def __aenter__(self):\n25 |         await super().__aenter__()\n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/client_onboarding/core/services/uow.py:28:20\n   |\n26 |         self.onboarding_forms = OnboardingFormRepo(self.session)\n27 |         self.form_responses = FormResponseRepo(self.session)\n28 |         return self \n   |                    ^\n   |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n  --> src/contexts/client_onboarding/core/services/uow.py:28:21\n   |\n26 |         self.onboarding_forms = OnboardingFormRepo(self.session)\n27 |         self.form_responses = FormResponseRepo(self.session)\n28 |         return self \n   |                     ^\n   |\nhelp: Add trailing newline\n\nRUF003 Comment contains ambiguous `\u2013` (EN DASH). Did you mean `-` (HYPHEN-MINUS)?\n  --> src/contexts/client_onboarding/core/services/webhooks/manager.py:96:44\n   |\n94 |                 raise\n95 |             except TypeFormAuthenticationError as e:\n96 |                 # Auth/permission problems \u2013 bubble up as-is\n   |                                            ^\n97 |                 logger.error(f\"TypeForm authentication/authorization failed: {e}\")\n98 |                 raise\n   |\n\nRUF003 Comment contains ambiguous `\u2013` (EN DASH). Did you mean `-` (HYPHEN-MINUS)?\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:100:56\n    |\n 98 |                 raise\n 99 |             except TypeFormAPIError as e:\n100 |                 # API-level error surfaced from client \u2013 re-raise for accurate handling\n    |                                                        ^\n101 |                 logger.error(f\"TypeForm API error while validating form: {e}\")\n102 |                 raise\n    |\n\nRUF003 Comment contains ambiguous `\u2013` (EN DASH). Did you mean `-` (HYPHEN-MINUS)?\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:104:60\n    |\n102 |                 raise\n103 |             except Exception as e:\n104 |                 # Network/connectivity or unexpected error \u2013 don't mask as 404\n    |                                                            ^\n105 |                 logger.error(\n106 |                     f\"Network or unexpected error contacting TypeForm: {e}\",\n    |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:108:17\n    |\n106 |                       f\"Network or unexpected error contacting TypeForm: {e}\",\n107 |                   )\n108 | /                 raise TypeFormAPIError(\n109 | |                     message=\"Network error while contacting TypeForm\",\n110 | |                     status_code=503,\n111 | |                     response_data={\"detail\": str(e)},\n112 | |                 )\n    | |_________________^\n113 |\n114 |           webhook_url = webhook_url or config.webhook_endpoint_url\n    |\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:451:13\n    |\n449 |                   issues.append(\"Database and TypeForm webhook status not synchronized\")\n450 |\n451 | /             if webhook_exists and webhook_info and onboarding_form.webhook_url:\n452 | |                 if webhook_info.url != onboarding_form.webhook_url:\n    | |___________________________________________________________________^\n453 |                       issues.append(\n454 |                           f\"Webhook URL mismatch: DB={onboarding_form.webhook_url}, TypeForm={webhook_info.url}\"\n    |\nhelp: Combine `if` statements using `and`\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:607:13\n    |\n605 |               return form_info\n606 |           except TypeFormFormNotFoundError:\n607 | /             raise FormOwnershipError(\n608 | |                 typeform_id, message=f\"Form {typeform_id} not found or access denied\"\n609 | |             )\n    | |_____________^\n610 |           except TypeFormAuthenticationError:\n611 |               raise FormOwnershipError(\n    |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> src/contexts/client_onboarding/core/services/webhooks/manager.py:611:13\n    |\n609 |               )\n610 |           except TypeFormAuthenticationError:\n611 | /             raise FormOwnershipError(\n612 | |                 typeform_id,\n613 | |                 message=f\"Invalid API key or insufficient permissions for form {typeform_id}\",\n614 | |             )\n    | |_____________^\n615 |\n616 |       async def _create_onboarding_form_record(\n    |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | import json\n 4 | | import logging\n 5 | | from typing import Dict, Any, Optional, List, Tuple\n 6 | | from datetime import datetime, timezone\n 7 | | from dataclasses import dataclass\n 8 | | import unicodedata\n 9 | |\n10 | | from src.contexts.client_onboarding.core.services.uow import UnitOfWork\n11 | | from src.contexts.client_onboarding.core.domain.models.form_response import FormResponse\n12 | | from src.contexts.client_onboarding.core.services.exceptions import (\n13 | |     WebhookPayloadError,\n14 | |     FormResponseProcessingError,\n15 | |     OnboardingFormNotFoundError,\n16 | |     DatabaseOperationError,\n17 | | )\n18 | | from src.contexts.client_onboarding.core.services.webhooks.security import WebhookSecurityVerifier\n   | |__________________________________________________________________________________________________^\n19 |\n20 |   logger = logging.getLogger(__name__)\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/client_onboarding/core/services/webhooks/processor.py:5:1\n  |\n3 | import json\n4 | import logging\n5 | from typing import Dict, Any, Optional, List, Tuple\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | from datetime import datetime, timezone\n7 | from dataclasses import dataclass\n  |\n\nUP035 `typing.List` is deprecated, use `list` instead\n --> src/contexts/client_onboarding/core/services/webhooks/processor.py:5:1\n  |\n3 | import json\n4 | import logging\n5 | from typing import Dict, Any, Optional, List, Tuple\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | from datetime import datetime, timezone\n7 | from dataclasses import dataclass\n  |\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n --> src/contexts/client_onboarding/core/services/webhooks/processor.py:5:1\n  |\n3 | import json\n4 | import logging\n5 | from typing import Dict, Any, Optional, List, Tuple\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | from datetime import datetime, timezone\n7 | from dataclasses import dataclass\n  |\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:29:16\n   |\n27 |     question: str\n28 |     answer: Any\n29 |     field_ref: Optional[str] = None\n   |                ^^^^^^^^^^^^^\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:39:22\n   |\n37 |     response_token: str\n38 |     submitted_at: datetime\n39 |     field_responses: List[FormFieldResponse]\n   |                      ^^^^\n40 |     metadata: Dict[str, Any]\n41 |     client_identifiers: Dict[str, str]\n   |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:40:15\n   |\n38 |     submitted_at: datetime\n39 |     field_responses: List[FormFieldResponse]\n40 |     metadata: Dict[str, Any]\n   |               ^^^^\n41 |     client_identifiers: Dict[str, str]\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:41:25\n   |\n39 |     field_responses: List[FormFieldResponse]\n40 |     metadata: Dict[str, Any]\n41 |     client_identifiers: Dict[str, str]\n   |                         ^^^^\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:48:59\n   |\n46 |         self.uow = uow\n47 |\n48 |     async def process_webhook_payload(self, payload_dict: Dict[str, Any]) -> ProcessedWebhookData:\n   |                                                           ^^^^\n49 |         try:\n50 |             logger.info(f\"Processing webhook payload for event: {payload_dict.get('event_id', 'unknown')}\")\n   |\nhelp: Replace with `dict`\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:69:73\n   |\n67 |             raise\n68 |         except Exception as e:\n69 |             error_msg = f\"Unexpected error processing webhook payload: {str(e)}\"\n   |                                                                         ^^^^^^\n70 |             logger.error(error_msg, exc_info=True)\n71 |             raise FormResponseProcessingError(\"unknown\", \"payload_processing\", error_msg) from e\n   |\nhelp: Replace with conversion flag\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:73:55\n   |\n71 |             raise FormResponseProcessingError(\"unknown\", \"payload_processing\", error_msg) from e\n72 |\n73 |     async def _extract_event_info(self, payload_dict: Dict[str, Any]) -> Dict[str, Any]:\n   |                                                       ^^^^\n74 |         try:\n75 |             form_response = payload_dict.get('form_response', {})\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:73:74\n   |\n71 |             raise FormResponseProcessingError(\"unknown\", \"payload_processing\", error_msg) from e\n72 |\n73 |     async def _extract_event_info(self, payload_dict: Dict[str, Any]) -> Dict[str, Any]:\n   |                                                                          ^^^^\n74 |         try:\n75 |             form_response = payload_dict.get('form_response', {})\n   |\nhelp: Replace with `dict`\n\nUP017 [*] Use `datetime.UTC` alias\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:81:56\n   |\n79 |             try:\n80 |                 submitted_at = datetime.fromisoformat(submitted_at_str.replace('Z', '+00:00'))\n81 |                 submitted_at = submitted_at.astimezone(timezone.utc).replace(tzinfo=None)\n   |                                                        ^^^^^^^^^^^^\n82 |             except ValueError as e:\n83 |                 raise WebhookPayloadError(f\"Invalid submitted_at format: {submitted_at_str}\") from e\n   |\nhelp: Convert to `datetime.UTC` alias\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/client_onboarding/core/services/webhooks/processor.py:94:71\n   |\n92 |             if isinstance(e, WebhookPayloadError):\n93 |                 raise\n94 |             raise WebhookPayloadError(f\"Error extracting event info: {str(e)}\") from e\n   |                                                                       ^^^^^^\n95 |\n96 |     async def _verify_form_exists(self, form_id: str) -> None:\n   |\nhelp: Replace with conversion flag\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:107:60\n    |\n105 |             raise DatabaseOperationError(\"form_verification\", \"onboarding_form\", str(e)) from e\n106 |\n107 |     async def _process_form_responses(self, form_response: Dict[str, Any]) -> List[FormFieldResponse]:\n    |                                                            ^^^^\n108 |         try:\n109 |             answers = form_response.get('answers', [])\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:107:79\n    |\n105 |             raise DatabaseOperationError(\"form_verification\", \"onboarding_form\", str(e)) from e\n106 |\n107 |     async def _process_form_responses(self, form_response: Dict[str, Any]) -> List[FormFieldResponse]:\n    |                                                                               ^^^^\n108 |         try:\n109 |             answers = form_response.get('answers', [])\n    |\nhelp: Replace with `list`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:112:30\n    |\n110 |             if not isinstance(answers, list):\n111 |                 raise WebhookPayloadError(\"Form answers must be a list\")\n112 |             field_responses: List[FormFieldResponse] = []\n    |                              ^^^^\n113 |             for answer in answers:\n114 |                 if not isinstance(answer, dict):\n    |\nhelp: Replace with `list`\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:129:75\n    |\n127 |             if isinstance(e, WebhookPayloadError):\n128 |                 raise\n129 |             raise WebhookPayloadError(f\"Error processing form responses: {str(e)}\") from e\n    |                                                                           ^^^^^^\n130 |\n131 |     async def _parse_field_answer(self, answer: Dict[str, Any]) -> Optional[FormFieldResponse]:\n    |\nhelp: Replace with conversion flag\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:131:49\n    |\n129 |             raise WebhookPayloadError(f\"Error processing form responses: {str(e)}\") from e\n130 |\n131 |     async def _parse_field_answer(self, answer: Dict[str, Any]) -> Optional[FormFieldResponse]:\n    |                                                 ^^^^\n132 |         try:\n133 |             field_info = answer.get('field', {})\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:131:68\n    |\n129 |             raise WebhookPayloadError(f\"Error processing form responses: {str(e)}\") from e\n130 |\n131 |     async def _parse_field_answer(self, answer: Dict[str, Any]) -> Optional[FormFieldResponse]:\n    |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n132 |         try:\n133 |             field_info = answer.get('field', {})\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:153:51\n    |\n151 |             return None\n152 |\n153 |     async def _extract_answer_value(self, answer: Dict[str, Any], field_type: str) -> Any:\n    |                                                   ^^^^\n154 |         answer_data = answer.get('answer', answer)\n155 |         if field_type in ['short_text', 'long_text']:\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:187:66\n    |\n185 |             return answer_data\n186 |\n187 |     async def _extract_client_identifiers(self, field_responses: List[FormFieldResponse]) -> Dict[str, str]:\n    |                                                                  ^^^^\n188 |         identifiers: Dict[str, str] = {}\n    |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:187:94\n    |\n185 |             return answer_data\n186 |\n187 |     async def _extract_client_identifiers(self, field_responses: List[FormFieldResponse]) -> Dict[str, str]:\n    |                                                                                              ^^^^\n188 |         identifiers: Dict[str, str] = {}\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:188:22\n    |\n187 |     async def _extract_client_identifiers(self, field_responses: List[FormFieldResponse]) -> Dict[str, str]:\n188 |         identifiers: Dict[str, str] = {}\n    |                      ^^^^\n189 |\n190 |         def normalize_text(value: Optional[str]) -> str:\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:190:35\n    |\n188 |         identifiers: Dict[str, str] = {}\n189 |\n190 |         def normalize_text(value: Optional[str]) -> str:\n    |                                   ^^^^^^^^^^^^^\n191 |             if not value:\n192 |                 return ''\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:200:31\n    |\n198 |             )\n199 |\n200 |         def matches_any(text: Optional[str], patterns: List[str]) -> bool:\n    |                               ^^^^^^^^^^^^^\n201 |             norm = normalize_text(text)\n202 |             return any(p in norm for p in patterns)\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:200:56\n    |\n198 |             )\n199 |\n200 |         def matches_any(text: Optional[str], patterns: List[str]) -> bool:\n    |                                                        ^^^^\n201 |             norm = normalize_text(text)\n202 |             return any(p in norm for p in patterns)\n    |\nhelp: Replace with `list`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:217:25\n    |\n216 |         # Prepare collections to build richer identifiers\n217 |         first_name_val: Optional[str] = None\n    |                         ^^^^^^^^^^^^^\n218 |         last_name_val: Optional[str] = None\n219 |         full_name_val: Optional[str] = None\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:218:24\n    |\n216 |         # Prepare collections to build richer identifiers\n217 |         first_name_val: Optional[str] = None\n218 |         last_name_val: Optional[str] = None\n    |                        ^^^^^^^^^^^^^\n219 |         full_name_val: Optional[str] = None\n220 |         gender_val: Optional[str] = None\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:219:24\n    |\n217 |         first_name_val: Optional[str] = None\n218 |         last_name_val: Optional[str] = None\n219 |         full_name_val: Optional[str] = None\n    |                        ^^^^^^^^^^^^^\n220 |         gender_val: Optional[str] = None\n221 |         birthday_val: Optional[str] = None\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:220:21\n    |\n218 |         last_name_val: Optional[str] = None\n219 |         full_name_val: Optional[str] = None\n220 |         gender_val: Optional[str] = None\n    |                     ^^^^^^^^^^^^^\n221 |         birthday_val: Optional[str] = None\n222 |         address_parts: Dict[str, str] = {}\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:221:23\n    |\n219 |         full_name_val: Optional[str] = None\n220 |         gender_val: Optional[str] = None\n221 |         birthday_val: Optional[str] = None\n    |                       ^^^^^^^^^^^^^\n222 |         address_parts: Dict[str, str] = {}\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:222:24\n    |\n220 |         gender_val: Optional[str] = None\n221 |         birthday_val: Optional[str] = None\n222 |         address_parts: Dict[str, str] = {}\n    |                        ^^^^\n223 |\n224 |         # 2) Secondary detection using ref/title keywords to enrich with names, gender, birthday, address\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:349:53\n    |\n347 |         return identifiers\n348 |\n349 |     async def _extract_metadata(self, payload_dict: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                     ^^^^\n350 |         form_response = payload_dict.get('form_response', {})\n351 |         metadata = {\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:349:72\n    |\n347 |         return identifiers\n348 |\n349 |     async def _extract_metadata(self, payload_dict: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                                        ^^^^\n350 |         form_response = payload_dict.get('form_response', {})\n351 |         metadata = {\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:369:29\n    |\n367 |                 raise OnboardingFormNotFoundError(f\"Form not found: {processed_data.form_id}\")\n368 |\n369 |             answers_by_ref: Dict[str, Dict[str, Any]] = {}\n    |                             ^^^^\n370 |             answers_without_ref: List[Dict[str, Any]] = []\n371 |             for fr in processed_data.field_responses:\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:369:39\n    |\n367 |                 raise OnboardingFormNotFoundError(f\"Form not found: {processed_data.form_id}\")\n368 |\n369 |             answers_by_ref: Dict[str, Dict[str, Any]] = {}\n    |                                       ^^^^\n370 |             answers_without_ref: List[Dict[str, Any]] = []\n371 |             for fr in processed_data.field_responses:\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:370:34\n    |\n369 |             answers_by_ref: Dict[str, Dict[str, Any]] = {}\n370 |             answers_without_ref: List[Dict[str, Any]] = []\n    |                                  ^^^^\n371 |             for fr in processed_data.field_responses:\n372 |                 answer_entry: Dict[str, Any] = {\n    |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:370:39\n    |\n369 |             answers_by_ref: Dict[str, Dict[str, Any]] = {}\n370 |             answers_without_ref: List[Dict[str, Any]] = []\n    |                                       ^^^^\n371 |             for fr in processed_data.field_responses:\n372 |                 answer_entry: Dict[str, Any] = {\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:372:31\n    |\n370 |             answers_without_ref: List[Dict[str, Any]] = []\n371 |             for fr in processed_data.field_responses:\n372 |                 answer_entry: Dict[str, Any] = {\n    |                               ^^^^\n373 |                     \"field\": {\n374 |                         \"id\": fr.field_id,\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:396:36\n    |\n394 |                     answers_without_ref.append(answer_entry)\n395 |\n396 |             reconstructed_answers: List[Dict[str, Any]] = []\n    |                                    ^^^^\n397 |             reconstructed_answers.extend(answers_without_ref)\n398 |             reconstructed_answers.extend(answers_by_ref.values())\n    |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:396:41\n    |\n394 |                     answers_without_ref.append(answer_entry)\n395 |\n396 |             reconstructed_answers: List[Dict[str, Any]] = []\n    |                                         ^^^^\n397 |             reconstructed_answers.extend(answers_without_ref)\n398 |             reconstructed_answers.extend(answers_by_ref.values())\n    |\nhelp: Replace with `dict`\n\nUP038 Use `X | Y` in `isinstance` call instead of `(X, Y)`\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:434:16\n    |\n432 |         except Exception as e:\n433 |             await self.uow.rollback()\n434 |             if isinstance(e, (OnboardingFormNotFoundError, DatabaseOperationError)):\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n435 |                 raise\n436 |             error_msg = f\"Error storing form response: {str(e)}\"\n    |\nhelp: Convert to `X | Y`\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:436:57\n    |\n434 |             if isinstance(e, (OnboardingFormNotFoundError, DatabaseOperationError)):\n435 |                 raise\n436 |             error_msg = f\"Error storing form response: {str(e)}\"\n    |                                                         ^^^^^^\n437 |             logger.error(error_msg, exc_info=True)\n438 |             raise DatabaseOperationError(\"form_response_creation\", \"form_response\", error_msg) from e\n    |\nhelp: Replace with conversion flag\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:445:60\n    |\n443 |         self.uow_factory = uow_factory\n444 |\n445 |     async def process_webhook(self, payload: str, headers: Dict[str, str]) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                            ^^^^\n446 |         async with self.uow_factory() as uow:\n447 |             try:\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:445:79\n    |\n443 |         self.uow_factory = uow_factory\n444 |\n445 |     async def process_webhook(self, payload: str, headers: Dict[str, str]) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                               ^^^^^\n446 |         async with self.uow_factory() as uow:\n447 |             try:\n    |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:445:91\n    |\n443 |         self.uow_factory = uow_factory\n444 |\n445 |     async def process_webhook(self, payload: str, headers: Dict[str, str]) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                                           ^^^^^^^^^^^^^\n446 |         async with self.uow_factory() as uow:\n447 |             try:\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:445:106\n    |\n443 |         self.uow_factory = uow_factory\n444 |\n445 |     async def process_webhook(self, payload: str, headers: Dict[str, str]) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                                                          ^^^^^^^^^^^^^\n446 |         async with self.uow_factory() as uow:\n447 |             try:\n    |\nhelp: Convert to `X | None`\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:452:60\n    |\n450 |                     payload_dict = json.loads(payload)\n451 |                 except json.JSONDecodeError as e:\n452 |                     return False, f\"Invalid JSON payload: {str(e)}\", None\n    |                                                            ^^^^^^\n453 |                 processed_data = await processor.process_webhook_payload(payload_dict)\n454 |                 response_id = await processor.store_form_response(processed_data)\n    |\nhelp: Replace with conversion flag\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:455:17\n    |\n453 |                   processed_data = await processor.process_webhook_payload(payload_dict)\n454 |                   response_id = await processor.store_form_response(processed_data)\n455 | /                 try:\n456 | |                     await WebhookSecurityVerifier.mark_request_processed(payload, headers)\n457 | |                 except Exception:\n458 | |                     pass\n    | |________________________^\n459 |                   return True, None, response_id\n460 |               except Exception as e:\n    |\nhelp: Replace with `contextlib.suppress(Exception)`\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:461:60\n    |\n459 |                 return True, None, response_id\n460 |             except Exception as e:\n461 |                 logger.error(f\"Webhook processing failed: {str(e)}\", exc_info=True)\n    |                                                            ^^^^^^\n462 |                 return False, str(e), None\n    |\nhelp: Replace with conversion flag\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:465:59\n    |\n465 | async def process_typeform_webhook(payload: str, headers: Dict[str, str], uow_factory) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                           ^^^^\n466 |     processor = WebhookProcessor(uow_factory)\n467 |     return await processor.process_webhook(payload, headers)\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:465:91\n    |\n465 | async def process_typeform_webhook(payload: str, headers: Dict[str, str], uow_factory) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                                           ^^^^^\n466 |     processor = WebhookProcessor(uow_factory)\n467 |     return await processor.process_webhook(payload, headers)\n    |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:465:103\n    |\n465 | async def process_typeform_webhook(payload: str, headers: Dict[str, str], uow_factory) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                                                       ^^^^^^^^^^^^^\n466 |     processor = WebhookProcessor(uow_factory)\n467 |     return await processor.process_webhook(payload, headers)\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/processor.py:465:118\n    |\n465 | async def process_typeform_webhook(payload: str, headers: Dict[str, str], uow_factory) -> Tuple[bool, Optional[str], Optional[str]]:\n    |                                                                                                                      ^^^^^^^^^^^^^\n466 |     processor = WebhookProcessor(uow_factory)\n467 |     return await processor.process_webhook(payload, headers)\n    |\nhelp: Convert to `X | None`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | # Directly moved from services/webhook_security.py to webhooks/security.py\n 4 | |\n 5 | | import hmac\n 6 | | import hashlib\n 7 | | import base64\n 8 | | import logging\n 9 | | from typing import Optional, Dict, Tuple, Set\n10 | | from datetime import datetime, timezone\n11 | | import anyio\n12 | | import asyncio\n13 | | import time\n14 | |\n15 | | from src.contexts.client_onboarding.config import config\n16 | | from src.contexts.client_onboarding.core.services.exceptions import (\n17 | |     WebhookSecurityError,\n18 | |     WebhookPayloadError,\n19 | | )\n   | |_^\n20 |\n21 |   logger = logging.getLogger(__name__)\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:9:1\n   |\n 7 | import base64\n 8 | import logging\n 9 | from typing import Optional, Dict, Tuple, Set\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from datetime import datetime, timezone\n11 | import anyio\n   |\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:9:1\n   |\n 7 | import base64\n 8 | import logging\n 9 | from typing import Optional, Dict, Tuple, Set\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from datetime import datetime, timezone\n11 | import anyio\n   |\n\nUP035 `typing.Set` is deprecated, use `set` instead\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:9:1\n   |\n 7 | import base64\n 8 | import logging\n 9 | from typing import Optional, Dict, Tuple, Set\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from datetime import datetime, timezone\n11 | import anyio\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:26:46\n   |\n24 | class WebhookSecurityVerifier:\n25 |     _replay_window_minutes: int = 10\n26 |     _global_replay_cache: dict[str, float] = {}\n   |                                              ^^\n27 |     _global_cache_lock: asyncio.Lock = asyncio.Lock()\n   |\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:29:40\n   |\n27 |     _global_cache_lock: asyncio.Lock = asyncio.Lock()\n28 |\n29 |     def __init__(self, webhook_secret: Optional[str] = None):\n   |                                        ^^^^^^^^^^^^^\n30 |         self.webhook_secret = webhook_secret or config.typeform_webhook_secret\n31 |         self.signature_header = config.webhook_signature_header\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `set` instead of `Set` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:33:35\n   |\n31 |         self.signature_header = config.webhook_signature_header\n32 |         self.max_payload_size = config.max_webhook_payload_size\n33 |         self._processed_requests: Set[str] = set()\n   |                                   ^^^\n34 |         self._cleanup_task = None\n35 |         if not self.webhook_secret:\n   |\nhelp: Replace with `set`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:43:18\n   |\n41 |         self,\n42 |         payload: str,\n43 |         headers: Dict[str, str],\n   |                  ^^^^\n44 |         timestamp_tolerance_minutes: int = 5,\n45 |     ) -> Tuple[bool, Optional[str]]:\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:45:10\n   |\n43 |         headers: Dict[str, str],\n44 |         timestamp_tolerance_minutes: int = 5,\n45 |     ) -> Tuple[bool, Optional[str]]:\n   |          ^^^^^\n46 |         try:\n47 |             if len(payload.encode(\"utf-8\")) > self.max_payload_size:\n   |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:45:22\n   |\n43 |         headers: Dict[str, str],\n44 |         timestamp_tolerance_minutes: int = 5,\n45 |     ) -> Tuple[bool, Optional[str]]:\n   |                      ^^^^^^^^^^^^^\n46 |         try:\n47 |             if len(payload.encode(\"utf-8\")) > self.max_payload_size:\n   |\nhelp: Convert to `X | None`\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:87:74\n   |\n85 |             raise\n86 |         except Exception as e:\n87 |             error_msg = f\"Unexpected error during webhook verification: {str(e)}\"\n   |                                                                          ^^^^^^\n88 |             logger.error(error_msg, exc_info=True)\n89 |             raise WebhookSecurityError(error_msg)\n   |\nhelp: Replace with conversion flag\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:89:13\n   |\n87 |             error_msg = f\"Unexpected error during webhook verification: {str(e)}\"\n88 |             logger.error(error_msg, exc_info=True)\n89 |             raise WebhookSecurityError(error_msg)\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n90 |\n91 |     def _extract_signature(self, headers: Dict[str, str]) -> Optional[str]:\n   |\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:91:43\n   |\n89 |             raise WebhookSecurityError(error_msg)\n90 |\n91 |     def _extract_signature(self, headers: Dict[str, str]) -> Optional[str]:\n   |                                           ^^^^\n92 |         signature_value = headers.get(self.signature_header)\n93 |         if not signature_value:\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/client_onboarding/core/services/webhooks/security.py:91:62\n   |\n89 |             raise WebhookSecurityError(error_msg)\n90 |\n91 |     def _extract_signature(self, headers: Dict[str, str]) -> Optional[str]:\n   |                                                              ^^^^^^^^^^^^^\n92 |         signature_value = headers.get(self.signature_header)\n93 |         if not signature_value:\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:136:24\n    |\n135 |     async def _verify_timestamp(\n136 |         self, headers: Dict[str, str], tolerance_minutes: int\n    |                        ^^^^\n137 |     ) -> bool:\n138 |         timestamp_header = (\n    |\nhelp: Replace with `dict`\n\nUP017 [*] Use `datetime.UTC` alias\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:147:45\n    |\n145 |         try:\n146 |             webhook_timestamp = datetime.fromtimestamp(\n147 |                 float(timestamp_header), tz=timezone.utc\n    |                                             ^^^^^^^^^^^^\n148 |             )\n149 |             current_time = datetime.now(timezone.utc)\n    |\nhelp: Convert to `datetime.UTC` alias\n\nUP017 [*] Use `datetime.UTC` alias\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:149:41\n    |\n147 |                 float(timestamp_header), tz=timezone.utc\n148 |             )\n149 |             current_time = datetime.now(timezone.utc)\n    |                                         ^^^^^^^^^^^^\n150 |             time_diff = abs((current_time - webhook_timestamp).total_seconds())\n151 |             max_diff_seconds = tolerance_minutes * 60\n    |\nhelp: Convert to `datetime.UTC` alias\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:161:38\n    |\n160 |     async def _check_replay_protection(\n161 |         self, payload: str, headers: Dict[str, str]\n    |                                      ^^^^\n162 |     ) -> bool:\n163 |         payload_hash = self._get_payload_hash(payload)\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:190:37\n    |\n188 |     @classmethod\n189 |     async def mark_request_processed(\n190 |         cls, payload: str, headers: Dict[str, str]\n    |                                     ^^^^\n191 |     ) -> None:\n192 |         payload_hash = hashlib.sha256(payload.encode(\"utf-8\")).hexdigest()\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:228:14\n    |\n226 | async def verify_typeform_webhook(\n227 |     payload: str,\n228 |     headers: Dict[str, str],\n    |              ^^^^\n229 |     webhook_secret: Optional[str] = None,\n230 |     timestamp_tolerance_minutes: int = 5,\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:229:21\n    |\n227 |     payload: str,\n228 |     headers: Dict[str, str],\n229 |     webhook_secret: Optional[str] = None,\n    |                     ^^^^^^^^^^^^^\n230 |     timestamp_tolerance_minutes: int = 5,\n231 | ) -> Tuple[bool, Optional[str]]:\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:231:6\n    |\n229 |     webhook_secret: Optional[str] = None,\n230 |     timestamp_tolerance_minutes: int = 5,\n231 | ) -> Tuple[bool, Optional[str]]:\n    |      ^^^^^\n232 |     verifier = WebhookSecurityVerifier(webhook_secret)\n233 |     return await verifier.verify_webhook_request(\n    |\nhelp: Replace with `tuple`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/client_onboarding/core/services/webhooks/security.py:231:18\n    |\n229 |     webhook_secret: Optional[str] = None,\n230 |     timestamp_tolerance_minutes: int = 5,\n231 | ) -> Tuple[bool, Optional[str]]:\n    |                  ^^^^^^^^^^^^^\n232 |     verifier = WebhookSecurityVerifier(webhook_secret)\n233 |     return await verifier.verify_webhook_request(\n    |\nhelp: Convert to `X | None`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/aws_lambda/assign_role.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | |\n10 | | import src.contexts.iam.core.endpoints.internal.get as internal\n11 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n12 | | from src.contexts.iam.core import Container, Permission\n13 | | from src.contexts.iam.core.adapters import ApiAssignRoleToUser, ApiUser\n14 | | from src.contexts.seedwork import lambda_exception_handler\n15 | | from src.logging.logger import generate_correlation_id, logger\n   | |______________________________________________________________^\n16 |\n17 |   # Constants\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/aws_lambda/create_user.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | |\n10 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n11 | | from src.contexts.iam.core.adapters.api_schemas.commands.api_create_user import (\n12 | |     ApiCreateUser,\n13 | | )\n14 | | from src.contexts.iam.core.bootstrap.container import Container\n15 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n16 | |     EntityNotFoundError,\n17 | |     MultipleEntitiesFoundError,\n18 | | )\n19 | | from src.contexts.seedwork.shared.endpoints.decorators.lambda_exception_handler import (\n20 | |     lambda_exception_handler,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id, logger\n   | |______________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/iam/core/adapters/ORM/__init__.py:1:1\n  |\n1 | / from .sa_models import *\n2 | | from .mappers import *\n  | |______________________^\n3 |\n4 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/adapters/ORM/__init__.py:7:2\n  |\n5 |     \"sa_models\",\n6 |     \"mappers\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/adapters/ORM/mappers/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"UserMapper\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/iam/core/adapters/ORM/mappers/user_mapper.py:1:1\n  |\n1 | / from sqlalchemy.ext.asyncio import AsyncSession\n2 | |\n3 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n4 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n5 | | from src.contexts.iam.core.domain.root_aggregate.user import User\n6 | | from src.contexts.iam.core.domain.value_objects.role import Role\n7 | | from src.contexts.seedwork.shared import utils\n8 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n  | |________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/iam/core/adapters/ORM/sa_models/__init__.py:1:1\n  |\n1 | / from .user_association_tables import user_role_association\n2 | | from .role_sa_model import RoleSaModel\n3 | | from .user_sa_model import UserSaModel\n  | |______________________________________^\n4 |\n5 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/adapters/ORM/sa_models/__init__.py:9:2\n  |\n7 |     \"RoleSaModel\",\n8 |     \"UserSaModel\",\n9 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/adapters/ORM/sa_models/role_sa_model.py:12:22\n   |\n10 |     permissions: Mapped[str]\n11 |\n12 |     __table_args__ = {\"schema\": \"iam\", \"extend_existing\": True}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/core/adapters/ORM/sa_models/user_sa_model.py:1:1\n   |\n 1 | / from datetime import datetime\n 2 | |\n 3 | | from sqlalchemy import func\n 4 | | from sqlalchemy.orm import Mapped, mapped_column, relationship\n 5 | |\n 6 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n 7 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_association_tables import (\n 8 | |     user_role_association,\n 9 | | )\n10 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/adapters/ORM/sa_models/user_sa_model.py:29:22\n   |\n27 |     )\n28 |\n29 |     __table_args__ = {\"schema\": \"iam\", \"extend_existing\": True}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/core/adapters/api_schemas/root_aggregate/api_user.py:1:1\n   |\n 1 | / from datetime import UTC, datetime\n 2 | | from typing import Annotated, Any\n 3 | |\n 4 | | from pydantic import Field\n 5 | |\n 6 | | from src.contexts.iam.core.adapters.api_schemas.value_objects.api_role import ApiRole\n 7 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n 8 | | from src.contexts.iam.core.domain.root_aggregate.user import User\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n10 | |     BaseApiEntity,\n11 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/core/adapters/api_schemas/value_objects/api_role.py:1:1\n   |\n 1 | / from typing import Annotated, Any\n 2 | |\n 3 | | from pydantic import AfterValidator, BeforeValidator, Field\n 4 | |\n 5 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n 6 | | from src.contexts.iam.core.domain.enums import Permission as IAMPermission\n 7 | | from src.contexts.iam.core.domain.value_objects.role import Role\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 9 | |     SanitizedText,\n10 | | )\n11 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n12 | |     BaseApiValueObject,\n13 | | )\n14 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n15 | |     validate_permissions_collection,\n16 | |     validate_role_name_format,\n17 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/core/adapters/repositories/user_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.iam.core.adapters.ORM.mappers.user_mapper import UserMapper\n 7 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n 8 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n 9 | | from src.contexts.iam.core.domain.root_aggregate.user import User\n10 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n11 | |     RepositoryLogger,\n12 | | )\n13 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n14 | |     CompositeRepository,\n15 | |     FilterColumnMapper,\n16 | |     SaGenericRepository,\n17 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/iam/core/bootstrap/bootstrap.py:1:1\n   |\n 1 | / from collections.abc import Coroutine\n 2 | | from functools import partial\n 3 | |\n 4 | | from src.contexts.iam.core.domain import commands, events\n 5 | | from src.contexts.iam.core.services import command_handlers as cmd_handlers\n 6 | | from src.contexts.iam.core.services import event_handlers as evt_handlers\n 7 | | from src.contexts.iam.core.services.uow import UnitOfWork\n 8 | | from src.contexts.shared_kernel.services.messagebus import MessageBus\n 9 | | from src.contexts.seedwork.shared.domain.commands.command import (\n10 | |     Command as SeedworkCommand,\n11 | | )\n12 | | from src.contexts.seedwork.shared.domain.event import Event as SeedworkEvent\n   | |____________________________________________________________________________^\n13 |\n14 |   def bootstrap(\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/domain/__init__.py:7:2\n  |\n5 |     \"root_aggregate\",\n6 |     \"value_objects\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:19:21\n   |\n17 |   @unique\n18 |   class Role(SeedRole):\n19 |       ADMINISTRATOR = {\n   |  _____________________^\n20 | |         Permission.MANAGE_USERS,\n21 | |         Permission.MANAGE_ROLES,\n22 | |         Permission.VIEW_AUDIT_LOG,\n23 | |     }\n   | |_____^\n24 |       USER_MANAGER = {Permission.MANAGE_USERS}\n25 |       ROLE_MANAGER = {Permission.MANAGE_ROLES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:24:20\n   |\n22 |         Permission.VIEW_AUDIT_LOG,\n23 |     }\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n25 |     ROLE_MANAGER = {Permission.MANAGE_ROLES}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:25:20\n   |\n23 |     }\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n25 |     ROLE_MANAGER = {Permission.MANAGE_ROLES}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:26:15\n   |\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n25 |     ROLE_MANAGER = {Permission.MANAGE_ROLES}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:27:12\n   |\n25 |     ROLE_MANAGER = {Permission.MANAGE_ROLES}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:28:17\n   |\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/iam/core/domain/enums.py:29:21\n   |\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n30 |\n31 |     @property\n   |\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/domain/root_aggregate/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"User\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/domain/value_objects/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"Role\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/services/__init__.py:9:2\n  |\n7 |     \"event_handlers\",\n8 |     \"uow\",\n9 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/iam/core/services/event_handlers.py:8:53\n  |\n6 | ) -> None:\n7 |     # TODO: implement this function\n8 |     raise NotImplementedError(\"Not implemented yet\")\n  |                                                     ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/create_product.py:7:1\n   |\n 5 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 6 |\n 7 | / import anyio\n 8 | |\n 9 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n10 | | from src.contexts.products_catalog.core.adapters.api_schemas.commands.products import (\n11 | |     ApiAddFoodProduct,\n12 | | )\n13 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n14 | | from src.contexts.products_catalog.core.domain.commands.products import (\n15 | |     AddFoodProductBulk,\n16 | | )\n17 | | from src.contexts.products_catalog.core.domain.enums import Permission\n18 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n19 | |     products_aws_auth_middleware,\n20 | | )\n21 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n22 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n23 | |     aws_lambda_exception_handler_middleware,\n24 | | )\n25 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n26 | |     aws_lambda_logging_middleware,\n27 | | )\n28 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n29 |\n30 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/fetch_product.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | | from pydantic import TypeAdapter\n10 | |\n11 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n12 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate import (\n13 | |     ApiProduct,\n14 | |     ApiProductFilter,\n15 | | )\n16 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n17 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n18 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n19 | |     products_aws_auth_middleware,\n20 | | )\n21 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n22 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n23 | |     aws_lambda_exception_handler_middleware,\n24 | | )\n25 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n26 | |     aws_lambda_logging_middleware,\n27 | | )\n28 | | from src.logging.logger import generate_correlation_id, logger\n   | |______________________________________________________________^\n29 |\n30 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/fetch_product_source_name.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | | from pydantic import TypeAdapter\n10 | |\n11 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n12 | | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_classification_filter import (\n13 | |     ApiClassificationFilter,\n14 | | )\n15 | | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_source import (\n16 | |     ApiSource,\n17 | | )\n18 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n19 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n20 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n21 | |     products_aws_auth_middleware,\n22 | | )\n23 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n24 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n25 | |     aws_lambda_exception_handler_middleware,\n26 | | )\n27 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n28 | |     aws_lambda_logging_middleware,\n29 | | )\n30 | | from src.logging.logger import generate_correlation_id, logger\n   | |______________________________________________________________^\n31 |\n32 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/get_product_by_id.py:7:1\n   |\n 5 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 6 |\n 7 | / import anyio\n 8 | |\n 9 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n10 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate import (\n11 | |     ApiProduct,\n12 | | )\n13 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n14 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n15 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n16 | |     products_aws_auth_middleware,\n17 | | )\n18 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n19 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n20 | |     aws_lambda_exception_handler_middleware,\n21 | | )\n22 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n23 | |     aws_lambda_logging_middleware,\n24 | | )\n25 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n26 |\n27 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/get_product_source_name_by_id.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | |\n10 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n11 | | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_source import (  # noqa: E501\n12 | |     ApiSource,\n13 | | )\n14 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n15 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n16 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n17 | |     products_aws_auth_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n20 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n21 | |     aws_lambda_exception_handler_middleware,\n22 | | )\n23 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n24 | |     aws_lambda_logging_middleware,\n25 | | )\n26 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n27 |\n28 |   container = Container()\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/products_catalog/aws_lambda/get_product_source_name_by_id.py:11:108\n   |\n10 | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n11 | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_source import (  # noqa: E501\n   |                                                                                                            ^^^^^^^^^^^^\n12 |     ApiSource,\n13 | )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/aws_lambda/search_product_similar_name.py:8:1\n   |\n 6 |       from src.contexts.shared_kernel.services.messagebus import MessageBus\n 7 |\n 8 | / import anyio\n 9 | | from pydantic import TypeAdapter\n10 | |\n11 | | from src.contexts.client_onboarding.aws_lambda.shared.cors_headers import CORS_headers\n12 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate import (\n13 | |     ApiProduct,\n14 | | )\n15 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n16 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n17 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n18 | |     products_aws_auth_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n21 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n22 | |     aws_lambda_exception_handler_middleware,\n23 | | )\n24 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n25 | |     aws_lambda_logging_middleware,\n26 | | )\n27 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n28 |\n29 |   container = Container()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/mappers/__init__.py:1:1\n  |\n1 | / from .classification import *\n2 | | from .product_mapper import ProductMapper\n3 | | from .score_mapper import ScoreMapper\n  | |_____________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/__init__.py:10:2\n   |\n 8 |     \"ProductMapper\",\n 9 |     \"ScoreMapper\",\n10 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/__init__.py:1:1\n  |\n1 | / from .brand_mapper import BrandMapper\n2 | | from .category_mapper import CategoryMapper\n3 | | from .food_group_mapper import FoodGroupMapper\n4 | | from .parent_category_mapper import ParentCategoryMapper\n5 | | from .process_type_mapper import ProcessTypeMapper\n6 | | from .source_mapper import SourceMapper\n  | |_______________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/__init__.py:16:2\n   |\n14 |     \"ProcessTypeMapper\",\n15 |     \"SourceMapper\",\n16 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/brand_mapper.py:1:1\n  |\n1 | / from sqlalchemy.ext.asyncio import AsyncSession\n2 | |\n3 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.brand import (\n4 | |     BrandSaModel,\n5 | | )\n6 | | from src.contexts.products_catalog.core.domain.entities.classification import Brand\n7 | | from src.contexts.seedwork.shared import utils\n8 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n  | |________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/category_mapper.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.category_sa_model import (\n2 | |     CategorySaModel,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.entities.classification import Category\n5 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n6 | | from sqlalchemy.ext.asyncio import AsyncSession\n7 | |\n8 | | from . import utils\n  | |___________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/food_group_mapper.py:1:1\n   |\n 1 | / from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.food_group_sa_model import (\n 2 | |     FoodGroupSaModel,\n 3 | | )\n 4 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n 5 | |     FoodGroup,\n 6 | | )\n 7 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n 8 | | from sqlalchemy.ext.asyncio import AsyncSession\n 9 | |\n10 | | from . import utils\n   | |___________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/parent_category_mapper.py:1:1\n   |\n 1 | / from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.parent_categorysa_model import (\n 2 | |     ParentCategorySaModel,\n 3 | | )\n 4 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n 5 | |     ParentCategory,\n 6 | | )\n 7 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n 8 | | from sqlalchemy.ext.asyncio import AsyncSession\n 9 | |\n10 | | from . import utils\n   | |___________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/process_type_mapper.py:1:1\n   |\n 1 | / from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.process_type_sa_model import (\n 2 | |     ProcessTypeSaModel,\n 3 | | )\n 4 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n 5 | |     ProcessType,\n 6 | | )\n 7 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n 8 | | from sqlalchemy.ext.asyncio import AsyncSession\n 9 | |\n10 | | from . import utils\n   | |___________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/source_mapper.py:1:1\n  |\n1 | / from sqlalchemy.ext.asyncio import AsyncSession\n2 | |\n3 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.source import (\n4 | |     SourceSaModel,\n5 | | )\n6 | | from src.contexts.products_catalog.core.domain.entities.classification import Source\n7 | | from src.contexts.seedwork.shared import utils\n8 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n  | |________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nUP047 Generic function `classification_map_domain_to_sa` should use type parameters\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/utils.py:15:5\n   |\n15 |   def classification_map_domain_to_sa(\n   |  _____^\n16 | |     domain_obj: Classification,\n17 | |     sa_model_type: type[_S],\n18 | |     polymorphic_identity: str,\n19 | | ) -> _S:\n   | |_^\n20 |       return sa_model_type(\n21 |           type=polymorphic_identity,\n   |\nhelp: Use type parameters\n\nUP047 Generic function `classification_map_sa_to_domain` should use type parameters\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/classification/utils.py:33:5\n   |\n33 |   def classification_map_sa_to_domain(\n   |  _____^\n34 | |     sa_obj: ClassificationSaModel,\n35 | |     domain_obj_type: type[_C],\n36 | | ) -> _C:\n   | |_^\n37 |       return domain_obj_type(\n38 |           entity_id=sa_obj.id,\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/ORM/mappers/product_mapper.py:1:1\n   |\n 1 | / import anyio\n 2 | | from sqlalchemy.ext.asyncio import AsyncSession\n 3 | |\n 4 | | from src.contexts.products_catalog.core.adapters.name_search import StrProcessor\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.score_mapper import (\n 6 | |     ScoreMapper,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.brand import BrandSaModel\n 9 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.category_sa_model import (\n10 | |     CategorySaModel,\n11 | | )\n12 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.food_group_sa_model import (\n13 | |     FoodGroupSaModel,\n14 | | )\n15 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.parent_categorysa_model import (\n16 | |     ParentCategorySaModel,\n17 | | )\n18 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.process_type_sa_model import (\n19 | |     ProcessTypeSaModel,\n20 | | )\n21 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.is_food_votes import (\n22 | |     IsFoodVotesSaModel,\n23 | | )\n24 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.product import (\n25 | |     ProductSaModel,\n26 | | )\n27 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.source import (\n28 | |     SourceSaModel,\n29 | | )\n30 | | from src.contexts.products_catalog.core.domain.root_aggregate.product import Product\n31 | | from src.contexts.products_catalog.core.domain.value_objects.is_food_votes import (\n32 | |     IsFoodVotes,\n33 | | )\n34 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n35 | | from src.contexts.seedwork.shared.utils import (\n36 | |     gather_results_with_timeout,\n37 | |     get_sa_entity,\n38 | | )\n39 | | from src.contexts.shared_kernel.adapters.ORM.mappers.nutri_facts_mapper import (\n40 | |     NutriFactsMapper,\n41 | | )\n42 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/__init__.py:1:1\n  |\n1 | / from .brand import BrandSaModel\n2 | | from .classification import *\n3 | | from .is_food_votes import IsFoodVotesSaModel\n4 | | from .product import ProductSaModel\n5 | | from .source import SourceSaModel\n  | |_________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/ORM/sa_models/__init__.py:14:2\n   |\n12 |     \"ProductSaModel\",\n13 |     \"SourceSaModel\",\n14 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/brand.py:1:1\n  |\n1 | / from datetime import datetime\n2 | |\n3 | | from sqlalchemy import func\n4 | | from sqlalchemy.orm import Mapped, mapped_column\n5 | |\n6 | | import src.db.sa_field_types as sa_field\n7 | | from src.db.base import SaBase, SerializerMixin\n  | |_______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/__init__.py:1:1\n  |\n1 | / from .classification_sa_model import ClassificationSaModel\n2 | | from .category_sa_model import CategorySaModel\n3 | | from .food_group_sa_model import FoodGroupSaModel\n4 | | from .parent_categorysa_model import ParentCategorySaModel\n5 | | from .process_type_sa_model import ProcessTypeSaModel\n  | |_____________________________________________________^\n  |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/category_sa_model.py:7:23\n  |\n6 |   class CategorySaModel(ClassificationSaModel):\n7 |       __mapper_args__ = {\n  |  _______________________^\n8 | |         \"polymorphic_identity\": \"category\",\n9 | |     }\n  | |_____^\n  |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/classification_sa_model.py:24:23\n   |\n22 |       type: Mapped[str]\n23 |\n24 |       __mapper_args__ = {\n   |  _______________________^\n25 | |         \"polymorphic_on\": \"type\",\n26 | |         \"polymorphic_identity\": \"classifications\",\n27 | |     }\n   | |_____^\n28 |\n29 |       __table_args__ = {\"schema\": \"products_catalog\", \"extend_existing\": True}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/classification_sa_model.py:29:22\n   |\n27 |     }\n28 |\n29 |     __table_args__ = {\"schema\": \"products_catalog\", \"extend_existing\": True}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/food_group_sa_model.py:7:23\n  |\n6 |   class FoodGroupSaModel(ClassificationSaModel):\n7 |       __mapper_args__ = {\n  |  _______________________^\n8 | |         \"polymorphic_identity\": \"food_group\",\n9 | |     }\n  | |_____^\n  |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/parent_categorysa_model.py:7:23\n  |\n6 |   class ParentCategorySaModel(ClassificationSaModel):\n7 |       __mapper_args__ = {\n  |  _______________________^\n8 | |         \"polymorphic_identity\": \"parent_category\",\n9 | |     }\n  | |_____^\n  |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/classification/process_type_sa_model.py:7:23\n  |\n6 |   class ProcessTypeSaModel(ClassificationSaModel):\n7 |       __mapper_args__ = {\n  |  _______________________^\n8 | |         \"polymorphic_identity\": \"process_type\",\n9 | |     }\n  | |_____^\n  |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/ORM/sa_models/is_food_votes.py:15:22\n   |\n13 |     is_food: Mapped[bool]\n14 |\n15 |     __table_args__ = {\"schema\": \"products_catalog\", \"extend_existing\": True}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/ORM/sa_models/product.py:1:1\n   |\n 1 | / from dataclasses import dataclass, fields\n 2 | | from datetime import datetime\n 3 | | from decimal import Decimal\n 4 | |\n 5 | | from sqlalchemy import TEXT, ForeignKey, Index, Numeric, func\n 6 | | from sqlalchemy.orm import Mapped, composite, mapped_column, relationship\n 7 | |\n 8 | | import src.db.sa_field_types as sa_field\n 9 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.brand import (\n10 | |     BrandSaModel,\n11 | | )\n12 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.category_sa_model import (\n13 | |     CategorySaModel,\n14 | | )\n15 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.food_group_sa_model import (\n16 | |     FoodGroupSaModel,\n17 | | )\n18 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.parent_categorysa_model import (\n19 | |     ParentCategorySaModel,\n20 | | )\n21 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.process_type_sa_model import (\n22 | |     ProcessTypeSaModel,\n23 | | )\n24 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.is_food_votes import (\n25 | |     IsFoodVotesSaModel,\n26 | | )\n27 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.source import (\n28 | |     SourceSaModel,\n29 | | )\n30 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n31 | |     NutriFactsSaModel,\n32 | | )\n33 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/ORM/sa_models/source.py:1:1\n  |\n1 | / from datetime import datetime\n2 | |\n3 | | from sqlalchemy import func\n4 | | from sqlalchemy.orm import Mapped, mapped_column\n5 | |\n6 | | import src.db.sa_field_types as sa_field\n7 | | from src.db.base import SaBase, SerializerMixin\n  | |_______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/__init__.py:1:1\n  |\n1 | / from .classification import *\n2 | | from .products import *\n  | |_______________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/__init__.py:8:2\n  |\n6 |     \"classification\",\n7 |     \"products\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_create_classification.py:1:1\n  |\n1 | / from typing import ClassVar\n2 | | from pydantic import BaseModel\n3 | |\n4 | | from src.contexts.products_catalog.core.domain.commands.classifications.base_classes import (\n5 | |     CreateClassification,\n6 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_create_classification.py:48:13\n   |\n46 |               )\n47 |           except Exception as e:\n48 | /             raise ValueError(\n49 | |                 f\"Failed to convert ApiCreateclassification to domain model: {e}\"\n50 | |             )\n   | |_____________^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_update_classification.py:1:1\n  |\n1 | / from typing import Any, ClassVar\n2 | |\n3 | | from pydantic import BaseModel\n4 | |\n5 | | from src.contexts.products_catalog.core.domain.commands.classifications.base_classes import (\n6 | |     UpdateClassification,\n7 | | )\n8 | | from src.contexts.shared_kernel.domain.enums import Privacy\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_update_classification.py:47:13\n   |\n45 |               }\n46 |           except Exception as e:\n47 | /             raise ValueError(\n48 | |                 f\"Failed to convert _ApiAttributesToUpdateOnClassification to domain model: {e}\"\n49 | |             )\n   | |_____________^\n   |\n\nW291 [*] Trailing whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_update_classification.py:82:28\n   |\n80 |         try:\n81 |             return self.command_type(\n82 |                 id=self.id, \n   |                            ^\n83 |                 updates=self.updates.to_domain()\n84 |             )\n   |\nhelp: Remove trailing whitespace\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_update_classification.py:86:13\n   |\n84 |               )\n85 |           except Exception as e:\n86 | /             raise ValueError(\n87 | |                 f\"Failed to convert ApiUpdateClassification to domain model: {e}\"\n88 | |             )\n   | |_____________^\n   |\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/api_update_classification.py:88:14\n   |\n86 |             raise ValueError(\n87 |                 f\"Failed to convert ApiUpdateClassification to domain model: {e}\"\n88 |             )\n   |              ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/brand/__init__.py:1:1\n  |\n1 | / from .api_create_brand import ApiCreateBrand\n2 | | from .api_update_brand import ApiUpdateBrand\n  | |____________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/brand/__init__.py:8:2\n  |\n6 |     \"ApiCreateBrand\",\n7 |     \"ApiUpdateBrand\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/brand/api_create_brand.py:10:31\n   |\n 9 | class ApiCreateBrand(ApiCreateClassification):\n10 |     command_type = CreateBrand\n   |                               ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/category/__init__.py:1:1\n  |\n1 | / from .api_create_category import ApiCreateCategory\n2 | | from .api_update_category import ApiUpdateCategory\n  | |__________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/category/__init__.py:8:2\n  |\n6 |     \"ApiCreateCategory\",\n7 |     \"ApiUpdateCategory\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/category/api_create_category.py:10:34\n   |\n 9 | class ApiCreateCategory(ApiCreateClassification):\n10 |     command_type = CreateCategory\n   |                                  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/food_group/__init__.py:1:1\n  |\n1 | / from .api_create_food_group import ApiCreateFoodGroup\n2 | | from .api_update_food_group import ApiUpdateFoodGroup\n  | |_____________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/food_group/__init__.py:8:2\n  |\n6 |     \"ApiCreateFoodGroup\",\n7 |     \"ApiUpdateFoodGroup\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/food_group/api_create_food_group.py:10:35\n   |\n 9 | class ApiCreateFoodGroup(ApiCreateClassification):\n10 |     command_type = CreateFoodGroup\n   |                                   ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/parent_category/__init__.py:1:1\n  |\n1 | / from .api_create_parent_category import ApiCreateParentCategory\n2 | | from .api_update_parent_category import ApiUpdateParentCategory\n  | |_______________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/parent_category/__init__.py:8:2\n  |\n6 |     \"ApiCreateParentCategory\",\n7 |     \"ApiUpdateParentCategory\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/parent_category/api_create_parent_category.py:10:40\n   |\n 9 | class ApiCreateParentCategory(ApiCreateClassification):\n10 |     command_type = CreateParentCategory\n   |                                        ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/parent_category/api_update_parent_category.py:10:40\n   |\n 9 | class ApiUpdateParentCategory(ApiUpdateClassification):\n10 |     command_type = UpdateParentCategory\n   |                                        ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/process_type/__init__.py:1:1\n  |\n1 | / from .api_create_process_type import ApiCreateProcessType\n2 | | from .api_update_process_type import ApiUpdateProcessType\n  | |_________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/process_type/__init__.py:8:2\n  |\n6 |     \"ApiCreateProcessType\",\n7 |     \"ApiUpdateProcessType\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/source/__init__.py:1:1\n  |\n1 | / from .api_create_source import ApiCreateSource\n2 | | from .api_update_source import ApiUpdateSource\n  | |______________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/source/__init__.py:8:2\n  |\n6 |     \"ApiCreateSource\",\n7 |     \"ApiUpdateSource\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/classification/source/api_create_source.py:10:32\n   |\n 9 | class ApiCreateSource(ApiCreateClassification):\n10 |     command_type = CreateSource\n   |                                ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/products/__init__.py:1:1\n  |\n1 | / from .api_add_food_product import ApiAddFoodProduct\n2 | | from .api_add_house_input_and_create_product_if_needed import (\n3 | |     ApiAddHouseInputAndCreateProductIfNeeded,\n4 | | )\n5 | | from .api_add_product_image import ApiAddProductImage\n  | |_____________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/products/__init__.py:12:2\n   |\n10 |     \"ApiAddHouseInputAndCreateProductIfNeeded\",\n11 |     \"ApiAddProductImage\",\n12 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/commands/products/api_add_food_product.py:1:1\n   |\n 1 | / from pydantic import BaseModel, field_serializer\n 2 | |\n 3 | | from src.contexts.products_catalog.core.domain.commands.products import (\n 4 | |     AddFoodProduct,\n 5 | | )\n 6 | | from src.contexts.products_catalog.core.domain.enums import Unit\n 7 | | from src.contexts.products_catalog.core.domain.value_objects.score import Score\n 8 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects import (\n 9 | |     ApiNutriFacts,\n10 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/products/api_add_house_input_and_create_product_if_needed.py:1:1\n  |\n1 | / import cattrs\n2 | | from pydantic import BaseModel\n3 | |\n4 | | from src.contexts.products_catalog.core.adapters.api_schemas import (\n5 | |     UniqueBarcode,\n6 | | )\n7 | | from src.contexts.products_catalog.core.domain.commands.products import (\n8 | |     AddHouseInputAndCreateProductIfNeeded,\n9 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/commands/products/api_add_product_image.py:1:1\n  |\n1 | / import cattrs\n2 | | from pydantic import BaseModel\n3 | |\n4 | | from src.contexts.products_catalog.core.domain.commands.products.add_image import (\n5 | |     AddProductImage,\n6 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/__init__.py:1:1\n  |\n1 | / from .api_classification import ApiClassification\n2 | | from .api_brand import ApiBrand\n3 | | from .api_category import ApiCategory\n4 | | from .api_classification_filter import ApiClassificationFilter\n5 | | from .api_food_group import ApiFoodGroup\n6 | | from .api_parent_category import ApiParentCategory\n7 | | from .api_process_type import ApiProcessType\n8 | | from .api_source import ApiSource\n  | |_________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/__init__.py:20:2\n   |\n18 |     \"ApiProcessType\",\n19 |     \"ApiSource\",\n20 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_brand.py:9:31\n  |\n7 | class ApiBrand(ApiClassification):\n8 |     entity_type = Brand\n9 |     entity_type_name = \"brand\"\n  |                               ^\n  |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_category.py:1:1\n  |\n1 | from typing import Any, Dict\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 |\n3 | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_classification import (\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_category.py:1:1\n  |\n1 | / from typing import Any, Dict\n2 | |\n3 | | from src.contexts.products_catalog.core.adapters.api_schemas.entities.classifications.api_classification import (\n4 | |     ApiClassification,\n5 | | )\n6 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.classification_sa_model import ClassificationSaModel\n7 | | from src.contexts.products_catalog.core.domain.entities.classification import Category\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_category.py:12:34\n   |\n10 | class ApiCategory(ApiClassification):\n11 |     entity_type = Category\n12 |     entity_type_name = \"category\"\n   |                                  ^\n   |\nhelp: Add trailing newline\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_classification.py:62:13\n   |\n60 |               )\n61 |           except Exception as e:\n62 | /             raise ValueError(\n63 | |                 f\"Failed to build ApiClassification from domain instance: {e}\"\n64 | |             )\n   | |_____________^\n65 |\n66 |       def to_domain(self) -> Classification:\n   |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_classification.py:80:13\n   |\n78 |               )\n79 |           except Exception as e:\n80 | /             raise ValueError(\n81 | |                 f\"Failed to convert ApiClassification to domain model: {e}\"\n82 | |             )\n   | |_____________^\n83 |\n84 |       @classmethod\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_classification_fields.py:1:1\n  |\n1 | / from typing import Annotated\n2 | | from pydantic import AfterValidator, Field\n3 | |\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedText, SanitizedTextOptional, UUIDIdRequired\n5 | | import src.contexts.seedwork.shared.adapters.api_schemas.validators as validators\n  | |_________________________________________________________________________________^\n6 |\n7 |   # Required string fields with validation\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_classification_filter.py:1:1\n  |\n1 | / from pydantic import BaseModel\n2 | |\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import CreatedAtValue\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_food_group.py:11:36\n   |\n 9 | class ApiFoodGroup(ApiClassification):\n10 |     entity_type = FoodGroup\n11 |     entity_type_name = \"food_group\"\n   |                                    ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_parent_category.py:11:41\n   |\n 9 | class ApiParentCategory(ApiClassification):\n10 |     entity_type = ParentCategory\n11 |     entity_type_name = \"parent_category\"\n   |                                         ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_process_type.py:11:38\n   |\n 9 | class ApiProcessType(ApiClassification):\n10 |     entity_type = ProcessType\n11 |     entity_type_name = \"process_type\"\n   |                                      ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/entities/classifications/api_source.py:9:32\n  |\n7 | class ApiSource(ApiClassification):\n8 |     entity_type = Source\n9 |     entity_type_name = \"source\"\n  |                                ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/pydantic_validators.py:1:1\n  |\n1 | / from typing import Annotated, Any\n2 | |\n3 | | from pydantic import AfterValidator\n4 | |\n5 | | from src.contexts.products_catalog.core.domain.root_aggregate.product import Product\n  | |____________________________________________________________________________________^\n6 |\n7 |   MIN_SCORE = 0\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/__init__.py:1:1\n  |\n1 | / from .api_product import ApiProduct\n2 | | from .api_product_filter import ApiProductFilter\n  | |________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/__init__.py:8:2\n  |\n6 |     \"ApiProduct\",\n7 |     \"ApiProductFilter\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product.py:1:1\n   |\n 1 | / from typing import Any\n 2 | |\n 3 | | from pydantic import HttpUrl, field_validator\n 4 | |\n 5 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate import (\n 6 | |     api_product_fields as fields,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.api_schemas.value_objects.api_if_food_votes import (\n 9 | |     ApiIsFoodVotes,\n10 | | )\n11 | | from src.contexts.products_catalog.core.adapters.api_schemas.value_objects.api_score import (\n12 | |     ApiScore,\n13 | | )\n14 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.product import (\n15 | |     ProductSaModel,\n16 | | )\n17 | | from src.contexts.products_catalog.core.domain.enums import Unit\n18 | | from src.contexts.products_catalog.core.domain.root_aggregate.product import Product\n19 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n20 | |     UrlOptional,\n21 | | )\n22 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n23 | |     BaseApiEntity,\n24 | | )\n25 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_facts import (\n26 | |     ApiNutriFacts,\n27 | | )\n28 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product.py:136:13\n    |\n134 |         except Exception as e:\n135 |             logger.error(f\"Failed to build ApiProduct from domain instance: {e}\")\n136 |             raise ValueError(f\"Failed to build ApiProduct from domain instance: {e}\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n137 |\n138 |     def to_domain(self) -> Product:\n    |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | | from pydantic import AfterValidator, Field\n 3 | |\n 4 | | from src.contexts.products_catalog.core.adapters.api_schemas.value_objects.api_if_food_votes import ApiIsFoodVotes\n 5 | | from src.contexts.products_catalog.core.adapters.api_schemas.value_objects.api_score import ApiScore\n 6 | | from src.contexts.products_catalog.core.domain.enums import Unit\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedText, SanitizedTextOptional, UUIDIdRequired, Ur\u2026\n 8 | | import src.contexts.seedwork.shared.adapters.api_schemas.validators as validators\n 9 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_facts import ApiNutriFacts\n   | |_______________________________________________________________________________________________________^\n10 |\n11 |   # Required string fields with validation\n   |\nhelp: Organize imports\n\nW291 [*] Trailing whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product_fields.py:80:60\n   |\n78 | ProductCategoryIdOptional = Annotated[\n79 |     str | None,\n80 |     Field(default=None, description=\"Category identifier\"), \n   |                                                            ^\n81 |     AfterValidator(validators.validate_optional_uuid_format),\n82 | ]\n   |\nhelp: Remove trailing whitespace\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product_filter.py:1:1\n  |\n1 | / from pydantic import BaseModel, model_validator\n2 | | from src.contexts.products_catalog.core.adapters.repositories import product_repository\n3 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import SaGenericRepository\n  | |______________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n  --> src/contexts/products_catalog/core/adapters/api_schemas/root_aggregate/api_product_filter.py:42:13\n   |\n40 |             ]\n41 |         )\n42 |         for k in values.keys():\n   |             ^^^^^^^^^^^^^^^^^^\n43 |             if SaGenericRepository.remove_postfix(k) not in allowed_filters:\n44 |                 raise ValueError(f\"Invalid filter: {k}\")\n   |\nhelp: Remove `.keys()`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/__init__.py:1:1\n  |\n1 | / from .api_score import ApiScore\n2 | | from .api_user import ApiUser\n3 | | from .api_if_food_votes import ApiIsFoodVotes\n  | |_____________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/__init__.py:10:2\n   |\n 8 |     \"ApiUser\",\n 9 |     \"ApiIsFoodVotes\",\n10 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:1:1\n  |\n1 | from typing import Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 |\n3 | from pydantic import Field\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:1:1\n   |\n 1 | / from typing import Dict, Any\n 2 | |\n 3 | | from pydantic import Field\n 4 | |\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.is_food_votes import (\n 6 | |     IsFoodVotesSaModel,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.domain.value_objects.is_food_votes import (\n 9 | |     IsFoodVotes,\n10 | | )\n11 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiValueObject\n   | |_______________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:54:1\n   |\n52 |     def from_orm_model(cls, orm_models: list[IsFoodVotesSaModel]) -> \"ApiIsFoodVotes\":\n53 |         \"\"\"Creates an instance of `ApiIsFoodVotes` from a list of ORM models.\n54 |         \n   | ^^^^^^^^\n55 |         Args:\n56 |             orm_models: List of IsFoodVotesSaModel instances representing individual votes\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:57:1\n   |\n55 |         Args:\n56 |             orm_models: List of IsFoodVotesSaModel instances representing individual votes\n57 |         \n   | ^^^^^^^^\n58 |         Returns:\n59 |             ApiIsFoodVotes instance with aggregated vote data\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:63:1\n   |\n61 |         is_food_houses = set()\n62 |         is_not_food_houses = set()\n63 |         \n   | ^^^^^^^^\n64 |         for vote in orm_models:\n65 |             if vote.is_food:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:69:1\n   |\n67 |             else:\n68 |                 is_not_food_houses.add(vote.house_id)\n69 |         \n   | ^^^^^^^^\n70 |         return cls(\n71 |             acceptance_line={\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:80:32\n   |\n78 |         )\n79 |\n80 |     def to_orm_kwargs(self) -> Dict[str, Any]:\n   |                                ^^^^\n81 |         \"\"\"Converts the instance to ORM model kwargs.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:82:1\n   |\n80 |     def to_orm_kwargs(self) -> Dict[str, Any]:\n81 |         \"\"\"Converts the instance to ORM model kwargs.\n82 |         \n   | ^^^^^^^^\n83 |         Note: This returns a list of kwargs dicts since IsFoodVotes maps to multiple\n84 |         IsFoodVotesSaModel records (one per house vote).\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:85:1\n   |\n83 |         Note: This returns a list of kwargs dicts since IsFoodVotes maps to multiple\n84 |         IsFoodVotesSaModel records (one per house vote).\n85 |         \n   | ^^^^^^^^\n86 |         Returns:\n87 |             Dictionary with 'votes' key containing list of individual vote kwargs\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:90:1\n   |\n88 |         \"\"\"\n89 |         vote_kwargs_list = []\n90 |         \n   | ^^^^^^^^\n91 |         # Create kwargs for each house that voted \"is food\"\n92 |         for house_id in self.is_food_houses:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:97:1\n   |\n95 |                 \"is_food\": True,\n96 |             })\n97 |         \n   | ^^^^^^^^\n98 |         # Create kwargs for each house that voted \"is not food\"\n99 |         for house_id in self.is_not_food_houses:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_if_food_votes.py:104:1\n    |\n102 |                 \"is_food\": False,\n103 |             })\n104 |         \n    | ^^^^^^^^\n105 |         return {\n106 |             \"votes\": vote_kwargs_list\n    |\nhelp: Remove whitespace from blank line\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_score.py:1:1\n  |\n1 | from typing import Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 |\n3 | from src.contexts.products_catalog.core.adapters.api_schemas.pydantic_validators import (\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_score.py:1:1\n   |\n 1 | / from typing import Dict, Any\n 2 | |\n 3 | | from src.contexts.products_catalog.core.adapters.api_schemas.pydantic_validators import (\n 4 | |     ScoreValue,\n 5 | | )\n 6 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.product import (\n 7 | |     ScoreSaModel,\n 8 | | )\n 9 | | from src.contexts.products_catalog.core.domain.value_objects.score import Score\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiValueObject\n   | |_______________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_score.py:64:32\n   |\n62 |         )\n63 |\n64 |     def to_orm_kwargs(self) -> Dict[str, Any]:\n   |                                ^^^^\n65 |         \"\"\"Converts the instance to ORM model kwargs.\"\"\"\n66 |         return {\n   |\nhelp: Replace with `dict`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_user.py:1:1\n   |\n 1 | / from typing import Annotated, Any\n 2 | |\n 3 | | from pydantic import Field\n 4 | |\n 5 | | from src.contexts.products_catalog.core.adapters.external_providers.iam.api_schemas.api_role import ApiRole\n 6 | | from src.contexts.products_catalog.core.domain.value_objects.user import User\n 7 | | from src.contexts.products_catalog.core.domain.value_objects.role import Role\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n 9 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects.api_seed_user import ApiSeedUser\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_user.py:33:1\n   |\n31 |             roles=frozenset([Role(name=role.name, permissions=frozenset(role.permissions)) for role in self.roles])\n32 |         )\n33 |     \n   | ^^^^\n34 |     @classmethod\n35 |     def from_domain(cls, domain_obj: User) -> \"ApiUser\":\n   |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/api_schemas/value_objects/api_user.py:60:10\n   |\n58 |             id=orm_model.id,\n59 |             roles=frozenset(roles)\n60 |         )\n   |          ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:1:1\n  |\n1 | / from src.contexts.seedwork.shared.adapters.internal_providers.base_iam_provider import BaseIAMProvider\n2 | | from src.contexts.products_catalog.core.adapters.external_providers.iam.api_schemas.api_user import ApiUser\n  | |___________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:8:1\n   |\n 6 |     \"\"\"\n 7 |     Products catalog specific IAM provider.\n 8 |     \n   | ^^^^\n 9 |     Inherits from BaseIAMProvider and configures it with products_catalog\n10 |     specific ApiUser type and caller context.\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:12:1\n   |\n10 |     specific ApiUser type and caller context.\n11 |     \"\"\"\n12 |     \n   | ^^^^\n13 |     def __init__(self):\n14 |         super().__init__(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:18:1\n   |\n16 |             caller_context=\"products_catalog\"\n17 |         )\n18 |     \n   | ^^^^\n19 |     @staticmethod\n20 |     async def get(id: str) -> dict:\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:23:1\n   |\n21 |         \"\"\"\n22 |         Static method wrapper for backward compatibility.\n23 |         \n   | ^^^^^^^^\n24 |         Args:\n25 |             id: The user ID to retrieve\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api.py:26:1\n   |\n24 |         Args:\n25 |             id: The user ID to retrieve\n26 |             \n   | ^^^^^^^^^^^^\n27 |         Returns:\n28 |             Dict containing user data or error information\n   |\nhelp: Remove whitespace from blank line\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:1:1\n  |\n1 | / from typing import Any\n2 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n3 | | from src.contexts.products_catalog.core.domain.value_objects.role import Role\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects.api_seed_role import (\n5 | |     ApiSeedRole,\n6 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:10:1\n   |\n 9 | class ApiRole(ApiSeedRole[\"ApiRole\", Role, RoleSaModel]):\n10 |     \n   | ^^^^\n11 |     def to_domain(self) -> Role:\n12 |         return Role(\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:16:1\n   |\n14 |             permissions=frozenset(self.permissions)\n15 |         )\n16 |     \n   | ^^^^\n17 |     @classmethod\n18 |     def from_domain(cls, domain_obj: Role) -> \"ApiRole\":\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:23:1\n   |\n21 |             permissions=frozenset(domain_obj.permissions)\n22 |         )\n23 |     \n   | ^^^^\n24 |     @classmethod\n25 |     def from_orm_model(cls, orm_model: RoleSaModel) -> \"ApiRole\":\n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:29:75\n   |\n27 |             name=orm_model.name,\n28 |             permissions=frozenset(\n29 |                 perm.strip() for perm in orm_model.permissions.split(\", \") \n   |                                                                           ^\n30 |                 if perm.strip()\n31 |             ) if orm_model.permissions else frozenset()\n   |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/products_catalog/core/adapters/external_providers/iam/api_schemas/api_role.py:33:1\n   |\n31 |             ) if orm_model.permissions else frozenset()\n32 |         )\n33 |     \n   | ^^^^\n34 |     def to_orm_kwargs(self) -> dict[str, Any]:\n35 |         return {\n   |\nhelp: Remove whitespace from blank line\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/name_search.py:1:1\n  |\n1 | / import operator\n2 | | import re\n3 | |\n4 | | from attrs import define\n5 | | from unidecode import unidecode\n6 | |\n7 | | from src.logging.logger import logger\n  | |_____________________________________^\n  |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/name_search.py:11:34\n   |\n10 |   class StrProcessor:\n11 |       words_to_ignore: list[str] = [\n   |  __________________________________^\n12 | |         \"de\",\n13 | |         \"da\",\n14 | |     ]\n   | |_____^\n15 |       actual_name_to_receipt_description_mapper: dict[str, list[str]] = {\n16 |           \"queijo\": [\"qj\"],\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/name_search.py:15:71\n   |\n13 |           \"da\",\n14 |       ]\n15 |       actual_name_to_receipt_description_mapper: dict[str, list[str]] = {\n   |  _______________________________________________________________________^\n16 | |         \"queijo\": [\"qj\"],\n17 | |         \"ct\": [\"contra\"],\n18 | |         \"mozarela\": [\"mus\"],\n19 | |         \"costela\": [\"costelinha\"],\n20 | |         \"porco\": [\"suina\"],\n21 | |         \"com\": [\"c\"],\n22 | |         \"sem\": [\"s\"],\n23 | |     }\n   | |_____^\n24 |\n25 |       def __init__(self, input: str):\n   |\n\nSIM103 Return the condition `first_word_in_description == first_word_in_db_name` directly\n   --> src/contexts/products_catalog/core/adapters/name_search.py:145:9\n    |\n143 |           first_word_in_description = self.processed_description.split()[0]\n144 |           first_word_in_db_name = processed_db_name.split()[0]\n145 | /         if first_word_in_description == first_word_in_db_name:\n146 | |             return True\n147 | |         return False\n    | |____________________^\n148 |\n149 |       def _has_first_word_partial_match(self, processed_db_name: str) -> bool:\n    |\nhelp: Replace with `return first_word_in_description == first_word_in_db_name`\n\nSIM103 Return the condition `first_word_in_description in first_word_in_db_name` directly\n   --> src/contexts/products_catalog/core/adapters/name_search.py:152:9\n    |\n150 |           first_word_in_description = self.processed_description.split()[0]\n151 |           first_word_in_db_name = processed_db_name.split()[0]\n152 | /         if first_word_in_description in first_word_in_db_name:\n153 | |             return True\n154 | |         return False\n    | |____________________^\n155 |\n156 |       def _full_word_number_of_words_matching(self, processed_db_name: str) -> int:\n    |\nhelp: Replace with `return first_word_in_description in first_word_in_db_name`\n\nUP035 `typing.Type` is deprecated, use `type` instead\n --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:4:1\n  |\n2 | from collections import abc\n3 | from collections.abc import Callable\n4 | from typing import Any, Type\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:8:26\n   |\n 7 | def traverse(\n 8 |     *, keys: list, type: Type, data: Any, nutri_fact_value_normalizer: float = 1\n   |                          ^^^^\n 9 | ) -> Any:\n10 |     if not keys:\n   |\nhelp: Replace with `type`\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:11:12\n   |\n 9 | ) -> Any:\n10 |     if not keys:\n11 |         if type == str and isinstance(data, abc.MutableSequence):\n   |            ^^^^^^^^^^^\n12 |             return data.pop(0)\n13 |         try:\n   |\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:16:16\n   |\n14 |             return type(data) / nutri_fact_value_normalizer\n15 |         except Exception:\n16 |             if type == float or type == int:\n   |                ^^^^^^^^^^^^^\n17 |                 return 0\n18 |             return data\n   |\n\nSIM109 Use `type in (float, int)` instead of multiple equality comparisons\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:16:16\n   |\n14 |             return type(data) / nutri_fact_value_normalizer\n15 |         except Exception:\n16 |             if type == float or type == int:\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 |                 return 0\n18 |             return data\n   |\nhelp: Replace with `type in (float, int)`\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:16:33\n   |\n14 |             return type(data) / nutri_fact_value_normalizer\n15 |         except Exception:\n16 |             if type == float or type == int:\n   |                                 ^^^^^^^^^^^\n17 |                 return 0\n18 |             return data\n   |\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:28:12\n   |\n26 |         )\n27 |     except Exception:\n28 |         if type == float or type == int:\n   |            ^^^^^^^^^^^^^\n29 |             return 0\n30 |         raise Exception(f\"Error while traversing {keys} in {data}\")\n   |\n\nSIM109 Use `type in (float, int)` instead of multiple equality comparisons\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:28:12\n   |\n26 |         )\n27 |     except Exception:\n28 |         if type == float or type == int:\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n29 |             return 0\n30 |         raise Exception(f\"Error while traversing {keys} in {data}\")\n   |\nhelp: Replace with `type in (float, int)`\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:28:29\n   |\n26 |         )\n27 |     except Exception:\n28 |         if type == float or type == int:\n   |                             ^^^^^^^^^^^\n29 |             return 0\n30 |         raise Exception(f\"Error while traversing {keys} in {data}\")\n   |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:30:9\n   |\n28 |         if type == float or type == int:\n29 |             return 0\n30 |         raise Exception(f\"Error while traversing {keys} in {data}\")\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nC419 Unnecessary list comprehension\n   --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:668:20\n    |\n666 |             kwargs = self.extractor(product)\n667 |             kwargs[\"json_data\"] = json.dumps(product, ensure_ascii=False)\n668 |             if all([i == 0 for i in kwargs[\"score\"].values()]):\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n669 |                 # kwargs[\"score\"] = asdict(Score())\n670 |                 kwargs[\"score\"] = None\n    |\nhelp: Remove unnecessary comprehension\n\nSIM115 Use a context manager for opening files\n   --> src/contexts/products_catalog/core/adapters/product_kwargs_extractor.py:677:17\n    |\n675 |     def from_path(cls, path):\n676 |         try:\n677 |             f = open(path)\n    |                 ^^^^\n678 |             txt = f.read()\n679 |             data = json.loads(txt)\n    |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/adapters/repositories/__init__.py:1:1\n  |\n1 | / from .brand_repository import BrandRepo\n2 | | from .classifications import *\n3 | | from .product_repository import ProductRepo\n4 | | from .source_repository import SourceRepo\n  | |_________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/repositories/__init__.py:12:2\n   |\n10 |     \"ProductRepo\",\n11 |     \"SourceRepo\",\n12 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/brand_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification import (\n 7 | |     BrandMapper,\n 8 | | )\n 9 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.brand import (\n10 | |     BrandSaModel,\n11 | | )\n12 | | from src.contexts.products_catalog.core.domain.entities.classification import Brand\n13 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n14 | |     CompositeRepository,\n15 | |     FilterColumnMapper,\n16 | |     SaGenericRepository,\n17 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/__init__.py:11:2\n   |\n 9 |     \"ParentCategoryRepo\",\n10 |     \"ProcessTypeRepo\",\n11 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/category_repository.py:1:1\n   |\n 1 | / from sqlalchemy.ext.asyncio import AsyncSession\n 2 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification.category_mapper import (\n 3 | |     CategoryMapper,\n 4 | | )\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.category_sa_model import (\n 6 | |     CategorySaModel,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.repositories.classifications.classification_repository import (\n 9 | |     ClassificationRepo,\n10 | | )\n11 | | from src.contexts.products_catalog.core.domain.entities.classification import Category\n12 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import FilterColumnMapper\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/category_repository.py:16:32\n   |\n15 |   class CategoryRepo(ClassificationRepo[Category, CategorySaModel]):\n16 |       filter_to_column_mappers = [\n   |  ________________________________^\n17 | |         FilterColumnMapper(\n18 | |             sa_model_type=CategorySaModel,\n19 | |             filter_key_to_column_name={\n20 | |                 \"id\": \"id\",\n21 | |                 \"name\": \"name\",\n22 | |                 \"author_id\": \"author_id\",\n23 | |             },\n24 | |         ),\n25 | |     ]\n   | |_____^\n26 |\n27 |       def __init__(\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/classification_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar, TypeVar\n 2 | |\n 3 | | from sqlalchemy import Select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification import (\n 7 | |     ClassificationSaModel,\n 8 | | )\n 9 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n10 | |     Classification,\n11 | | )\n12 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n13 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n14 | |     CompositeRepository,\n15 | |     FilterColumnMapper,\n16 | |     SaGenericRepository,\n17 | | )\n   | |_^\n18 |\n19 |   E = TypeVar(\"E\", bound=Classification)\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/food_group_repository.py:1:1\n   |\n 1 | / from sqlalchemy.ext.asyncio import AsyncSession\n 2 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification.food_group_mapper import (\n 3 | |     FoodGroupMapper,\n 4 | | )\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.food_group_sa_model import (\n 6 | |     FoodGroupSaModel,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.repositories.classifications.classification_repository import (\n 9 | |     ClassificationRepo,\n10 | | )\n11 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n12 | |     FoodGroup,\n13 | | )\n14 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import FilterColumnMapper\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/food_group_repository.py:18:32\n   |\n17 |   class FoodGroupRepo(ClassificationRepo[FoodGroup, FoodGroupSaModel]):\n18 |       filter_to_column_mappers = [\n   |  ________________________________^\n19 | |         FilterColumnMapper(\n20 | |             sa_model_type=FoodGroupSaModel,\n21 | |             filter_key_to_column_name={\n22 | |                 \"id\": \"id\",\n23 | |                 \"name\": \"name\",\n24 | |                 \"author_id\": \"author_id\",\n25 | |             },\n26 | |         ),\n27 | |     ]\n   | |_____^\n28 |\n29 |       def __init__(\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/parent_category_repository.py:1:1\n   |\n 1 | / from sqlalchemy.ext.asyncio import AsyncSession\n 2 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification.parent_category_mapper import (\n 3 | |     ParentCategoryMapper,\n 4 | | )\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.parent_categorysa_model import (\n 6 | |     ParentCategorySaModel,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.repositories.classifications.classification_repository import (\n 9 | |     ClassificationRepo,\n10 | | )\n11 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n12 | |     ParentCategory,\n13 | | )\n14 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import FilterColumnMapper\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/parent_category_repository.py:18:32\n   |\n17 |   class ParentCategoryRepo(ClassificationRepo[ParentCategory, ParentCategorySaModel]):\n18 |       filter_to_column_mappers = [\n   |  ________________________________^\n19 | |         FilterColumnMapper(\n20 | |             sa_model_type=ParentCategorySaModel,\n21 | |             filter_key_to_column_name={\n22 | |                 \"id\": \"id\",\n23 | |                 \"name\": \"name\",\n24 | |                 \"author_id\": \"author_id\",\n25 | |             },\n26 | |         ),\n27 | |     ]\n   | |_____^\n28 |\n29 |       def __init__(\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/process_type_repository.py:1:1\n   |\n 1 | / from sqlalchemy.ext.asyncio import AsyncSession\n 2 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification.process_type_mapper import (\n 3 | |     ProcessTypeMapper,\n 4 | | )\n 5 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.classification.process_type_sa_model import (\n 6 | |     ProcessTypeSaModel,\n 7 | | )\n 8 | | from src.contexts.products_catalog.core.adapters.repositories.classifications.classification_repository import (\n 9 | |     ClassificationRepo,\n10 | | )\n11 | | from src.contexts.products_catalog.core.domain.entities.classification import (\n12 | |     ProcessType,\n13 | | )\n14 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import FilterColumnMapper\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/adapters/repositories/classifications/process_type_repository.py:18:32\n   |\n17 |   class ProcessTypeRepo(ClassificationRepo[ProcessType, ProcessTypeSaModel]):\n18 |       filter_to_column_mappers = [\n   |  ________________________________^\n19 | |         FilterColumnMapper(\n20 | |             sa_model_type=ProcessTypeSaModel,\n21 | |             filter_key_to_column_name={\n22 | |                 \"id\": \"id\",\n23 | |                 \"name\": \"name\",\n24 | |                 \"author_id\": \"author_id\",\n25 | |             },\n26 | |         ),\n27 | |     ]\n   | |_____^\n28 |\n29 |       def __init__(\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/product_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select, case, desc, func, inspect, nulls_last, or_, select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | | from sqlalchemy.orm import aliased\n 6 | |\n 7 | | from src.contexts.products_catalog.core.adapters.name_search import SimilarityRanking\n 8 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.product_mapper import (\n 9 | |     ProductMapper,\n10 | | )\n11 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models import (\n12 | |     BrandSaModel,\n13 | |     CategorySaModel,\n14 | |     FoodGroupSaModel,\n15 | |     ParentCategorySaModel,\n16 | |     ProcessTypeSaModel,\n17 | |     ProductSaModel,\n18 | |     SourceSaModel,\n19 | | )\n20 | | from src.contexts.products_catalog.core.domain.enums import FrontendFilterTypes\n21 | | from src.contexts.products_catalog.core.domain.root_aggregate.product import Product\n22 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n23 | |     RepositoryLogger,\n24 | | )\n25 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n26 | |     CompositeRepository,\n27 | |     FilterColumnMapper,\n28 | |     SaGenericRepository,\n29 | | )\n30 | | from src.contexts.seedwork.shared.endpoints.exceptions import BadRequestError\n31 | | from src.logging.logger import logger\n   | |_____________________________________^\n32 |\n33 |   _source_sort_order = [\"manual\", \"tbca\", \"taco\", \"private\", \"gs1\", \"auto\"]\n   |\nhelp: Organize imports\n\nE711 Comparison to `None` should be `cond is not None`\n   --> src/contexts/products_catalog/core/adapters/repositories/product_repository.py:195:44\n    |\n193 |             select(ProductSaModel.brand)\n194 |             .distinct(ProductSaModel.brand)\n195 |             .where(ProductSaModel.brand != None)\n    |                                            ^^^^\n196 |             .order_by(nulls_last(ProductSaModel.brand))\n197 |         )\n    |\nhelp: Replace with `cond is not None`\n\nE711 Comparison to `None` should be `cond is None`\n   --> src/contexts/products_catalog/core/adapters/repositories/product_repository.py:217:44\n    |\n215 |         if not include_product_with_barcode:\n216 |             stmt = stmt.where(\n217 |                 (ProductSaModel.barcode == None) | (ProductSaModel.barcode == \"\")\n    |                                            ^^^^\n218 |             )\n    |\nhelp: Replace with `cond is None`\n\nE712 Avoid equality comparisons to `True`; use `ProductSaModel.is_food:` for truth checks\n   --> src/contexts/products_catalog/core/adapters/repositories/product_repository.py:222:17\n    |\n220 |         stmt = (\n221 |             stmt.where(\n222 |                 ProductSaModel.is_food == True, ProductSaModel.discarded == False\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n223 |             )\n224 |             .order_by(nulls_last(desc(\"sim_score\")))\n    |\nhelp: Replace with `ProductSaModel.is_food`\n\nE712 Avoid equality comparisons to `False`; use `not ProductSaModel.discarded:` for false checks\n   --> src/contexts/products_catalog/core/adapters/repositories/product_repository.py:222:49\n    |\n220 |         stmt = (\n221 |             stmt.where(\n222 |                 ProductSaModel.is_food == True, ProductSaModel.discarded == False\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n223 |             )\n224 |             .order_by(nulls_last(desc(\"sim_score\")))\n    |\nhelp: Replace with `not ProductSaModel.discarded`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/products_catalog/core/adapters/repositories/source_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.products_catalog.core.adapters.ORM.mappers.classification import (\n 7 | |     SourceMapper,\n 8 | | )\n 9 | | from src.contexts.products_catalog.core.adapters.ORM.sa_models.source import (\n10 | |     SourceSaModel,\n11 | | )\n12 | | from src.contexts.products_catalog.core.domain.entities.classification import Source\n13 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n14 | |     CompositeRepository,\n15 | |     FilterColumnMapper,\n16 | |     SaGenericRepository,\n17 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/config.py:1:1\n  |\n1 | / import os\n2 | | from functools import lru_cache\n3 | |\n4 | | from pydantic_settings import SettingsConfigDict, BaseSettings\n  | |______________________________________________________________^\n  |\nhelp: Organize imports\n\nUP011 [*] Unnecessary parentheses to `functools.lru_cache`\n  --> src/contexts/products_catalog/core/config.py:14:11\n   |\n14 | @lru_cache()\n   |           ^^\n15 | def get_settings() -> Settings:\n16 |     return Settings()\n   |\nhelp: Remove unnecessary parentheses\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/__init__.py:1:1\n  |\n1 | from .classification import *\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/__init__.py:1:1\n  |\n1 | / from .classification import Classification\n2 | | from .brand import Brand\n3 | | from .category import Category\n4 | | from .food_group import FoodGroup\n5 | | from .parent_category import ParentCategory\n6 | | from .process_type import ProcessType\n7 | | from .source import Source\n  | |__________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/domain/entities/classification/__init__.py:18:2\n   |\n16 |     \"ProcessType\",\n17 |     \"Source\",\n18 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/brand.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.brand.brand_created import BrandCreated\n  | |____________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/category.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.category.category_created import CategoryCreated\n  | |_____________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/food_group.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.food_group.food_group_created import FoodGroupCreated\n  | |__________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/parent_category.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.parent_category.parent_category_created import ParentCategoryCreated\n  | |_________________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/process_type.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.process_type.process_type_created import ProcessTypeCreated\n  | |________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/entities/classification/source.py:1:1\n  |\n1 | / from src.contexts.products_catalog.core.domain.entities.classification.classification import (\n2 | |     Classification,\n3 | | )\n4 | | from src.contexts.products_catalog.core.domain.events.classification.source.source_created import SourceCreated\n  | |_______________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:19:21\n   |\n17 |   @unique\n18 |   class Role(SeedRole):\n19 |       ADMINISTRATOR = {\n   |  _____________________^\n20 | |         Permission.MANAGE_USERS,\n21 | |         Permission.MANAGE_PRODUCTS,\n22 | |         Permission.VIEW_AUDIT_LOG,\n23 | |     }\n   | |_____^\n24 |       USER_MANAGER = {Permission.MANAGE_USERS}\n25 |       PRODUCT_MANAGER = {Permission.MANAGE_PRODUCTS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:24:20\n   |\n22 |         Permission.VIEW_AUDIT_LOG,\n23 |     }\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n25 |     PRODUCT_MANAGER = {Permission.MANAGE_PRODUCTS}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:25:23\n   |\n23 |     }\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n25 |     PRODUCT_MANAGER = {Permission.MANAGE_PRODUCTS}\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:26:15\n   |\n24 |     USER_MANAGER = {Permission.MANAGE_USERS}\n25 |     PRODUCT_MANAGER = {Permission.MANAGE_PRODUCTS}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:27:12\n   |\n25 |     PRODUCT_MANAGER = {Permission.MANAGE_PRODUCTS}\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:28:17\n   |\n26 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/products_catalog/core/domain/enums.py:29:21\n   |\n27 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n28 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n29 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n30 |\n31 |     @property\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/events/classification/brand/brand_created.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.products_catalog.core.domain.events.classification.classification_created import (\n4 | |     ClassificationCreated,\n5 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/events/updated_attr_that_reflect_on_recipes.py:1:1\n  |\n1 | / from attrs import field, frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.event import Event\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/root_aggregate/__init__.py:1:1\n  |\n1 | from .product import Product\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/domain/root_aggregate/__init__.py:6:2\n  |\n4 | __all__ = [\n5 |     \"Product\",\n6 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nB008 Do not perform function call `IsFoodVotes` in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable\n   --> src/contexts/products_catalog/core/domain/root_aggregate/product.py:170:23\n    |\n168 |         barcode: str,\n169 |         image_url: str | None = None,\n170 |         is_food_votes=IsFoodVotes(),\n    |                       ^^^^^^^^^^^^^\n171 |     ) -> \"Product\":\n172 |         entity_id = uuid.uuid4().hex\n    |\n\nB007 Loop control variable `value` not used within loop body\n   --> src/contexts/products_catalog/core/domain/root_aggregate/product.py:629:18\n    |\n628 |         # Validate all properties first (similar to Entity base class)\n629 |         for key, value in kwargs.items():\n    |                  ^^^^^\n630 |             if key[0] == \"_\":\n631 |                 raise AttributeError(f\"{key} is private.\")\n    |\nhelp: Rename unused `value` to `_value`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/value_objects/product_shopping_data.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n4 |\n5 |   @frozen(kw_only=True, hash=True)\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/products_catalog/core/domain/value_objects/product_shopping_data.py:26:38\n   |\n24 |     quantity: float\n25 |     unit: str\n26 |     product_data: ProductShoppingData\n   |                                      ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/domain/value_objects/score.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from attrs import frozen\n4 | |\n5 | |\n6 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n --> src/contexts/products_catalog/core/endpoints/internal/classification/__init__.py:1:1\n  |\n1 |  \n  | ^\n  |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/endpoints/internal/classification/__init__.py:1:2\n  |\n1 |  \n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/endpoints/internal/products/fetch.py:1:1\n  |\n1 | / import json\n2 | | from typing import Any\n3 | |\n4 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate.api_product import ApiProduct\n5 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate.api_product_filter import ApiProductFilter\n6 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n7 | | from src.contexts.products_catalog.core.services.uow import UnitOfWork\n8 | | from src.contexts.shared_kernel.services.messagebus import MessageBus\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/endpoints/internal/products/filter_options.py:1:1\n  |\n1 | / import json\n2 | | from typing import Any\n3 | |\n4 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate.api_product_filter import ApiProductFilter\n5 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n6 | | from src.contexts.products_catalog.core.services.uow import UnitOfWork\n7 | | from src.contexts.shared_kernel.services.messagebus import MessageBus\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/endpoints/internal/products/get_by_id.py:1:1\n  |\n1 | / import json\n2 | | from typing import Any\n3 | |\n4 | |\n5 | | from src.contexts.products_catalog.core.adapters.api_schemas.root_aggregate.api_product import ApiProduct\n6 | | from src.contexts.products_catalog.core.bootstrap.container import Container\n7 | | from src.contexts.products_catalog.core.services.uow import UnitOfWork\n8 | | from src.contexts.shared_kernel.services.messagebus import MessageBus\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/services/command_handlers/classification/parent_category/create.py:1:1\n  |\n1 | / from attrs import asdict\n2 | | from src.contexts.products_catalog.core.domain.commands.classifications.parent_category.create import (\n3 | |     CreateParentCategory,\n4 | | )\n5 | | from src.contexts.products_catalog.core.domain.entities.classification.parent_category import ParentCategory\n6 | | from src.contexts.products_catalog.core.services.uow import UnitOfWork\n  | |______________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/products_catalog/core/services/command_handlers/products/add_non_food_product.py:1:1\n  |\n1 | / from attrs import asdict\n2 | |\n3 | | from src.contexts.products_catalog.core.domain.commands import AddNonFoodProduct\n4 | | from src.contexts.products_catalog.core.domain.root_aggregate.product import Product\n5 | | from src.contexts.products_catalog.core.services.uow import UnitOfWork\n6 | | from src.contexts.seedwork.shared.endpoints.exceptions import BadRequestError\n  | |_____________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/products_catalog/core/services/event_handlers/products/__init__.py:4:2\n  |\n2 |     publish_email_admin_of_new_food_product,\n3 |     publish_scrape_image_for_new_product,\n4 | )\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/create_client.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_create_client import (\n 8 | |     ApiCreateClient,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/create_menu.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_create_menu import (  # noqa: E501\n 8 | |     ApiCreateMenu,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/aws_lambda/client/create_menu.py:7:103\n  |\n6 | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n7 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_create_menu import (  # noqa: E501\n  |                                                                                                       ^^^^^^^^^^^^\n8 |     ApiCreateMenu,\n9 | )\n  |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/delete_client.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_delete_client import (\n 8 | |     ApiDeleteClient,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/delete_menu.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_delete_menu import (  # noqa: E501\n 8 | |     ApiDeleteMenu,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/aws_lambda/client/delete_menu.py:7:103\n  |\n6 | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n7 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_delete_menu import (  # noqa: E501\n  |                                                                                                       ^^^^^^^^^^^^\n8 |     ApiDeleteMenu,\n9 | )\n  |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/fetch_client.py:1:1\n   |\n 1 | / from typing import TYPE_CHECKING, Any\n 2 | |\n 3 | | import anyio\n 4 | | from pydantic import TypeAdapter\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.root_aggregate import (\n 8 | |     ApiClient,\n 9 | |     ApiClientFilter,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nB007 Loop control variable `i` not used within loop body\n  --> src/contexts/recipes_catalog/aws_lambda/client/fetch_client.py:90:9\n   |\n88 |     conversion_errors = 0\n89 |\n90 |     for i, client in enumerate(result):\n   |         ^\n91 |         try:\n92 |             api_client = ApiClient.from_domain(client)\n   |\nhelp: Rename unused `i` to `_i`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/get_client_by_id.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.root_aggregate import (\n 8 | |     ApiClient,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/update_client.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_update_client import (\n 8 | |     ApiUpdateClient,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/client/update_menu.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.commands.api_update_menu import (\n 8 | |     ApiUpdateMenu,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/copy_meal.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands.api_copy_meal import (\n 8 | |     ApiCopyMeal,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/create_meal.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands.api_create_meal import (\n 8 | |     ApiCreateMeal,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/delete_meal.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands.api_delete_meal import (\n 8 | |     ApiDeleteMeal,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/fetch_meal.py:1:1\n   |\n 1 | / from typing import TYPE_CHECKING, Any\n 2 | |\n 3 | | import anyio\n 4 | | from pydantic import TypeAdapter\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.root_aggregate import (\n 8 | |     ApiMeal,\n 9 | |     ApiMealFilter,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nB007 Loop control variable `i` not used within loop body\n  --> src/contexts/recipes_catalog/aws_lambda/meal/fetch_meal.py:92:9\n   |\n90 |     conversion_errors = 0\n91 |\n92 |     for i, meal in enumerate(result):\n   |         ^\n93 |         try:\n94 |             api_meal = ApiMeal.from_domain(meal)\n   |\nhelp: Rename unused `i` to `_i`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/get_meal_by_id.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.root_aggregate import (\n 8 | |     ApiMeal,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/meal/update_meal.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands.api_update_meal import (\n 8 | |     ApiUpdateMeal,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/copy_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands import (\n 8 | |     api_copy_recipe,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/create_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands import (\n 8 | |     api_create_recipe,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n12 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n13 | |     recipes_aws_auth_middleware,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n16 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n17 | |     aws_lambda_exception_handler_middleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n20 | |     aws_lambda_logging_middleware,\n21 | | )\n22 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n23 |\n24 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/delete_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n 8 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n 9 | | from src.contexts.recipes_catalog.core.domain.meal.commands.delete_recipe import (\n10 | |     DeleteRecipe,\n11 | | )\n12 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n13 | |     EntityNotFoundError,\n14 | | )\n15 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n16 | |     recipes_aws_auth_middleware,\n17 | | )\n18 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n19 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n20 | |     aws_lambda_exception_handler_middleware,\n21 | | )\n22 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n23 | |     aws_lambda_logging_middleware,\n24 | | )\n25 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n26 |\n27 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/fetch_recipe.py:1:1\n   |\n 1 | / from typing import TYPE_CHECKING, Any\n 2 | |\n 3 | | import anyio\n 4 | | from pydantic import TypeAdapter\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n 8 | |     api_recipe,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_filter import (  # noqa: E501\n11 | |     ApiRecipeFilter,\n12 | | )\n13 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n14 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n15 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n16 | |     recipes_aws_auth_middleware,\n17 | | )\n18 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n19 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n20 | |     aws_lambda_exception_handler_middleware,\n21 | | )\n22 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n23 | |     aws_lambda_logging_middleware,\n24 | | )\n25 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n26 |\n27 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/fetch_recipe.py:10:103\n   |\n 8 |     api_recipe,\n 9 | )\n10 | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_filter import (  # noqa: E501\n   |                                                                                                       ^^^^^^^^^^^^\n11 |     ApiRecipeFilter,\n12 | )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/get_recipe_by_id.py:1:1\n   |\n 1 | / from typing import TYPE_CHECKING, Any\n 2 | |\n 3 | | import anyio\n 4 | |\n 5 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 6 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n 7 | |     api_recipe,\n 8 | | )\n 9 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n10 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n11 | |     EntityNotFoundError,\n12 | | )\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/rate_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands import (\n 8 | |     api_rate_recipe,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n11 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n12 | |     EntityNotFoundError,\n13 | | )\n14 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n15 | |     recipes_aws_auth_middleware,\n16 | | )\n17 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n18 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n19 | |     aws_lambda_exception_handler_middleware,\n20 | | )\n21 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n22 | |     aws_lambda_logging_middleware,\n23 | | )\n24 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n25 |\n26 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/recipe/update_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.commands import (\n 8 | |     api_update_recipe,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n11 | |     api_recipe,\n12 | | )\n13 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n14 | | from src.contexts.recipes_catalog.core.domain.enums import Permission\n15 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n16 | |     EntityNotFoundError,\n17 | | )\n18 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n19 | |     recipes_aws_auth_middleware,\n20 | | )\n21 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n22 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n23 | |     aws_lambda_exception_handler_middleware,\n24 | | )\n25 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n26 | |     aws_lambda_logging_middleware,\n27 | | )\n28 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n29 |\n30 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/shopping_list/fetch_recipe.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n 8 | |     ApiRecipe,\n 9 | |     ApiRecipeFilter,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nB007 Loop control variable `i` not used within loop body\n  --> src/contexts/recipes_catalog/aws_lambda/shopping_list/fetch_recipe.py:90:9\n   |\n88 |     conversion_errors = 0\n89 |\n90 |     for i, recipe in enumerate(result):\n   |         ^\n91 |         try:\n92 |             api_recipe = ApiRecipe.from_domain(recipe)\n   |\nhelp: Rename unused `i` to `_i`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/tag/fetch_tag.py:1:1\n   |\n 1 | / from typing import TYPE_CHECKING, Any\n 2 | |\n 3 | | import anyio\n 4 | | from pydantic import TypeAdapter\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n 8 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag import (\n 9 | |     ApiTag,\n10 | |     ApiTagFilter,\n11 | | )\n12 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n13 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n14 | |     recipes_aws_auth_middleware,\n15 | | )\n16 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n17 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n18 | |     aws_lambda_exception_handler_middleware,\n19 | | )\n20 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n21 | |     aws_lambda_logging_middleware,\n22 | | )\n23 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n24 |\n25 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nB007 Loop control variable `i` not used within loop body\n  --> src/contexts/recipes_catalog/aws_lambda/tag/fetch_tag.py:92:9\n   |\n90 |     conversion_errors = 0\n91 |\n92 |     for i, tag in enumerate(result):\n   |         ^\n93 |         try:\n94 |             api_tag = ApiTag.from_domain(tag)\n   |\nhelp: Rename unused `i` to `_i`\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/aws_lambda/tag/get_tag_by_id.py:1:1\n   |\n 1 | / import json\n 2 | | from typing import TYPE_CHECKING, Any\n 3 | |\n 4 | | import anyio\n 5 | |\n 6 | | from src.contexts.recipes_catalog.aws_lambda.cors_headers import CORS_headers\n 7 | | from src.contexts.recipes_catalog.core.bootstrap.container import Container\n 8 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag import ApiTag\n 9 | | from src.contexts.shared_kernel.endpoints.base_endpoint_handler import LambdaHelpers\n10 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n11 | |     recipes_aws_auth_middleware,\n12 | | )\n13 | | from src.contexts.shared_kernel.middleware.decorators import async_endpoint_handler\n14 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n15 | |     aws_lambda_exception_handler_middleware,\n16 | | )\n17 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n18 | |     aws_lambda_logging_middleware,\n19 | | )\n20 | | from src.logging.logger import generate_correlation_id\n   | |______________________________________________________^\n21 |\n22 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/ORM/__init__.py:1:1\n  |\n1 | / from .sa_models import *\n2 | | from .mappers import *\n  | |______________________^\n3 |\n4 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/ORM/__init__.py:7:2\n  |\n5 |     \"sa_models\",\n6 |     \"mappers\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/__init__.py:1:1\n  |\n1 | / from .menu_mapper import MenuMapper\n2 | | from .client_mapper import ClientMapper\n  | |_______________________________________^\n3 |\n4 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/__init__.py:7:2\n  |\n5 |     \"MenuMapper\",\n6 |     \"ClientMapper\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/client_mapper.py:1:1\n   |\n 1 | / from dataclasses import asdict as data_class_asdict\n 2 | | from datetime import datetime\n 3 | |\n 4 | | from attrs import asdict\n 5 | | from sqlalchemy.ext.asyncio import AsyncSession\n 6 | |\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.mappers.menu_mapper import (\n 8 | |     MenuMapper,\n 9 | | )\n10 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.client_sa_model import (\n11 | |     ClientSaModel,\n12 | | )\n13 | | from src.contexts.recipes_catalog.core.domain.client.root_aggregate.client import Client\n14 | | from src.contexts.seedwork.shared import utils\n15 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n16 | | from src.contexts.shared_kernel.adapters.ORM.mappers.tag.tag_mapper import TagMapper\n17 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.address_sa_model import (\n18 | |     AddressSaModel,\n19 | | )\n20 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.contact_info_sa_model import (\n21 | |     ContactInfoSaModel,\n22 | | )\n23 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.profile_sa_model import (\n24 | |     ProfileSaModel,\n25 | | )\n26 | | from src.contexts.shared_kernel.domain.value_objects.address import Address\n27 | | from src.contexts.shared_kernel.domain.value_objects.contact_info import ContactInfo\n28 | | from src.contexts.shared_kernel.domain.value_objects.profile import Profile\n29 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nC403 Unnecessary list comprehension (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/client_mapper.py:133:18\n    |\n131 |             address=Address(**data_class_asdict(sa_obj.address)),\n132 |             menus=[MenuMapper.map_sa_to_domain(i) for i in sa_obj.menus],\n133 |             tags=set([TagMapper.map_sa_to_domain(i) for i in sa_obj.tags]),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n134 |             author_id=sa_obj.author_id,\n135 |             notes=sa_obj.notes,\n    |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/menu_mapper.py:1:1\n   |\n 1 | / from datetime import UTC, datetime\n 2 | |\n 3 | | from sqlalchemy.ext.asyncio import AsyncSession\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_meal_sa_model import (\n 6 | |     MenuMealSaModel,\n 7 | | )\n 8 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_sa_model import (\n 9 | |     MenuSaModel,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.domain.client.entities.menu import Menu\n12 | | from src.contexts.recipes_catalog.core.domain.client.value_objects.menu_meal import (\n13 | |     MenuMeal,\n14 | | )\n15 | | from src.contexts.seedwork.shared import utils\n16 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n17 | | from src.contexts.shared_kernel.adapters.ORM.mappers.nutri_facts_mapper import (\n18 | |     NutriFactsMapper,\n19 | | )\n20 | | from src.contexts.shared_kernel.adapters.ORM.mappers.tag.tag_mapper import TagMapper\n   | |____________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nC403 Unnecessary list comprehension (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/menu_mapper.py:118:19\n    |\n116 |             version=sa_obj.version,\n117 |             # relationships\n118 |             meals=set([_MenuMealMapper.map_sa_to_domain(i) for i in sa_obj.meals]),\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |             tags=set([TagMapper.map_sa_to_domain(i) for i in sa_obj.tags]),\n120 |         )\n    |\nhelp: Rewrite as a set comprehension\n\nC403 Unnecessary list comprehension (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/client/ORM/mappers/menu_mapper.py:119:18\n    |\n117 |             # relationships\n118 |             meals=set([_MenuMealMapper.map_sa_to_domain(i) for i in sa_obj.meals]),\n119 |             tags=set([TagMapper.map_sa_to_domain(i) for i in sa_obj.tags]),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n120 |         )\n    |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/__init__.py:1:1\n  |\n1 | / from .menu_sa_model import MenuSaModel\n2 | | from .menu_meal_sa_model import MenuMealSaModel\n3 | | from .client_sa_model import ClientSaModel\n4 | | from .client_associations import clients_tags_association, menus_tags_association\n  | |_________________________________________________________________________________^\n5 |\n6 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/__init__.py:12:2\n   |\n10 |     \"ClientSaModel\",\n11 |     \"clients_tags_association\",\n12 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/client_associations.py:36:2\n   |\n34 |     schema=\"recipes_catalog\",\n35 |     extend_existing=True,\n36 | )\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/client_sa_model.py:1:1\n   |\n 1 | / from dataclasses import fields\n 2 | | from datetime import datetime\n 3 | | from typing import Any\n 4 | |\n 5 | | from sqlalchemy import func\n 6 | | from sqlalchemy.dialects.postgresql import JSONB\n 7 | | from sqlalchemy.orm import Mapped, composite, mapped_column, relationship\n 8 | |\n 9 | | import src.db.sa_field_types as sa_field\n10 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.client_associations import (\n11 | |     clients_tags_association,\n12 | | )\n13 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_sa_model import (\n14 | |     MenuSaModel,\n15 | | )\n16 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.address_sa_model import (\n17 | |     AddressSaModel,\n18 | | )\n19 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.contact_info_sa_model import (\n20 | |     ContactInfoSaModel,\n21 | | )\n22 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.profile_sa_model import (\n23 | |     ProfileSaModel,\n24 | | )\n25 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n26 | |     TagSaModel,\n27 | | )\n28 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/menu_meal_sa_model.py:1:1\n   |\n 1 | / from dataclasses import fields\n 2 | | from datetime import time\n 3 | |\n 4 | | from sqlalchemy import ForeignKey, Index\n 5 | | from sqlalchemy.orm import Mapped, composite, mapped_column\n 6 | |\n 7 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n 8 | |     NutriFactsSaModel,\n 9 | | )\n10 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nSIM210 Use `bool(...)` instead of `True if ... else False`\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/menu_meal_sa_model.py:29:21\n   |\n27 |                   field.name,\n28 |                   index=(\n29 | /                     True\n30 | |                     if (\n31 | |                         field.name == \"calories\"\n32 | |                         or field.name == \"protein\"\n33 | |                         or field.name == \"carbohydrate\"\n34 | |                         or field.name == \"total_fat\"\n35 | |                         or field.name == \"saturated_fat\"\n36 | |                         or field.name == \"trans_fat\"\n37 | |                         or field.name == \"sugar\"\n38 | |                         or field.name == \"salt\"\n39 | |                     )\n40 | |                     else False\n   | |______________________________^\n41 |                   ),\n42 |               )\n   |\nhelp: Replace with `bool(...)\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/ORM/sa_models/menu_sa_model.py:1:1\n   |\n 1 | / from datetime import datetime\n 2 | |\n 3 | | from sqlalchemy import ForeignKey, func\n 4 | | from sqlalchemy.orm import Mapped, mapped_column, relationship\n 5 | |\n 6 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_meal_sa_model import MenuMealSaModel\n 7 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.client_associations import menus_tags_association\n 8 | | import src.db.sa_field_types as sa_field\n 9 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import TagSaModel\n10 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/__init__.py:11:2\n   |\n 9 |     \"root_aggregate\",\n10 |     \"value_objects\",\n11 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/__init__.py:1:1\n  |\n1 | / from .api_create_client import ApiCreateClient\n2 | | from .api_update_client import ApiAttributesToUpdateOnClient, ApiUpdateClient\n3 | | from .api_create_menu import ApiCreateMenu\n4 | | from .api_update_menu import ApiAttributesToUpdateOnMenu, ApiUpdateMenu\n5 | | from .api_delete_client import ApiDeleteClient\n6 | | from .api_delete_menu import ApiDeleteMenu\n  | |__________________________________________^\n7 |\n8 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/__init__.py:17:2\n   |\n15 |     \"ApiDeleteClient\",\n16 |     \"ApiDeleteMenu\",\n17 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_client.py:1:1\n  |\n1 | / from typing import Optional\n2 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.root_aggregate.api_client_fields import ClientAddressOptional, Clien\u2026\n3 | | from src.contexts.recipes_catalog.core.domain.client.commands.create_client import CreateClient\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW291 Trailing whitespace\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_client.py:28:84\n   |\n26 |         notes (str, optional): Additional notes about the client.\n27 |         form_response_id (str, optional): TypeForm response ID to fetch and map data from.\n28 |             When provided, automatically maps form data to client fields and stores \n   |                                                                                    ^\n29 |             original response in onboarding_data field.\n   |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_client.py:51:23\n   |\n49 |     tags: ClientTagsOptionalFrozenset\n50 |     notes: ClientNotesOptional\n51 |     form_response_id: Optional[str] = None\n   |                       ^^^^^^^^^^^^^\n52 |\n53 |     def to_domain(self) -> CreateClient:\n   |\nhelp: Convert to `X | None`\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_client.py:66:13\n   |\n64 |             )\n65 |         except Exception as e:\n66 |             raise ValueError(f\"Failed to convert ApiCreateClient to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_menu.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.adapters.client.api_schemas.entities.api_menu_fields import MenuDescriptionOptional, MenuTagsOpt\u2026\n2 | | from src.contexts.recipes_catalog.core.domain.client.commands.create_menu import CreateMenu\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n5 | | from src.db.base import SaBase\n  | |______________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_create_menu.py:43:13\n   |\n41 |             )\n42 |         except Exception as e:\n43 |             raise ValueError(f\"Failed to convert ApiCreateMenu to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_delete_client.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.commands.delete_client import DeleteClient\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n4 | | from src.db.base import SaBase\n  | |______________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_delete_client.py:34:13\n   |\n32 |             return DeleteClient(client_id=self.client_id)\n33 |         except Exception as e:\n34 |             raise ValueError(f\"Failed to convert ApiDeleteClient to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_delete_menu.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.commands.delete_menu import DeleteMenu\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n4 | | from src.db.base import SaBase\n  | |______________________________^\n5 |\n6 |   class ApiDeleteMenu(BaseApiCommand[DeleteMenu]):\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_delete_menu.py:33:13\n   |\n31 |             return DeleteMenu(menu_id=self.menu_id)\n32 |         except Exception as e:\n33 |             raise ValueError(f\"Failed to convert ApiDeleteMenu to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_update_client.py:3:104\n  |\n1 | from typing import Any\n2 |\n3 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.root_aggregate.api_client import (  # noqa: E501\n  |                                                                                                        ^^^^^^^^^^^^\n4 |     ApiClient,\n5 | )\n  |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_update_client.py:6:111\n  |\n4 |     ApiClient,\n5 | )\n6 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.root_aggregate.api_client_fields import (  # noqa: E501\n  |                                                                                                               ^^^^^^^^^^^^\n7 |     ClientAddressOptional,\n8 |     ClientContactInfoOptinal,\n  |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_update_menu.py:3:96\n  |\n1 | from typing import Any\n2 |\n3 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.entities.api_menu import (  # noqa: E501\n  |                                                                                                ^^^^^^^^^^^^\n4 |     ApiMenu,\n5 | )\n  |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/commands/api_update_menu.py:6:103\n  |\n4 |     ApiMenu,\n5 | )\n6 | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.entities.api_menu_fields import (  # noqa: E501\n  |                                                                                                       ^^^^^^^^^^^^\n7 |     MenuDescriptionOptional,\n8 |     MenuNameRequired,\n  |\nhelp: Remove unused `noqa` directive\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/__init__.py:7:2\n  |\n5 |     \"ApiMenu\",\n6 |     \"ApiMenuFilter\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/api_menu.py:72:19\n   |\n70 |             author_id=self.author_id,\n71 |             client_id=self.client_id,\n72 |             meals=set(meal.to_domain() for meal in self.meals) if self.meals else None,\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n73 |             tags=set(tag.to_domain() for tag in self.tags) if self.tags else None,\n74 |             description=self.description,\n   |\nhelp: Rewrite as a set comprehension\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/api_menu.py:73:18\n   |\n71 |             client_id=self.client_id,\n72 |             meals=set(meal.to_domain() for meal in self.meals) if self.meals else None,\n73 |             tags=set(tag.to_domain() for tag in self.tags) if self.tags else None,\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n74 |             description=self.description,\n75 |             created_at=self.created_at,\n   |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/api_menu_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | |\n 6 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.value_objects.api_menu_meal import ApiMenuMeal\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedText, SanitizedTextOptional\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import validate_optional_text_length\n 9 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag.api_tag import ApiTag\n   | |____________________________________________________________________________________________^\n10 |\n11 |   # Required string fields with validation\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/api_menu_filter.py:1:1\n   |\n 1 | / from pydantic import BaseModel, model_validator\n 2 | |\n 3 | | from src.contexts.recipes_catalog.core.adapters.client.repositories.menu_repository import (  # noqa: E501\n 4 | |     MenuRepo,\n 5 | | )\n 6 | | from src.contexts.recipes_catalog.core.adapters.shared.parse_tags import parse_tags\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 8 | |     CreatedAtValue,\n 9 | | )\n10 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n11 | |     SaGenericRepository,\n12 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/entities/api_menu_filter.py:3:95\n  |\n1 | from pydantic import BaseModel, model_validator\n2 |\n3 | from src.contexts.recipes_catalog.core.adapters.client.repositories.menu_repository import (  # noqa: E501\n  |                                                                                               ^^^^^^^^^^^^\n4 |     MenuRepo,\n5 | )\n  |\nhelp: Remove unused `noqa` directive\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/__init__.py:7:2\n  |\n5 |     \"ApiClient\",\n6 |     \"ApiClientFilter\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client.py:120:18\n    |\n118 |             contact_info=self.contact_info.to_domain() if self.contact_info else None,\n119 |             address=self.address.to_domain() if self.address else None,\n120 |             tags=set(t.to_domain() for t in self.tags) if self.tags else None,\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n121 |             menus=[m.to_domain() for m in self.menus] if self.menus else None,\n122 |             notes=self.notes,\n    |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from typing import Annotated, Any, Dict\n 4 | | from pydantic import AfterValidator, Field\n 5 | |\n 6 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.entities.api_menu import ApiMenu\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedTextOptional\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import validate_optional_text_length\n 9 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_address import ApiAddress\n10 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_contact_info import ApiContactInfo\n11 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_profile import ApiProfile\n12 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag.api_tag import ApiTag\n   | |____________________________________________________________________________________________^\n13 |\n14 |   # Required object fields\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:3:1\n  |\n1 | from __future__ import annotations\n2 |\n3 | from typing import Annotated, Any, Dict\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from pydantic import AfterValidator, Field\n  |\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:21:38\n   |\n20 | # Optional object fields\n21 | ClientContactInfoOptinal = Annotated[ \n   |                                      ^\n22 |     ApiContactInfo | None,\n23 |     Field(None, description=\"Contact information of the client\"),\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:51:5\n   |\n49 | # Onboarding data field\n50 | ClientOnboardingDataOptional = Annotated[\n51 |     Dict[str, Any] | None,\n   |     ^^^^\n52 |     Field(None, description=\"Original form response data from client onboarding\"),\n53 | ] \n   |\nhelp: Replace with `dict`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:53:2\n   |\n51 |     Dict[str, Any] | None,\n52 |     Field(None, description=\"Original form response data from client onboarding\"),\n53 | ] \n   |  ^\n   |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_fields.py:53:3\n   |\n51 |     Dict[str, Any] | None,\n52 |     Field(None, description=\"Original form response data from client onboarding\"),\n53 | ] \n   |   ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_filter.py:1:1\n  |\n1 | / from pydantic import BaseModel, model_validator\n2 | |\n3 | | from src.contexts.recipes_catalog.core.adapters.client.repositories.client_repository import ClientRepo\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import CreatedAtValue\n5 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import SaGenericRepository\n  | |______________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/root_aggregate/api_client_filter.py:33:13\n   |\n31 |             ]\n32 |         )\n33 |         for k in values.keys():\n   |             ^^^^^^^^^^^^^^^^^^\n34 |             if SaGenericRepository.remove_postfix(k) not in allowed_filters:\n35 |                 raise ValueError(f\"Invalid filter: {k}\")\n   |\nhelp: Remove `.keys()`\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"ApiMenuMeal\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/api_menu_meal.py:1:1\n   |\n 1 | / from dataclasses import asdict\n 2 | | from typing import Dict, Any\n 3 | |\n 4 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_meal_sa_model import MenuMealSaModel\n 5 | | from src.contexts.recipes_catalog.core.adapters.client.api_schemas.value_objects.api_menu_meal_fields import MealTimeOptional, MealTyp\u2026\n 6 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.root_aggregate.api_meal_fields import MealNameRequired, MealNutriFact\u2026\n 7 | | from src.contexts.recipes_catalog.core.domain.client.value_objects.menu_meal import MenuMeal\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiValueObject\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n10 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import NutriFactsSaModel\n11 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_facts import ApiNutriFacts\n12 | | from src.contexts.shared_kernel.domain.enums import Weekday\n   | |___________________________________________________________^\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/api_menu_meal.py:2:1\n  |\n1 | from dataclasses import asdict\n2 | from typing import Dict, Any\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n3 |\n4 | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models.menu_meal_sa_model import MenuMealSaModel\n  |\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/api_menu_meal.py:86:32\n   |\n84 |         )\n85 |\n86 |     def to_orm_kwargs(self) -> Dict[str, Any]:\n   |                                ^^^^\n87 |         \"\"\"Convert to ORM model kwargs.\"\"\"\n88 |         return {\n   |\nhelp: Replace with `dict`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/api_menu_meal_fields.py:1:1\n  |\n1 | / from datetime import time\n2 | | from typing import Annotated\n3 | |\n4 | | from pydantic import Field\n5 | |\n6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedText\n7 | | from src.contexts.shared_kernel.domain.enums import Weekday\n  | |___________________________________________________________^\n8 |\n9 |   MealNameRequired = Annotated[\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/client/api_schemas/value_objects/api_menu_meal_fields.py:28:95\n   |\n26 |     Field(...,description=\"Meal type\", min_length=1, max_length=50),\n27 | ]\n28 | MealTimeOptional = Annotated[time | None, Field(default=None, description=\"Time of the meal\")]\n   |                                                                                               ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/client/repositories/__init__.py:7:2\n  |\n5 |     \"ClientRepo\",\n6 |     \"MenuRepo\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/repositories/client_repository.py:1:1\n   |\n 1 | / from itertools import groupby\n 2 | | from typing import Any, ClassVar\n 3 | |\n 4 | | from sqlalchemy import ColumnElement, Select, and_, or_, select\n 5 | | from sqlalchemy.ext.asyncio import AsyncSession\n 6 | | from sqlalchemy.orm import aliased\n 7 | |\n 8 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.mappers import (\n 9 | |     ClientMapper,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models import (\n12 | |     ClientSaModel,\n13 | |     MenuSaModel,\n14 | |     clients_tags_association,\n15 | | )\n16 | | from src.contexts.recipes_catalog.core.domain.client.root_aggregate.client import Client\n17 | | from src.contexts.seedwork.shared.adapters.enums import FrontendFilterTypes\n18 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n19 | |     RepositoryLogger,\n20 | | )\n21 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n22 | |     CompositeRepository,\n23 | |     FilterColumnMapper,\n24 | |     SaGenericRepository,\n25 | | )\n26 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n27 | |     TagSaModel,\n28 | | )\n29 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/client/repositories/menu_repository.py:1:1\n   |\n 1 | / from itertools import groupby\n 2 | | from typing import Any, ClassVar\n 3 | |\n 4 | | from sqlalchemy import ColumnElement, Select, and_, select\n 5 | | from sqlalchemy.ext.asyncio import AsyncSession\n 6 | | from sqlalchemy.orm import aliased\n 7 | |\n 8 | | from src.contexts.products_catalog.core.adapters.repositories import (\n 9 | |     ProductRepo,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.mappers.menu_mapper import (\n12 | |     MenuMapper,\n13 | | )\n14 | | from src.contexts.recipes_catalog.core.adapters.client.ORM.sa_models import (\n15 | |     MenuSaModel,\n16 | | )\n17 | | from src.contexts.recipes_catalog.core.domain.client.entities.menu import Menu\n18 | | from src.contexts.seedwork.shared.adapters.enums import FrontendFilterTypes\n19 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n20 | |     RepositoryLogger,\n21 | | )\n22 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n23 | |     CompositeRepository,\n24 | |     FilterColumnMapper,\n25 | |     SaGenericRepository,\n26 | | )\n27 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n28 | |     TagSaModel,\n29 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/__init__.py:11:2\n   |\n 9 | __all__ = [\n10 |     \"ClientOnboardingProvider\",\n11 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / import json\n 9 | | from typing import Dict, List, Optional, Any\n10 | |\n11 | | import src.contexts.client_onboarding.core.endpoints.internal as client_onboarding_api\n12 | | from src.contexts.recipes_catalog.core.adapters.external_providers.client_onboarding.schemas import (\n13 | |     ClientOnboardingFormResponse,\n14 | |     ClientOnboardingFormResponseList,\n15 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:9:1\n   |\n 8 | import json\n 9 | from typing import Dict, List, Optional, Any\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | import src.contexts.client_onboarding.core.endpoints.internal as client_onboarding_api\n   |\n\nUP035 `typing.List` is deprecated, use `list` instead\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:9:1\n   |\n 8 | import json\n 9 | from typing import Dict, List, Optional, Any\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | import src.contexts.client_onboarding.core.endpoints.internal as client_onboarding_api\n   |\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:21:1\n   |\n19 |     \"\"\"\n20 |     Internal provider for accessing client_onboarding context data.\n21 |     \n   | ^^^^\n22 |     Provides methods to retrieve form response data for client creation workflows.\n23 |     \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:24:1\n   |\n22 |     Provides methods to retrieve form response data for client creation workflows.\n23 |     \"\"\"\n24 |     \n   | ^^^^\n25 |     @staticmethod\n26 |     async def get_form_response(response_id: str) -> Dict[str, Any]:\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:26:54\n   |\n25 |     @staticmethod\n26 |     async def get_form_response(response_id: str) -> Dict[str, Any]:\n   |                                                      ^^^^\n27 |         \"\"\"\n28 |         Get a single form response by TypeForm response ID.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:29:1\n   |\n27 |         \"\"\"\n28 |         Get a single form response by TypeForm response ID.\n29 |         \n   | ^^^^^^^^\n30 |         Args:\n31 |             response_id: TypeForm response ID\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:32:1\n   |\n30 |         Args:\n31 |             response_id: TypeForm response ID\n32 |             \n   | ^^^^^^^^^^^^\n33 |         Returns:\n34 |             Dictionary containing form response data\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:35:1\n   |\n33 |         Returns:\n34 |             Dictionary containing form response data\n35 |             \n   | ^^^^^^^^^^^^\n36 |         Raises:\n37 |             Exception: If form response not found or API error occurs\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:43:1\n   |\n41 |             caller_context=\"recipes_catalog\"\n42 |         )\n43 |         \n   | ^^^^^^^^\n44 |         if response.get(\"statusCode\") != 200:\n45 |             error_body_str = response.get(\"body\", \"{}\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:49:1\n   |\n47 |             error_message = error_body.get(\"message\", \"Unknown error\")\n48 |             raise Exception(f\"Failed to get form response {response_id}: {error_message}\")\n49 |         \n   | ^^^^^^^^\n50 |         response_body = response.get(\"body\", \"{}\")\n51 |         if isinstance(response_body, str):\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:55:1\n   |\n53 |         else:\n54 |             form_response_data = response_body\n55 |         \n   | ^^^^^^^^\n56 |         if not isinstance(form_response_data, dict):\n57 |             raise Exception(f\"Invalid response format for form response {response_id}\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:58:1\n   |\n56 |         if not isinstance(form_response_data, dict):\n57 |             raise Exception(f\"Invalid response format for form response {response_id}\")\n58 |             \n   | ^^^^^^^^^^^^\n59 |         return ClientOnboardingFormResponse(**form_response_data).model_dump()\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:60:1\n   |\n59 |         return ClientOnboardingFormResponse(**form_response_data).model_dump()\n60 |     \n   | ^^^^\n61 |     @staticmethod\n62 |     async def get_form_responses(\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:63:18\n   |\n61 |     @staticmethod\n62 |     async def get_form_responses(\n63 |         form_id: Optional[int] = None,\n   |                  ^^^^^^^^^^^^^\n64 |         limit: Optional[int] = None,\n65 |         offset: Optional[int] = None\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:64:16\n   |\n62 |     async def get_form_responses(\n63 |         form_id: Optional[int] = None,\n64 |         limit: Optional[int] = None,\n   |                ^^^^^^^^^^^^^\n65 |         offset: Optional[int] = None\n66 |     ) -> List[Dict[str, Any]]:\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:65:17\n   |\n63 |         form_id: Optional[int] = None,\n64 |         limit: Optional[int] = None,\n65 |         offset: Optional[int] = None\n   |                 ^^^^^^^^^^^^^\n66 |     ) -> List[Dict[str, Any]]:\n67 |         \"\"\"\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:66:10\n   |\n64 |         limit: Optional[int] = None,\n65 |         offset: Optional[int] = None\n66 |     ) -> List[Dict[str, Any]]:\n   |          ^^^^\n67 |         \"\"\"\n68 |         Get multiple form responses with optional filtering.\n   |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:66:15\n   |\n64 |         limit: Optional[int] = None,\n65 |         offset: Optional[int] = None\n66 |     ) -> List[Dict[str, Any]]:\n   |               ^^^^\n67 |         \"\"\"\n68 |         Get multiple form responses with optional filtering.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:69:1\n   |\n67 |         \"\"\"\n68 |         Get multiple form responses with optional filtering.\n69 |         \n   | ^^^^^^^^\n70 |         Args:\n71 |             form_id: Optional form ID to filter responses\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:74:1\n   |\n72 |             limit: Optional limit for pagination\n73 |             offset: Optional offset for pagination\n74 |             \n   | ^^^^^^^^^^^^\n75 |         Returns:\n76 |             List of form response dictionaries\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:77:1\n   |\n75 |         Returns:\n76 |             List of form response dictionaries\n77 |             \n   | ^^^^^^^^^^^^\n78 |         Raises:\n79 |             Exception: If API error occurs\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:87:1\n   |\n85 |             offset=offset\n86 |         )\n87 |         \n   | ^^^^^^^^\n88 |         if response.get(\"statusCode\") != 200:\n89 |             error_body_str = response.get(\"body\", \"{}\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:93:1\n   |\n91 |             error_message = error_body.get(\"message\", \"Unknown error\")\n92 |             raise Exception(f\"Failed to get form responses: {error_message}\")\n93 |         \n   | ^^^^^^^^\n94 |         response_body = response.get(\"body\", \"{}\")\n95 |         if isinstance(response_body, str):\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:99:1\n    |\n 97 |         else:\n 98 |             responses_data = response_body\n 99 |         \n    | ^^^^^^^^\n100 |         if not isinstance(responses_data, dict):\n101 |             raise Exception(\"Invalid response format for form responses\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:102:1\n    |\n100 |         if not isinstance(responses_data, dict):\n101 |             raise Exception(\"Invalid response format for form responses\")\n102 |             \n    | ^^^^^^^^^^^^\n103 |         response_list = ClientOnboardingFormResponseList(**responses_data)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:104:1\n    |\n103 |         response_list = ClientOnboardingFormResponseList(**responses_data)\n104 |         \n    | ^^^^^^^^\n105 |         return [response.model_dump() for response in response_list.responses]\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:106:1\n    |\n105 |         return [response.model_dump() for response in response_list.responses]\n106 |     \n    | ^^^^\n107 |     @staticmethod\n108 |     async def get_form_responses_for_client_creation() -> List[Dict[str, Any]]:\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:108:59\n    |\n107 |     @staticmethod\n108 |     async def get_form_responses_for_client_creation() -> List[Dict[str, Any]]:\n    |                                                           ^^^^\n109 |         \"\"\"\n110 |         Get form responses that are suitable for client creation.\n    |\nhelp: Replace with `list`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:108:64\n    |\n107 |     @staticmethod\n108 |     async def get_form_responses_for_client_creation() -> List[Dict[str, Any]]:\n    |                                                                ^^^^\n109 |         \"\"\"\n110 |         Get form responses that are suitable for client creation.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:111:1\n    |\n109 |         \"\"\"\n110 |         Get form responses that are suitable for client creation.\n111 |         \n    | ^^^^^^^^\n112 |         This method filters responses to find those with adequate client identification\n113 |         data for creating recipes_catalog Client entities.\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:114:1\n    |\n112 |         This method filters responses to find those with adequate client identification\n113 |         data for creating recipes_catalog Client entities.\n114 |         \n    | ^^^^^^^^\n115 |         Returns:\n116 |             List of form response dictionaries with client identifier data\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:119:1\n    |\n117 |         \"\"\"\n118 |         all_responses = await ClientOnboardingProvider.get_form_responses()\n119 |         \n    | ^^^^^^^^\n120 |         # Filter responses that have client identifiers suitable for client creation\n121 |         suitable_responses = []\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:126:1\n    |\n124 |             if client_identifiers and _has_sufficient_client_data(client_identifiers):\n125 |                 suitable_responses.append(response)\n126 |         \n    | ^^^^^^^^\n127 |         return suitable_responses\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:128:1\n    |\n127 |         return suitable_responses\n128 |     \n    | ^^^^\n129 |     @staticmethod\n130 |     async def get_client_data_from_response(response_id: str) -> Dict[str, Any]:\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:130:66\n    |\n129 |     @staticmethod\n130 |     async def get_client_data_from_response(response_id: str) -> Dict[str, Any]:\n    |                                                                  ^^^^\n131 |         \"\"\"\n132 |         Extract client data from a form response for client creation.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:133:1\n    |\n131 |         \"\"\"\n132 |         Extract client data from a form response for client creation.\n133 |         \n    | ^^^^^^^^\n134 |         Args:\n135 |             response_id: TypeForm response ID\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:136:1\n    |\n134 |         Args:\n135 |             response_id: TypeForm response ID\n136 |             \n    | ^^^^^^^^^^^^\n137 |         Returns:\n138 |             Dictionary with extracted client data ready for Client entity creation\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:139:1\n    |\n137 |         Returns:\n138 |             Dictionary with extracted client data ready for Client entity creation\n139 |             \n    | ^^^^^^^^^^^^\n140 |         Raises:\n141 |             Exception: If form response not found or insufficient data\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:144:1\n    |\n142 |         \"\"\"\n143 |         form_response = await ClientOnboardingProvider.get_form_response(response_id)\n144 |         \n    | ^^^^^^^^\n145 |         client_identifiers = form_response.get(\"client_identifiers\", {})\n146 |         response_data = form_response.get(\"response_data\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:147:1\n    |\n145 |         client_identifiers = form_response.get(\"client_identifiers\", {})\n146 |         response_data = form_response.get(\"response_data\", {})\n147 |         \n    | ^^^^^^^^\n148 |         if not _has_sufficient_client_data(client_identifiers):\n149 |             raise Exception(f\"Form response {response_id} lacks sufficient client identification data\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:150:1\n    |\n148 |         if not _has_sufficient_client_data(client_identifiers):\n149 |             raise Exception(f\"Form response {response_id} lacks sufficient client identification data\")\n150 |         \n    | ^^^^^^^^\n151 |         # Extract and format client data\n152 |         client_data = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:166:1\n    |\n164 |             }\n165 |         }\n166 |         \n    | ^^^^^^^^\n167 |         return client_data\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:170:53\n    |\n170 | def _has_sufficient_client_data(client_identifiers: Dict[str, Any]) -> bool:\n    |                                                     ^^^^\n171 |     \"\"\"\n172 |     Check if client identifiers contain sufficient data for client creation.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:173:1\n    |\n171 |     \"\"\"\n172 |     Check if client identifiers contain sufficient data for client creation.\n173 |     \n    | ^^^^\n174 |     Args:\n175 |         client_identifiers: Dictionary of client identification data\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:176:1\n    |\n174 |     Args:\n175 |         client_identifiers: Dictionary of client identification data\n176 |         \n    | ^^^^^^^^\n177 |     Returns:\n178 |         True if sufficient data is available, False otherwise\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:182:1\n    |\n180 |     if not client_identifiers:\n181 |         return False\n182 |     \n    | ^^^^\n183 |     # At minimum, we need email or phone for client creation\n184 |     has_email = client_identifiers.get(\"email\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:186:1\n    |\n184 |     has_email = client_identifiers.get(\"email\")\n185 |     has_phone = client_identifiers.get(\"phone\")\n186 |     \n    | ^^^^\n187 |     return bool(has_email or has_phone)\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/client_onboarding_provider.py:187:40\n    |\n185 |     has_phone = client_identifiers.get(\"phone\")\n186 |     \n187 |     return bool(has_email or has_phone)\n    |                                        ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:9:1\n   |\n 8 | from datetime import datetime\n 9 | from typing import Any, Dict, List, Optional\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | from pydantic import BaseModel, Field\n   |\n\nUP035 `typing.List` is deprecated, use `list` instead\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:9:1\n   |\n 8 | from datetime import datetime\n 9 | from typing import Any, Dict, List, Optional\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | from pydantic import BaseModel, Field\n   |\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:17:1\n   |\n15 |     \"\"\"\n16 |     Schema for form response data from client_onboarding context.\n17 |     \n   | ^^^^\n18 |     Used by recipes_catalog to consume form response data for client creation.\n19 |     \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:20:1\n   |\n18 |     Used by recipes_catalog to consume form response data for client creation.\n19 |     \"\"\"\n20 |     \n   | ^^^^\n21 |     id: int = Field(..., description=\"Internal form response ID\")\n22 |     form_id: int = Field(..., description=\"Associated onboarding form ID\")\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:24:20\n   |\n22 |     form_id: int = Field(..., description=\"Associated onboarding form ID\")\n23 |     response_id: str = Field(..., description=\"TypeForm response ID\")\n24 |     submission_id: Optional[str] = Field(None, description=\"TypeForm submission ID\")\n   |                    ^^^^^^^^^^^^^\n25 |     \n26 |     # Core data fields\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:25:1\n   |\n23 |     response_id: str = Field(..., description=\"TypeForm response ID\")\n24 |     submission_id: Optional[str] = Field(None, description=\"TypeForm submission ID\")\n25 |     \n   | ^^^^\n26 |     # Core data fields\n27 |     response_data: Dict[str, Any] = Field(..., description=\"Raw TypeForm response data\")\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:27:20\n   |\n26 |     # Core data fields\n27 |     response_data: Dict[str, Any] = Field(..., description=\"Raw TypeForm response data\")\n   |                    ^^^^\n28 |     client_identifiers: Optional[Dict[str, Any]] = Field(\n29 |         None, \n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:28:25\n   |\n26 |     # Core data fields\n27 |     response_data: Dict[str, Any] = Field(..., description=\"Raw TypeForm response data\")\n28 |     client_identifiers: Optional[Dict[str, Any]] = Field(\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n29 |         None, \n30 |         description=\"Extracted client identification data (email, phone, etc.)\"\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:28:34\n   |\n26 |     # Core data fields\n27 |     response_data: Dict[str, Any] = Field(..., description=\"Raw TypeForm response data\")\n28 |     client_identifiers: Optional[Dict[str, Any]] = Field(\n   |                                  ^^^^\n29 |         None, \n30 |         description=\"Extracted client identification data (email, phone, etc.)\"\n   |\nhelp: Replace with `dict`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:29:14\n   |\n27 |     response_data: Dict[str, Any] = Field(..., description=\"Raw TypeForm response data\")\n28 |     client_identifiers: Optional[Dict[str, Any]] = Field(\n29 |         None, \n   |              ^\n30 |         description=\"Extracted client identification data (email, phone, etc.)\"\n31 |     )\n   |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:32:1\n   |\n30 |         description=\"Extracted client identification data (email, phone, etc.)\"\n31 |     )\n32 |     \n   | ^^^^\n33 |     # Timestamps\n34 |     submitted_at: Optional[str] = Field(None, description=\"When form was submitted (ISO format)\")\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:34:19\n   |\n33 |     # Timestamps\n34 |     submitted_at: Optional[str] = Field(None, description=\"When form was submitted (ISO format)\")\n   |                   ^^^^^^^^^^^^^\n35 |     processed_at: Optional[str] = Field(None, description=\"When response was processed (ISO format)\")\n36 |     created_at: Optional[str] = Field(None, description=\"When record was created (ISO format)\")\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:35:19\n   |\n33 |     # Timestamps\n34 |     submitted_at: Optional[str] = Field(None, description=\"When form was submitted (ISO format)\")\n35 |     processed_at: Optional[str] = Field(None, description=\"When response was processed (ISO format)\")\n   |                   ^^^^^^^^^^^^^\n36 |     created_at: Optional[str] = Field(None, description=\"When record was created (ISO format)\")\n37 |     updated_at: Optional[str] = Field(None, description=\"When record was last updated (ISO format)\")\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:36:17\n   |\n34 |     submitted_at: Optional[str] = Field(None, description=\"When form was submitted (ISO format)\")\n35 |     processed_at: Optional[str] = Field(None, description=\"When response was processed (ISO format)\")\n36 |     created_at: Optional[str] = Field(None, description=\"When record was created (ISO format)\")\n   |                 ^^^^^^^^^^^^^\n37 |     updated_at: Optional[str] = Field(None, description=\"When record was last updated (ISO format)\")\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:37:17\n   |\n35 |     processed_at: Optional[str] = Field(None, description=\"When response was processed (ISO format)\")\n36 |     created_at: Optional[str] = Field(None, description=\"When record was created (ISO format)\")\n37 |     updated_at: Optional[str] = Field(None, description=\"When record was last updated (ISO format)\")\n   |                 ^^^^^^^^^^^^^\n38 |     \n39 |     class Config:\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:38:1\n   |\n36 |     created_at: Optional[str] = Field(None, description=\"When record was created (ISO format)\")\n37 |     updated_at: Optional[str] = Field(None, description=\"When record was last updated (ISO format)\")\n38 |     \n   | ^^^^\n39 |     class Config:\n40 |         \"\"\"Pydantic configuration\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:42:25\n   |\n40 |           \"\"\"Pydantic configuration\"\"\"\n41 |           from_attributes = True\n42 |           json_encoders = {\n   |  _________________________^\n43 | |             datetime: lambda v: v.isoformat() if v else None\n44 | |         }\n   | |_________^\n45 |       \n46 |       def get_client_email(self) -> Optional[str]:\n   |\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:45:1\n   |\n43 |             datetime: lambda v: v.isoformat() if v else None\n44 |         }\n45 |     \n   | ^^^^\n46 |     def get_client_email(self) -> Optional[str]:\n47 |         \"\"\"Extract client email from client identifiers.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:46:35\n   |\n44 |         }\n45 |     \n46 |     def get_client_email(self) -> Optional[str]:\n   |                                   ^^^^^^^^^^^^^\n47 |         \"\"\"Extract client email from client identifiers.\"\"\"\n48 |         return self.client_identifiers.get(\"email\") if self.client_identifiers else None\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:49:1\n   |\n47 |         \"\"\"Extract client email from client identifiers.\"\"\"\n48 |         return self.client_identifiers.get(\"email\") if self.client_identifiers else None\n49 |     \n   | ^^^^\n50 |     def get_client_phone(self) -> Optional[str]:\n51 |         \"\"\"Extract client phone from client identifiers.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:50:35\n   |\n48 |         return self.client_identifiers.get(\"email\") if self.client_identifiers else None\n49 |     \n50 |     def get_client_phone(self) -> Optional[str]:\n   |                                   ^^^^^^^^^^^^^\n51 |         \"\"\"Extract client phone from client identifiers.\"\"\"\n52 |         return self.client_identifiers.get(\"phone\") if self.client_identifiers else None\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:53:1\n   |\n51 |         \"\"\"Extract client phone from client identifiers.\"\"\"\n52 |         return self.client_identifiers.get(\"phone\") if self.client_identifiers else None\n53 |     \n   | ^^^^\n54 |     def get_client_name(self) -> tuple[Optional[str], Optional[str]]:\n55 |         \"\"\"Extract client first and last name from client identifiers.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:54:40\n   |\n52 |         return self.client_identifiers.get(\"phone\") if self.client_identifiers else None\n53 |     \n54 |     def get_client_name(self) -> tuple[Optional[str], Optional[str]]:\n   |                                        ^^^^^^^^^^^^^\n55 |         \"\"\"Extract client first and last name from client identifiers.\"\"\"\n56 |         if not self.client_identifiers:\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:54:55\n   |\n52 |         return self.client_identifiers.get(\"phone\") if self.client_identifiers else None\n53 |     \n54 |     def get_client_name(self) -> tuple[Optional[str], Optional[str]]:\n   |                                                       ^^^^^^^^^^^^^\n55 |         \"\"\"Extract client first and last name from client identifiers.\"\"\"\n56 |         if not self.client_identifiers:\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:62:1\n   |\n60 |             self.client_identifiers.get(\"last_name\")\n61 |         )\n62 |     \n   | ^^^^\n63 |     def has_sufficient_client_data(self) -> bool:\n64 |         \"\"\"Check if this response has sufficient data for client creation.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:67:1\n   |\n65 |         if not self.client_identifiers:\n66 |             return False\n67 |         \n   | ^^^^^^^^\n68 |         # At minimum, we need email or phone for client creation\n69 |         has_email = bool(self.client_identifiers.get(\"email\"))\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:71:1\n   |\n69 |         has_email = bool(self.client_identifiers.get(\"email\"))\n70 |         has_phone = bool(self.client_identifiers.get(\"phone\"))\n71 |         \n   | ^^^^^^^^\n72 |         return has_email or has_phone\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:79:1\n   |\n77 |     Schema for multiple form responses from client_onboarding context.\n78 |     \"\"\"\n79 |     \n   | ^^^^\n80 |     responses: List[ClientOnboardingFormResponse] = Field(..., description=\"List of form responses\")\n81 |     count: int = Field(..., description=\"Total number of responses\")\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:80:16\n   |\n78 |     \"\"\"\n79 |     \n80 |     responses: List[ClientOnboardingFormResponse] = Field(..., description=\"List of form responses\")\n   |                ^^^^\n81 |     count: int = Field(..., description=\"Total number of responses\")\n82 |     context: str = Field(..., description=\"Requesting context name\")\n   |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:83:1\n   |\n81 |     count: int = Field(..., description=\"Total number of responses\")\n82 |     context: str = Field(..., description=\"Requesting context name\")\n83 |     \n   | ^^^^\n84 |     # Optional pagination metadata\n85 |     offset: Optional[int] = Field(None, description=\"Pagination offset\")\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:85:13\n   |\n84 |     # Optional pagination metadata\n85 |     offset: Optional[int] = Field(None, description=\"Pagination offset\")\n   |             ^^^^^^^^^^^^^\n86 |     limit: Optional[int] = Field(None, description=\"Pagination limit\")\n87 |     total_available: Optional[int] = Field(None, description=\"Total responses available\")\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:86:12\n   |\n84 |     # Optional pagination metadata\n85 |     offset: Optional[int] = Field(None, description=\"Pagination offset\")\n86 |     limit: Optional[int] = Field(None, description=\"Pagination limit\")\n   |            ^^^^^^^^^^^^^\n87 |     total_available: Optional[int] = Field(None, description=\"Total responses available\")\n   |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:87:22\n   |\n85 |     offset: Optional[int] = Field(None, description=\"Pagination offset\")\n86 |     limit: Optional[int] = Field(None, description=\"Pagination limit\")\n87 |     total_available: Optional[int] = Field(None, description=\"Total responses available\")\n   |                      ^^^^^^^^^^^^^\n88 |     \n89 |     class Config:\n   |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:88:1\n   |\n86 |     limit: Optional[int] = Field(None, description=\"Pagination limit\")\n87 |     total_available: Optional[int] = Field(None, description=\"Total responses available\")\n88 |     \n   | ^^^^\n89 |     class Config:\n90 |         \"\"\"Pydantic configuration\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:92:1\n   |\n90 |         \"\"\"Pydantic configuration\"\"\"\n91 |         from_attributes = True\n92 |     \n   | ^^^^\n93 |     def get_responses_with_sufficient_data(self) -> List[ClientOnboardingFormResponse]:\n94 |         \"\"\"Filter responses that have sufficient data for client creation.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:93:53\n   |\n91 |         from_attributes = True\n92 |     \n93 |     def get_responses_with_sufficient_data(self) -> List[ClientOnboardingFormResponse]:\n   |                                                     ^^^^\n94 |         \"\"\"Filter responses that have sufficient data for client creation.\"\"\"\n95 |         return [\n   |\nhelp: Replace with `list`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:96:52\n   |\n94 |         \"\"\"Filter responses that have sufficient data for client creation.\"\"\"\n95 |         return [\n96 |             response for response in self.responses \n   |                                                    ^\n97 |             if response.has_sufficient_client_data()\n98 |         ]\n   |\nhelp: Remove trailing whitespace\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:104:1\n    |\n102 |     \"\"\"\n103 |     Schema for extracted client data ready for Client entity creation.\n104 |     \n    | ^^^^\n105 |     This schema formats form response data specifically for recipes_catalog\n106 |     Client creation workflows.\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:108:1\n    |\n106 |     Client creation workflows.\n107 |     \"\"\"\n108 |     \n    | ^^^^\n109 |     # Core client identification\n110 |     email: Optional[str] = Field(None, description=\"Client email address\")\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:110:12\n    |\n109 |     # Core client identification\n110 |     email: Optional[str] = Field(None, description=\"Client email address\")\n    |            ^^^^^^^^^^^^^\n111 |     phone: Optional[str] = Field(None, description=\"Client phone number\")\n112 |     first_name: Optional[str] = Field(None, description=\"Client first name\")\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:111:12\n    |\n109 |     # Core client identification\n110 |     email: Optional[str] = Field(None, description=\"Client email address\")\n111 |     phone: Optional[str] = Field(None, description=\"Client phone number\")\n    |            ^^^^^^^^^^^^^\n112 |     first_name: Optional[str] = Field(None, description=\"Client first name\")\n113 |     last_name: Optional[str] = Field(None, description=\"Client last name\")\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:112:17\n    |\n110 |     email: Optional[str] = Field(None, description=\"Client email address\")\n111 |     phone: Optional[str] = Field(None, description=\"Client phone number\")\n112 |     first_name: Optional[str] = Field(None, description=\"Client first name\")\n    |                 ^^^^^^^^^^^^^\n113 |     last_name: Optional[str] = Field(None, description=\"Client last name\")\n114 |     company: Optional[str] = Field(None, description=\"Client company\")\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:113:16\n    |\n111 |     phone: Optional[str] = Field(None, description=\"Client phone number\")\n112 |     first_name: Optional[str] = Field(None, description=\"Client first name\")\n113 |     last_name: Optional[str] = Field(None, description=\"Client last name\")\n    |                ^^^^^^^^^^^^^\n114 |     company: Optional[str] = Field(None, description=\"Client company\")\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:114:14\n    |\n112 |     first_name: Optional[str] = Field(None, description=\"Client first name\")\n113 |     last_name: Optional[str] = Field(None, description=\"Client last name\")\n114 |     company: Optional[str] = Field(None, description=\"Client company\")\n    |              ^^^^^^^^^^^^^\n115 |     \n116 |     # Original form response metadata\n    |\nhelp: Convert to `X | None`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:115:1\n    |\n113 |     last_name: Optional[str] = Field(None, description=\"Client last name\")\n114 |     company: Optional[str] = Field(None, description=\"Client company\")\n115 |     \n    | ^^^^\n116 |     # Original form response metadata\n117 |     form_response_data: Dict[str, Any] = Field(..., description=\"Original form response data and metadata\")\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:117:25\n    |\n116 |     # Original form response metadata\n117 |     form_response_data: Dict[str, Any] = Field(..., description=\"Original form response data and metadata\")\n    |                         ^^^^\n118 |     \n119 |     class Config:\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:118:1\n    |\n116 |     # Original form response metadata\n117 |     form_response_data: Dict[str, Any] = Field(..., description=\"Original form response data and metadata\")\n118 |     \n    | ^^^^\n119 |     class Config:\n120 |         \"\"\"Pydantic configuration\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:122:1\n    |\n120 |         \"\"\"Pydantic configuration\"\"\"\n121 |         from_attributes = True\n122 |     \n    | ^^^^\n123 |     def has_email(self) -> bool:\n124 |         \"\"\"Check if client data includes email.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:126:1\n    |\n124 |         \"\"\"Check if client data includes email.\"\"\"\n125 |         return bool(self.email)\n126 |     \n    | ^^^^\n127 |     def has_phone(self) -> bool:\n128 |         \"\"\"Check if client data includes phone.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:130:1\n    |\n128 |         \"\"\"Check if client data includes phone.\"\"\"\n129 |         return bool(self.phone)\n130 |     \n    | ^^^^\n131 |     def has_name(self) -> bool:\n132 |         \"\"\"Check if client data includes first or last name.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:134:1\n    |\n132 |         \"\"\"Check if client data includes first or last name.\"\"\"\n133 |         return bool(self.first_name or self.last_name)\n134 |     \n    | ^^^^\n135 |     def get_full_name(self) -> Optional[str]:\n136 |         \"\"\"Get full name if available.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:135:32\n    |\n133 |         return bool(self.first_name or self.last_name)\n134 |     \n135 |     def get_full_name(self) -> Optional[str]:\n    |                                ^^^^^^^^^^^^^\n136 |         \"\"\"Get full name if available.\"\"\"\n137 |         if self.first_name and self.last_name:\n    |\nhelp: Convert to `X | None`\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/adapters/external_providers/client_onboarding/schemas.py:143:20\n    |\n141 |         elif self.last_name:\n142 |             return self.last_name\n143 |         return None\n    |                    ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Type` is deprecated, use `type` instead\n --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:2:1\n  |\n1 | import json\n2 | from typing import Type\n  | ^^^^^^^^^^^^^^^^^^^^^^^\n3 |\n4 | import src.contexts.products_catalog.core.endpoints.internal as products_catalog_api\n  |\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:61:36\n   |\n60 |     @staticmethod\n61 |     def product_sa_model_type() -> Type[ProductSaModel]:\n   |                                    ^^^^\n62 |         return ProductSaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:65:35\n   |\n64 |     @staticmethod\n65 |     def source_sa_model_type() -> Type[SourceSaModel]:\n   |                                   ^^^^\n66 |         return SourceSaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:69:34\n   |\n68 |     @staticmethod\n69 |     def brand_sa_model_type() -> Type[BrandSaModel]:\n   |                                  ^^^^\n70 |         return BrandSaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:73:37\n   |\n72 |     @staticmethod\n73 |     def category_sa_model_type() -> Type[CategorySaModel]:\n   |                                     ^^^^\n74 |         return CategorySaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:77:44\n   |\n76 |     @staticmethod\n77 |     def parent_category_sa_model_type() -> Type[ParentCategorySaModel]:\n   |                                            ^^^^\n78 |         return ParentCategorySaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:81:39\n   |\n80 |     @staticmethod\n81 |     def food_group_sa_model_type() -> Type[FoodGroupSaModel]:\n   |                                       ^^^^\n82 |         return FoodGroupSaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:85:41\n   |\n84 |     @staticmethod\n85 |     def process_type_sa_model_type() -> Type[ProcessTypeSaModel]:\n   |                                         ^^^^\n86 |         return ProcessTypeSaModel\n   |\nhelp: Replace with `type`\n\nUP006 [*] Use `type` instead of `Type` for type annotation\n  --> src/contexts/recipes_catalog/core/adapters/external_providers/products_catalog/api.py:89:34\n   |\n88 |     @staticmethod\n89 |     def score_sa_model_type() -> Type[ScoreSaModel]:\n   |                                  ^^^^\n90 |         return ScoreSaModel\n   |\nhelp: Replace with `type`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/ORM/__init__.py:1:1\n  |\n1 | / from .sa_models import *\n2 | | from .mappers import *\n  | |______________________^\n3 |\n4 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/meal/ORM/__init__.py:7:2\n  |\n5 |     \"sa_models\",\n6 |     \"mappers\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/ORM/mappers/meal_mapper.py:1:1\n   |\n 1 | / from datetime import datetime\n 2 | |\n 3 | | from sqlalchemy.ext.asyncio import AsyncSession\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.mappers.recipe_mapper import (\n 6 | |     RecipeMapper,\n 7 | | )\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.meal_sa_model import (\n 9 | |     MealSaModel,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.name_search import StrProcessor\n12 | | from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n13 | | from src.contexts.recipes_catalog.core.domain.meal.root_aggregate.meal import Meal\n14 | | from src.contexts.seedwork.shared import utils\n15 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n16 | | from src.contexts.shared_kernel.adapters.ORM.mappers.nutri_facts_mapper import (\n17 | |     NutriFactsMapper,\n18 | | )\n19 | | from src.contexts.shared_kernel.adapters.ORM.mappers.tag.tag_mapper import TagMapper\n20 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/ORM/mappers/recipe_mapper.py:1:1\n   |\n 1 | / from datetime import UTC, datetime\n 2 | |\n 3 | | from sqlalchemy.ext.asyncio import AsyncSession\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.ingredient_sa_model import (\n 6 | |     IngredientSaModel,\n 7 | | )\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.rating_sa_model import (\n 9 | |     RatingSaModel,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.recipe_sa_model import (\n12 | |     RecipeSaModel,\n13 | | )\n14 | | from src.contexts.recipes_catalog.core.adapters.name_search import StrProcessor\n15 | | from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n16 | | from src.contexts.recipes_catalog.core.domain.meal.value_objects.ingredient import (\n17 | |     Ingredient,\n18 | | )\n19 | | from src.contexts.recipes_catalog.core.domain.meal.value_objects.rating import Rating\n20 | | from src.contexts.seedwork.shared import utils\n21 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n22 | | from src.contexts.shared_kernel.adapters.ORM.mappers.nutri_facts_mapper import (\n23 | |     NutriFactsMapper,\n24 | | )\n25 | | from src.contexts.shared_kernel.adapters.ORM.mappers.tag.tag_mapper import TagMapper\n26 | | from src.contexts.shared_kernel.domain.enums import MeasureUnit, Privacy\n27 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nC403 Unnecessary list comprehension (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/meal/ORM/mappers/recipe_mapper.py:163:18\n    |\n161 |             total_time=sa_obj.total_time,\n162 |             notes=sa_obj.notes,\n163 |             tags=set([TagMapper.map_sa_to_domain(t) for t in sa_obj.tags]),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |             privacy=Privacy(sa_obj.privacy),\n165 |             ratings=[_RatingMapper.map_sa_to_domain(i) for i in sa_obj.ratings],\n    |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/ORM/sa_models/ingredient_sa_model.py:1:1\n  |\n1 | / from datetime import datetime\n2 | |\n3 | | from sqlalchemy import ForeignKey, Index, func\n4 | | from sqlalchemy.orm import Mapped, mapped_column\n5 | |\n6 | | import src.db.sa_field_types as sa_field\n7 | | from src.db.base import SaBase, SerializerMixin\n  | |_______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/ORM/sa_models/meal_associations.py:1:1\n  |\n1 | / from sqlalchemy import Column, ForeignKey, Table\n2 | |\n3 | | from src.db.base import SaBase\n  | |______________________________^\n4 |\n5 |   meals_tags_association = Table(\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/ORM/sa_models/meal_sa_model.py:1:1\n   |\n 1 | / from dataclasses import fields\n 2 | | from datetime import datetime\n 3 | |\n 4 | | from sqlalchemy import ForeignKey, Index, func\n 5 | | from sqlalchemy.orm import Mapped, composite, mapped_column, relationship\n 6 | |\n 7 | | import src.db.sa_field_types as sa_field\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.meal_associations import (\n 9 | |     meals_tags_association,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.recipe_sa_model import (\n12 | |     RecipeSaModel,\n13 | | )\n14 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n15 | |     NutriFactsSaModel,\n16 | | )\n17 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n18 | |     TagSaModel,\n19 | | )\n20 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/ORM/sa_models/rating_sa_model.py:1:1\n  |\n1 | / from datetime import datetime\n2 | |\n3 | | from sqlalchemy import ForeignKey, func\n4 | | from sqlalchemy.orm import Mapped, mapped_column\n5 | |\n6 | | import src.db.sa_field_types as sa_field\n7 | | from src.db.base import SaBase, SerializerMixin\n  | |_______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/ORM/sa_models/recipe_sa_model.py:1:1\n   |\n 1 | / from dataclasses import fields\n 2 | | from datetime import datetime\n 3 | |\n 4 | | from sqlalchemy import ForeignKey, Index, func\n 5 | | from sqlalchemy.orm import Mapped, composite, mapped_column, relationship\n 6 | |\n 7 | | import src.db.sa_field_types as sa_field\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.ingredient_sa_model import (\n 9 | |     IngredientSaModel,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.meal_associations import (\n12 | |     recipes_tags_association,\n13 | | )\n14 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.rating_sa_model import (\n15 | |     RatingSaModel,\n16 | | )\n17 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n18 | |     NutriFactsSaModel,\n19 | | )\n20 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n21 | |     TagSaModel,\n22 | | )\n23 | | from src.db.base import SaBase, SerializerMixin\n   | |_______________________________________________^\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/__init__.py:11:2\n   |\n 9 |     \"root_aggregate\",\n10 |     \"value_objetcs\",\n11 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/base_api_filter.py:1:1\n   |\n 1 | / from typing import Any\n 2 | |\n 3 | | from pydantic import BaseModel, Field, model_validator\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.shared.parse_tags import parse_tags\n 6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 7 | |     CreatedAtValue,\n 8 | | )\n 9 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n10 | |     SaGenericRepository,\n11 | | )\n12 | | from src.contexts.shared_kernel.domain.enums import Privacy\n   | |___________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/__init__.py:1:1\n   |\n 1 | / from .api_create_meal import ApiCreateMeal\n 2 | | from .api_update_meal import ApiAttributesToUpdateOnMeal, ApiUpdateMeal\n 3 | | from .api_delete_meal import ApiDeleteMeal\n 4 | | from .api_copy_meal import ApiCopyMeal\n 5 | | from .api_create_recipe import ApiCreateRecipe\n 6 | | from .api_update_recipe import ApiUpdateRecipe\n 7 | | from .api_delete_recipe import ApiDeleteRecipe\n 8 | | from .api_copy_recipe import ApiCopyRecipe\n 9 | | from .api_rate_recipe import ApiRateRecipe\n   | |__________________________________________^\n10 |\n11 |   __all__ = [\n   |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/__init__.py:22:2\n   |\n20 |     \"ApiCopyRecipe\",\n21 |     \"ApiRateRecipe\",\n22 | ]\n   |  ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_copy_meal.py:1:1\n  |\n1 | / from pydantic import BaseModel\n2 | |\n3 | | from src.contexts.recipes_catalog.core.domain.meal.commands.copy_meal import CopyMeal\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_copy_meal.py:43:13\n   |\n41 |             )\n42 |         except Exception as e:\n43 |             raise ValueError(f\"Failed to convert ApiCopyMeal to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_copy_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.copy_recipe import CopyRecipe\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_copy_recipe.py:42:13\n   |\n40 |             )\n41 |         except Exception as e:\n42 |             raise ValueError(f\"Failed to convert ApiCopyRecipe to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_create_meal.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.create_meal import CreateMeal\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired, UrlOptional\n4 | |\n5 | | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.root_aggregate.api_meal_fields as fields\n  | |___________________________________________________________________________________________________________^\n6 |\n7 |   class ApiCreateMeal(BaseApiCommand[CreateMeal]):\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_create_meal.py:57:13\n   |\n55 |             )\n56 |         except Exception as e:\n57 |             raise ValueError(f\"Failed to convert ApiCreateMeal to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_create_recipe.py:1:1\n   |\n 1 | / from typing import Any\n 2 | | from pydantic import HttpUrl, ValidationInfo, field_validator\n 3 | | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_fields as fields\n 4 | | from src.contexts.recipes_catalog.core.domain.meal.commands.create_recipe import CreateRecipe\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n 6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired, UrlOptional\n 7 | | from src.contexts.shared_kernel.domain.enums import Privacy\n 8 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.pydantic_validators import validate_tags_have_correct_author_id_and_type as validate_tags\n   | |____________________________________________________________________________________________________________________________________________________________^\n 9 |\n10 |   class ApiCreateRecipe(BaseApiCommand[CreateRecipe]):\n   |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_create_recipe.py:88:13\n   |\n86 |             )\n87 |         except Exception as e:\n88 |             raise ValueError(f\"Failed to convert ApiCreateRecipe to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_create_recipe.py:88:88\n   |\n86 |             )\n87 |         except Exception as e:\n88 |             raise ValueError(f\"Failed to convert ApiCreateRecipe to domain model: {e}\")\n   |                                                                                        ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_delete_meal.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.delete_meal import DeleteMeal\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_delete_meal.py:35:13\n   |\n33 |             )\n34 |         except Exception as e:\n35 |             raise ValueError(f\"Failed to convert ApiDeleteMeal to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_delete_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.delete_recipe import DeleteRecipe\n2 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n  | |____________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_delete_recipe.py:36:13\n   |\n34 |             )\n35 |         except Exception as e:\n36 |             raise ValueError(f\"Failed to convert ApiDeleteRecipe to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_rate_recipe.py:1:1\n  |\n1 | / from pydantic import Field\n2 | |\n3 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs.api_rating import ApiRating\n4 | | from src.contexts.recipes_catalog.core.domain.meal.commands.rate_recipe import RateRecipe\n5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiCommand\n  | |___________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_rate_recipe.py:36:13\n   |\n34 |             return RateRecipe(rating=self.rating.to_domain())\n35 |         except Exception as e:\n36 |             raise ValueError(f\"Failed to convert ApiRateRecipe to domain model: {e}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_update_recipe.py:3:106\n  |\n1 | from typing import Any\n2 |\n3 | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_fields as fields  # noqa: E501\n  |                                                                                                          ^^^^^^^^^^^^\n4 | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe import (  # noqa: E501\n5 |     ApiRecipe,\n  |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/commands/api_update_recipe.py:4:96\n  |\n3 | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_fields as fields  # noqa: E501\n4 | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe import (  # noqa: E501\n  |                                                                                                ^^^^^^^^^^^^\n5 |     ApiRecipe,\n6 | )\n  |\nhelp: Remove unused `noqa` directive\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/__init__.py:7:2\n  |\n5 |     \"ApiRecipe\",\n6 |     \"ApiRecipeFilter\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/api_recipe.py:1:1\n   |\n 1 | / from dataclasses import asdict\n 2 | | from datetime import datetime\n 3 | | from typing import Any\n 4 | |\n 5 | | from pydantic import HttpUrl, ValidationInfo, field_validator\n 6 | |\n 7 | | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities.api_recipe_fields as fields\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs.api_ingredient import (\n 9 | |     ApiIngredient,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs.api_rating import (\n12 | |     ApiRating,\n13 | | )\n14 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models.recipe_sa_model import (\n15 | |     RecipeSaModel,\n16 | | )\n17 | | from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n18 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n19 | |     UrlOptional,\n20 | |     UUIDIdRequired,\n21 | | )\n22 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n23 | |     BaseApiEntity,\n24 | | )\n25 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_facts import (\n26 | |     ApiNutriFacts,\n27 | | )\n28 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.pydantic_validators import (\n29 | |     validate_tags_have_correct_author_id_and_type as validate_tags,\n30 | | )\n31 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag.api_tag import (\n32 | |     ApiTag,\n33 | | )\n34 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n35 | |     NutriFactsSaModel,\n36 | | )\n37 | | from src.contexts.shared_kernel.domain.enums import Privacy\n   | |___________________________________________________________^\n   |\nhelp: Organize imports\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n   --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/api_recipe.py:148:18\n    |\n146 |             total_time=self.total_time,\n147 |             notes=self.notes,\n148 |             tags=set(i.to_domain() for i in self.tags) if self.tags else None,\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n149 |             privacy=self.privacy if self.privacy else Privacy.PRIVATE,\n150 |             ratings=[r.to_domain() for r in self.ratings] if self.ratings else None,\n    |\nhelp: Rewrite as a set comprehension\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/api_recipe_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs.api_ingredient import (\n 6 | |     ApiIngredient,\n 7 | | )\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs.api_rating import (\n 9 | |     ApiRating,\n10 | | )\n11 | | from src.contexts.seedwork.shared.adapters.api_schemas import validators\n12 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n13 | |     SanitizedText,\n14 | |     SanitizedTextOptional,\n15 | | )\n16 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_facts import (\n17 | |     ApiNutriFacts,\n18 | | )\n19 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag.api_tag import (\n20 | |     ApiTag,\n21 | | )\n22 | | from src.contexts.shared_kernel.domain.enums import Privacy\n   | |___________________________________________________________^\n23 |\n24 |   # Required string fields with validation\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/api_recipe_filter.py:1:1\n   |\n 1 | / from typing import Any\n 2 | |\n 3 | | from pydantic import model_validator\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.base_api_filter import (  # noqa: E501\n 6 | |     BaseMealApiFilter,\n 7 | | )\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.value_objetcs import (\n 9 | |     AverageRatingValue,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.repositories import (\n12 | |     RecipeRepo,\n13 | | )\n14 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n15 | |     BaseApiModel,\n16 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/entities/api_recipe_filter.py:5:92\n  |\n3 | from pydantic import model_validator\n4 |\n5 | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.base_api_filter import (  # noqa: E501\n  |                                                                                            ^^^^^^^^^^^^\n6 |     BaseMealApiFilter,\n7 | )\n  |\nhelp: Remove unused `noqa` directive\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/root_aggregate/__init__.py:7:2\n  |\n5 |     \"ApiMeal\",\n6 |     \"ApiMealFilter\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/root_aggregate/api_meal.py:1:1\n   |\n 1 | / from dataclasses import asdict\n 2 | | from datetime import UTC, datetime\n 3 | | from typing import Any\n 4 | |\n 5 | | from pydantic import HttpUrl, ValidationInfo, field_validator\n 6 | |\n 7 | | import src.contexts.recipes_catalog.core.adapters.meal.api_schemas.root_aggregate.api_meal_fields as fields\n 8 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n 9 | |     ApiRecipe,\n10 | | )\n11 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models import (\n12 | |     MealSaModel,\n13 | | )\n14 | | from src.contexts.recipes_catalog.core.domain.meal.root_aggregate.meal import Meal\n15 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n16 | |     UrlOptional,\n17 | |     UUIDIdOptional,\n18 | |     UUIDIdRequired,\n19 | | )\n20 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n21 | |     BaseApiEntity,\n22 | | )\n23 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects import (\n24 | |     ApiNutriFacts,\n25 | |     ApiTag,\n26 | | )\n27 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects import (\n28 | |     validate_tags_have_correct_author_id_and_type as validate_tags,\n29 | | )\n30 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n31 | |     NutriFactsSaModel,\n32 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/root_aggregate/api_meal_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.entities import (\n 6 | |     ApiRecipe,\n 7 | | )\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas import validators\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n10 | |     SanitizedText,\n11 | |     SanitizedTextOptional,\n12 | | )\n13 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects import (\n14 | |     ApiNutriFacts,\n15 | |     ApiTag,\n16 | | )\n   | |_^\n17 |\n18 |   # Required string fields with validation\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/root_aggregate/api_meal_filter.py:1:1\n  |\n1 | / from pydantic import model_validator\n2 | |\n3 | | from src.contexts.recipes_catalog.core.adapters.meal.api_schemas.base_api_filter import (\n4 | |     BaseMealApiFilter,\n5 | | )\n6 | | from src.contexts.recipes_catalog.core.adapters.meal.repositories import (\n7 | |     MealRepo,\n8 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/value_objetcs/api_ingredient_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 6 | |     SanitizedText,\n 7 | |     SanitizedTextOptional,\n 8 | | )\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n10 | |     validate_optional_text_length,\n11 | | )\n   | |_^\n12 |\n13 |   IngredientNameRequired = Annotated[\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/api_schemas/value_objetcs/api_rating_fields.py:1:1\n   |\n 1 | / from typing import Annotated\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 6 | |     SanitizedTextOptional,\n 7 | | )\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n 9 | |     validate_optional_text_length,\n10 | |     validate_rating_range,\n11 | | )\n   | |_^\n12 |\n13 |   RatingValue = Annotated[int, AfterValidator(validate_rating_range)]\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/repositories/meal_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select, select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.products_catalog.core.adapters.repositories import (\n 7 | |     ProductRepo,\n 8 | | )\n 9 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.mappers.meal_mapper import (\n10 | |     MealMapper,\n11 | | )\n12 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models import (\n13 | |     IngredientSaModel,\n14 | |     MealSaModel,\n15 | |     RecipeSaModel,\n16 | | )\n17 | | from src.contexts.recipes_catalog.core.domain.meal.root_aggregate.meal import Meal\n18 | | from src.contexts.seedwork.shared.adapters.enums import FrontendFilterTypes\n19 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n20 | |     RepositoryLogger,\n21 | | )\n22 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n23 | |     CompositeRepository,\n24 | |     FilterColumnMapper,\n25 | |     SaGenericRepository,\n26 | | )\n27 | | from src.contexts.seedwork.shared.adapters.tag_filter_builder import (\n28 | |     TagFilterBuilder,\n29 | | )\n30 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n31 | |     TagSaModel,\n32 | | )\n33 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/meal/repositories/recipe_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select, select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.products_catalog.core.adapters.repositories import (\n 7 | |     ProductRepo,\n 8 | | )\n 9 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.mappers.recipe_mapper import (\n10 | |     RecipeMapper,\n11 | | )\n12 | | from src.contexts.recipes_catalog.core.adapters.meal.ORM.sa_models import (\n13 | |     IngredientSaModel,\n14 | |     RecipeSaModel,\n15 | | )\n16 | | from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n17 | | from src.contexts.seedwork.shared.adapters.enums import FrontendFilterTypes\n18 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n19 | |     RepositoryLogger,\n20 | | )\n21 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n22 | |     CompositeRepository,\n23 | |     FilterColumnMapper,\n24 | |     SaGenericRepository,\n25 | | )\n26 | | from src.contexts.seedwork.shared.adapters.tag_filter_builder import (\n27 | |     TagFilterBuilder,\n28 | | )\n29 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n30 | |     TagSaModel,\n31 | | )\n32 | | from src.logging.logger import logger\n   | |_____________________________________^\n   |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/adapters/name_search.py:9:34\n   |\n 8 |   class StrProcessor:\n 9 |       words_to_ignore: list[str] = [\n   |  __________________________________^\n10 | |         \"de\",\n11 | |         \"da\",\n12 | |     ]\n   | |_____^\n13 |       actual_name_to_receipt_description_mapper: dict[str, list[str]] = {\n14 |           \"queijo\": [\"qj\"],\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/adapters/name_search.py:13:71\n   |\n11 |           \"da\",\n12 |       ]\n13 |       actual_name_to_receipt_description_mapper: dict[str, list[str]] = {\n   |  _______________________________________________________________________^\n14 | |         \"queijo\": [\"qj\"],\n15 | |         \"ct\": [\"contra\"],\n16 | |         \"mozarela\": [\"mus\"],\n17 | |         \"costela\": [\"costelinha\"],\n18 | |         \"porco\": [\"suina\"],\n19 | |         \"com\": [\"c\"],\n20 | |         \"sem\": [\"s\"],\n21 | |     }\n   | |_____^\n22 |\n23 |       def __init__(self, input: str):\n   |\n\nSIM103 Return the condition `first_word_in_description == first_word_in_db_name` directly\n   --> src/contexts/recipes_catalog/core/adapters/name_search.py:143:9\n    |\n141 |           first_word_in_description = self.processed_description.split()[0]\n142 |           first_word_in_db_name = processed_db_name.split()[0]\n143 | /         if first_word_in_description == first_word_in_db_name:\n144 | |             return True\n145 | |         return False\n    | |____________________^\n146 |\n147 |       def _has_first_word_partial_match(self, processed_db_name: str) -> bool:\n    |\nhelp: Replace with `return first_word_in_description == first_word_in_db_name`\n\nSIM103 Return the condition `first_word_in_description in first_word_in_db_name` directly\n   --> src/contexts/recipes_catalog/core/adapters/name_search.py:150:9\n    |\n148 |           first_word_in_description = self.processed_description.split()[0]\n149 |           first_word_in_db_name = processed_db_name.split()[0]\n150 | /         if first_word_in_description in first_word_in_db_name:\n151 | |             return True\n152 | |         return False\n    | |____________________^\n153 |\n154 |       def _full_word_number_of_words_matching(self, processed_db_name: str) -> int:\n    |\nhelp: Replace with `return first_word_in_description in first_word_in_db_name`\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/__init__.py:7:2\n  |\n5 |     \"commands\",\n6 |     \"value_objects\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/commands/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"tag\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/__init__.py:7:2\n  |\n5 |     \"ApiRole\",\n6 |     \"ApiUser\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/api_role.py:1:1\n   |\n 1 | / from typing import Annotated, Any\n 2 | |\n 3 | | from pydantic import AfterValidator, BeforeValidator, Field\n 4 | |\n 5 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n 6 | | from src.contexts.recipes_catalog.core.domain.enums import (\n 7 | |     Permission as RecipesPermission,\n 8 | | )\n 9 | | from src.contexts.recipes_catalog.core.domain.shared.value_objects.role import Role\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n11 | |     SanitizedText,\n12 | | )\n13 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n14 | |     validate_permissions_collection,\n15 | |     validate_role_name_format,\n16 | | )\n17 | | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects.api_seed_role import (  # noqa: E501\n18 | |     ApiSeedRole,\n19 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/api_role.py:17:94\n   |\n15 |     validate_role_name_format,\n16 | )\n17 | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects.api_seed_role import (  # noqa: E501\n   |                                                                                              ^^^^^^^^^^^^\n18 |     ApiSeedRole,\n19 | )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/api_user.py:1:1\n   |\n 1 | / from typing import Annotated, Any\n 2 | |\n 3 | | from pydantic import Field\n 4 | |\n 5 | | from src.contexts.recipes_catalog.core.adapters.shared.api_schemas.value_objects.api_role import ApiRole\n 6 | | from src.contexts.recipes_catalog.core.domain.shared.value_objects.role import Role\n 7 | | from src.contexts.recipes_catalog.core.domain.shared.value_objects.user import User\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import UUIDIdRequired\n 9 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects.api_seed_user import ApiSeedUser\n   | |_____________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/api_user.py:33:1\n   |\n31 |             roles=frozenset([Role(name=role.name, permissions=frozenset(role.permissions)) for role in self.roles])\n32 |         )\n33 |     \n   | ^^^^\n34 |     @classmethod\n35 |     def from_domain(cls, domain_obj: User) -> \"ApiUser\":\n   |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/adapters/shared/api_schemas/value_objects/api_user.py:60:10\n   |\n58 |             id=orm_model.id,\n59 |             roles=frozenset(roles)\n60 |         )\n   |          ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/bootstrap/bootstrap.py:1:1\n   |\n 1 | / from collections.abc import Coroutine\n 2 | | from functools import partial\n 3 | |\n 4 | | import src.contexts.recipes_catalog.core.domain.client.commands as client_commands\n 5 | | import src.contexts.recipes_catalog.core.services.client.command_handlers as client_cmd_handlers\n 6 | | import src.contexts.recipes_catalog.core.services.client.event_handlers as client_evt_handlers\n 7 | | import src.contexts.recipes_catalog.core.domain.meal.commands as meal_commands\n 8 | | import src.contexts.recipes_catalog.core.services.meal.command_handlers as meal_cmd_handlers\n 9 | | import src.contexts.recipes_catalog.core.services.meal.event_handlers as meal_evt_handlers\n10 | | import src.contexts.recipes_catalog.core.domain.client.events as client_events\n11 | | import src.contexts.recipes_catalog.core.domain.meal.events as meal_events\n12 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n13 | | from src.contexts.seedwork.shared.domain.commands.command import \\\n14 | |     Command as SeedworkCommand\n15 | | from src.contexts.seedwork.shared.domain.event import Event as SeedworkEvent\n16 | | from src.contexts.shared_kernel.services.messagebus import MessageBus\n   | |_____________________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/config.py:1:1\n  |\n1 | / import os\n2 | | from functools import lru_cache\n3 | |\n4 | | from pydantic_settings import SettingsConfigDict, BaseSettings\n  | |______________________________________________________________^\n  |\nhelp: Organize imports\n\nUP011 [*] Unnecessary parentheses to `functools.lru_cache`\n  --> src/contexts/recipes_catalog/core/config.py:14:11\n   |\n14 | @lru_cache()\n   |           ^^\n15 | def get_settings() -> Settings:\n16 |     return Settings()\n   |\nhelp: Remove unnecessary parentheses\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/domain/client/__init__.py:1:1\n   |\n 1 | / from src.contexts.recipes_catalog.core.domain.client.root_aggregate.client import Client\n 2 | | from src.contexts.recipes_catalog.core.domain.client.commands import (\n 3 | |     CreateClient,\n 4 | |     DeleteClient,\n 5 | |     UpdateClient,\n 6 | |     CreateMenu,\n 7 | |     DeleteMenu,\n 8 | |     UpdateMenu,\n 9 | | )\n   | |_^\n10 |\n11 |   __all__ = [\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/commands/__init__.py:1:1\n  |\n1 | / from .create_client import CreateClient\n2 | | from .delete_client import DeleteClient\n3 | | from .update_client import UpdateClient\n4 | | from .create_menu import CreateMenu\n5 | | from .delete_menu import DeleteMenu\n6 | | from .update_menu import UpdateMenu\n  | |___________________________________^\n7 |\n8 |   __all__ = [\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/domain/client/commands/create_client.py:1:1\n   |\n 1 | / from attrs import frozen\n 2 | | from typing import Any, Dict\n 3 | |\n 4 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n 5 | | from src.contexts.shared_kernel.domain.value_objects.address import Address\n 6 | | from src.contexts.shared_kernel.domain.value_objects.contact_info import ContactInfo\n 7 | | from src.contexts.shared_kernel.domain.value_objects.profile import Profile\n 8 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n   | |___________________________________________________________________^\n 9 |\n10 |   @frozen(kw_only=True)\n   |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/domain/client/commands/create_client.py:2:1\n  |\n1 | from attrs import frozen\n2 | from typing import Any, Dict\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n3 |\n4 | from src.contexts.seedwork.shared.domain.commands.command import Command\n  |\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/domain/client/commands/create_client.py:20:40\n   |\n18 |     notes: str | None = None\n19 |     tags: frozenset[Tag] | None = None\n20 |     form_response_id: str | None = None\n   |                                        ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/commands/create_menu.py:1:1\n  |\n1 | / from attrs import frozen, field\n2 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n3 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n  | |___________________________________________________________________^\n4 |\n5 |   @frozen(kw_only=True)\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n --> src/contexts/recipes_catalog/core/domain/client/commands/delete_menu.py:9:1\n  |\n7 |     # client_id: str\n8 |     menu_id: str\n9 |     \n  | ^^^^\n  |\nhelp: Remove whitespace from blank line\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/commands/update_menu.py:1:1\n  |\n1 | / from typing import Any\n2 | |\n3 | | from attrs import frozen\n4 | |\n5 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/client/entities/__init__.py:3:19\n  |\n1 | from .menu import Menu\n2 |\n3 | __all__ = [\"Menu\"]\n  |                   ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/client/events/__init__.py:7:2\n  |\n5 |     \"MenuDeleted\",\n6 |     \"MenuMealAddedOrRemoved\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/events/menu_deleted.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.event import Event\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/events/menu_meals_changed.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.event import Event\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/client/root_aggregate/__init__.py:3:21\n  |\n1 | from .client import Client\n2 |\n3 | __all__ = [\"Client\"]\n  |                     ^\n  |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/client/value_objects/__init__.py:5:2\n  |\n3 | __all__ = [\n4 |     \"MenuMeal\",\n5 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/client/value_objects/menu_meal.py:1:1\n  |\n1 | / from datetime import time\n2 | | from attrs import frozen, field\n3 | |\n4 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n5 | |\n6 | | from src.contexts.shared_kernel.domain.value_objects.nutri_facts import NutriFacts\n  | |__________________________________________________________________________________^\n7 |\n8 |   @frozen(kw_only=True, hash=True)\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/enums.py:1:1\n  |\n1 | / from enum import unique\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.enums import \\\n4 | |     Permission as SeedPermission\n5 | | from src.contexts.seedwork.shared.domain.enums import Role as SeedRole\n  | |______________________________________________________________________^\n  |\nhelp: Organize imports\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:23:21\n   |\n21 |   @unique\n22 |   class Role(SeedRole):\n23 |       ADMINISTRATOR = {\n   |  _____________________^\n24 | |         Permission.MANAGE_USERS,\n25 | |         Permission.MANAGE_RECIPES,\n26 | |         Permission.MANAGE_MEALS,\n27 | |         Permission.MANAGE_MENUS,\n28 | |         Permission.MANAGE_CLIENTS,\n29 | |         Permission.VIEW_AUDIT_LOG,\n30 | |     }\n   | |_____^\n31 |       USER_MANAGER = {Permission.MANAGE_USERS}\n32 |       RECIPE_MANAGER = {Permission.MANAGE_RECIPES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:31:20\n   |\n29 |         Permission.VIEW_AUDIT_LOG,\n30 |     }\n31 |     USER_MANAGER = {Permission.MANAGE_USERS}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n32 |     RECIPE_MANAGER = {Permission.MANAGE_RECIPES}\n33 |     MEAL_MANAGER = {Permission.MANAGE_MEALS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:32:22\n   |\n30 |     }\n31 |     USER_MANAGER = {Permission.MANAGE_USERS}\n32 |     RECIPE_MANAGER = {Permission.MANAGE_RECIPES}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n33 |     MEAL_MANAGER = {Permission.MANAGE_MEALS}\n34 |     MENU_MANAGER = {Permission.MANAGE_MENUS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:33:20\n   |\n31 |     USER_MANAGER = {Permission.MANAGE_USERS}\n32 |     RECIPE_MANAGER = {Permission.MANAGE_RECIPES}\n33 |     MEAL_MANAGER = {Permission.MANAGE_MEALS}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n34 |     MENU_MANAGER = {Permission.MANAGE_MENUS}\n35 |     CLIENT_MANAGER = {Permission.MANAGE_CLIENTS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:34:20\n   |\n32 |     RECIPE_MANAGER = {Permission.MANAGE_RECIPES}\n33 |     MEAL_MANAGER = {Permission.MANAGE_MEALS}\n34 |     MENU_MANAGER = {Permission.MANAGE_MENUS}\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n35 |     CLIENT_MANAGER = {Permission.MANAGE_CLIENTS}\n36 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:35:22\n   |\n33 |     MEAL_MANAGER = {Permission.MANAGE_MEALS}\n34 |     MENU_MANAGER = {Permission.MANAGE_MENUS}\n35 |     CLIENT_MANAGER = {Permission.MANAGE_CLIENTS}\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n36 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n37 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:36:15\n   |\n34 |     MENU_MANAGER = {Permission.MANAGE_MENUS}\n35 |     CLIENT_MANAGER = {Permission.MANAGE_CLIENTS}\n36 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n37 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n38 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:37:12\n   |\n35 |     CLIENT_MANAGER = {Permission.MANAGE_CLIENTS}\n36 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n37 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n38 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n39 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:38:17\n   |\n36 |     AUDITOR = {Permission.VIEW_AUDIT_LOG}\n37 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n38 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n39 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> src/contexts/recipes_catalog/core/domain/enums.py:39:21\n   |\n37 |     USER = {Permission.ACCESS_BASIC_FEATURES}\n38 |     DEVELOPER = {Permission.ACCESS_DEVELOPER_TOOLS}\n39 |     SUPPORT_STAFF = {Permission.ACCESS_SUPPORT, Permission.ACCESS_BASIC_FEATURES}\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n40 |\n41 |     @property\n   |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/commands/__init__.py:1:1\n  |\n1 | / from .copy_meal import CopyMeal\n2 | | from .create_meal import CreateMeal\n3 | | from .delete_meal import DeleteMeal\n4 | | from .update_meal import UpdateMeal\n5 | | from .delete_recipe import DeleteRecipe\n6 | | from .copy_recipe import CopyRecipe\n7 | | from .create_recipe import CreateRecipe\n8 | | from .update_recipe import UpdateRecipe\n9 | | from .rate_recipe import RateRecipe\n  | |___________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/commands/copy_meal.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/commands/copy_recipe.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/commands/create_meal.py:1:1\n  |\n1 | / from attrs import frozen, field\n2 | |\n3 | | from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n4 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n5 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n  | |___________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/commands/create_recipe.py:1:1\n  |\n1 | / from attrs import frozen, field\n2 | |\n3 | | from src.contexts.recipes_catalog.core.domain.meal.value_objects.ingredient import Ingredient\n4 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n5 | | from src.contexts.shared_kernel.domain.enums import Privacy\n6 | | from src.contexts.shared_kernel.domain.value_objects.nutri_facts import NutriFacts\n7 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n  | |___________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/meal/entities/__init__.py:3:22\n  |\n1 | from .recipe import _Recipe\n2 |\n3 | __all__ = [\"_Recipe\"]\n  |                      ^\n  |\nhelp: Add trailing newline\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n   --> src/contexts/recipes_catalog/core/domain/meal/entities/recipe.py:573:17\n    |\n571 |         state_attributes = {\n572 |             attr_name\n573 |             for attr_name in self.__dict__.keys()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n574 |             if attr_name.startswith(\"_\") and not attr_name.startswith(\"__\")\n575 |         }\n    |\nhelp: Remove `.keys()`\n\nB007 Loop control variable `value` not used within loop body\n   --> src/contexts/recipes_catalog/core/domain/meal/entities/recipe.py:800:18\n    |\n799 |         # Validate all properties first (similar to Entity base class)\n800 |         for key, value in kwargs.items():\n    |                  ^^^^^\n801 |             if key[0] == \"_\":\n802 |                 raise AttributeError(f\"{key} is private.\")\n    |\nhelp: Rename unused `value` to `_value`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/events/__init__.py:1:1\n  |\n1 | / from .meal_deleted import MealDeleted\n2 | | from .updated_attr_that_reflect_on_menu import UpdatedAttrOnMealThatReflectOnMenu\n3 | | from .recipe_updated import RecipeUpdated\n4 | | from .recipe_created import RecipeCreated\n  | |_________________________________________^\n5 |\n6 |   __all__ = [\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/events/meal_deleted.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.event import Event\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/events/updated_attr_that_reflect_on_menu.py:1:1\n  |\n1 | / from attrs import field, frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.event import Event\n  | |___________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/domain/meal/root_aggregate/__init__.py:3:19\n  |\n1 | from .meal import Meal\n2 |\n3 | __all__ = [\"Meal\"]\n  |                   ^\n  |\nhelp: Add trailing newline\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n   --> src/contexts/recipes_catalog/core/domain/meal/root_aggregate/meal.py:601:17\n    |\n599 |         state_attributes = {\n600 |             attr_name\n601 |             for attr_name in self.__dict__.keys()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n602 |             if attr_name.startswith(\"_\") and not attr_name.startswith(\"__\")\n603 |         }\n    |\nhelp: Remove `.keys()`\n\nB007 Loop control variable `value` not used within loop body\n   --> src/contexts/recipes_catalog/core/domain/meal/root_aggregate/meal.py:828:18\n    |\n827 |         # Validate all properties first (similar to Entity base class)\n828 |         for key, value in kwargs.items():\n    |                  ^^^^^\n829 |             if key[0] == \"_\":\n830 |                 raise AttributeError(f\"{key} is private.\")\n    |\nhelp: Rename unused `value` to `_value`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/meal/value_objects/__init__.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.value_objects.ingredient import Ingredient\n2 | | from src.contexts.recipes_catalog.core.domain.meal.value_objects.rating import Rating\n3 | | from src.contexts.recipes_catalog.core.domain.meal.value_objects.macro_division import MacroDivision\n  | |____________________________________________________________________________________________________^\n4 |\n5 |   __all__ = [\"Ingredient\", \"Rating\", \"MacroDivision\"]\n  |\nhelp: Organize imports\n\nE711 Comparison to `None` should be `cond is not None`\n  --> src/contexts/recipes_catalog/core/domain/meal/value_objects/ingredient.py:36:93\n   |\n35 |     def __add__(self, other: \"Ingredient\") -> \"Ingredient\":\n36 |         if isinstance(other, Ingredient) and self.unit == other.unit and self.product_id != None and self.product_id == other.product_\u2026\n   |                                                                                             ^^^^\n37 |             return self.replace(\n38 |                 quantity=self.quantity + other.quantity,\n   |\nhelp: Replace with `cond is not None`\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/rules.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | | from typing import TYPE_CHECKING\n3 | |\n4 | | from src.contexts.seedwork.shared.domain.rules import BusinessRule\n5 | | from src.contexts.recipes_catalog.core.domain.enums import Role as EnumRoles\n6 | | from src.contexts.shared_kernel.domain.enums import Privacy\n7 | | from src.logging.logger import logger\n  | |_____________________________________^\n8 |\n9 |   if TYPE_CHECKING:\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/domain/rules.py:10:5\n   |\n 9 |   if TYPE_CHECKING:\n10 | /     from src.contexts.recipes_catalog.core.domain.client.entities.menu import Menu\n11 | |     from src.contexts.recipes_catalog.core.domain.shared.value_objects.user import User\n12 | |     from src.contexts.recipes_catalog.core.domain.meal.root_aggregate.meal import Meal\n13 | |     from src.contexts.recipes_catalog.core.domain.meal.entities.recipe import _Recipe\n14 | |     from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n15 | |     from src.contexts.recipes_catalog.core.domain.client.value_objects.menu_meal import MenuMeal\n16 | |     from src.contexts.recipes_catalog.core.domain.meal.value_objects.ingredient import Ingredient\n   | |_________________________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nUP037 [*] Remove quotes from type annotation\n  --> src/contexts/recipes_catalog/core/domain/rules.py:58:42\n   |\n56 |     __message = \"Positions must be consecutive and start from 0\"\n57 |\n58 |     def __init__(self, ingredients: list[\"Ingredient\"]):\n   |                                          ^^^^^^^^^^^^\n59 |         self.ingredients = ingredients\n   |\nhelp: Remove quotes\n\nUP037 [*] Remove quotes from type annotation\n  --> src/contexts/recipes_catalog/core/domain/rules.py:75:30\n   |\n73 |     __message = \"Recipe must have the correct meal id and author id\"\n74 |\n75 |     def __init__(self, meal: \"Meal\", recipe: \"_Recipe\"):\n   |                              ^^^^^^\n76 |         self.meal = meal\n77 |         self.recipe = recipe\n   |\nhelp: Remove quotes\n\nUP037 [*] Remove quotes from type annotation\n  --> src/contexts/recipes_catalog/core/domain/rules.py:75:46\n   |\n73 |     __message = \"Recipe must have the correct meal id and author id\"\n74 |\n75 |     def __init__(self, meal: \"Meal\", recipe: \"_Recipe\"):\n   |                                              ^^^^^^^^^\n76 |         self.meal = meal\n77 |         self.recipe = recipe\n   |\nhelp: Remove quotes\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/domain/rules.py:87:1\n   |\n85 |             return True\n86 |         return False\n87 |     \n   | ^^^^\n88 |     def get_message(self) -> str:\n89 |         return self.__message\n   |\nhelp: Remove whitespace from blank line\n\nUP037 [*] Remove quotes from type annotation\n  --> src/contexts/recipes_catalog/core/domain/rules.py:95:29\n   |\n93 |     __message = \"Author id on tag must match root aggregate author\"\n94 |\n95 |     def __init__(self, tag: \"Tag\", root_aggregate):\n   |                             ^^^^^\n96 |         self.tag = tag\n97 |         self.root_aggregate = root_aggregate\n   |\nhelp: Remove quotes\n\nUP037 [*] Remove quotes from type annotation\n   --> src/contexts/recipes_catalog/core/domain/rules.py:112:35\n    |\n110 |     __message = \"Meal must already exist in the menu\"\n111 |\n112 |     def __init__(self, menu_meal: \"MenuMeal\", menu: \"Menu\"):\n    |                                   ^^^^^^^^^^\n113 |         self.menu_meal = menu_meal\n114 |         self.menu = menu\n    |\nhelp: Remove quotes\n\nUP037 [*] Remove quotes from type annotation\n   --> src/contexts/recipes_catalog/core/domain/rules.py:112:53\n    |\n110 |     __message = \"Meal must already exist in the menu\"\n111 |\n112 |     def __init__(self, menu_meal: \"MenuMeal\", menu: \"Menu\"):\n    |                                                     ^^^^^^\n113 |         self.menu_meal = menu_meal\n114 |         self.menu = menu\n    |\nhelp: Remove quotes\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/shared/__init__.py:1:1\n  |\n1 | from src.contexts.recipes_catalog.core.domain.shared.product_shopping_data import ProductShoppingData\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 |\n3 | __all__ = [\"ProductShoppingData\"]\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/shared/commands/create.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n  | |________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/domain/shared/product_shopping_data.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n4 |\n5 |   @frozen(kw_only=True, hash=True)\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/domain/shared/product_shopping_data.py:26:38\n   |\n24 |     quantity: float\n25 |     unit: str\n26 |     product_data: ProductShoppingData\n   |                                      ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/__init__.py:1:1\n  |\n1 | / from .create_menu import create_menu_handler\n2 | | from .delete_menu import delete_menu_handler\n3 | | from .update_menu import update_menu_handler\n4 | | from .create_client import create_client_handler\n5 | | from .delete_client import delete_client_handler\n6 | | from .update_client import update_client_handler\n  | |________________________________________________^\n7 |\n8 |   __all__ = [\n  |\nhelp: Organize imports\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/__init__.py:10:27\n   |\n 8 | __all__ = [\n 9 |     \"create_menu_handler\",\n10 |     \"delete_menu_handler\", \n   |                           ^\n11 |     \"update_menu_handler\",\n12 |     \"create_client_handler\",\n   |\nhelp: Remove trailing whitespace\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:1:1\n  |\n1 | from typing import Dict, Any, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 | from attrs import asdict\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:1:1\n  |\n1 | / from typing import Dict, Any, Optional\n2 | | from attrs import asdict\n3 | |\n4 | | from src.contexts.recipes_catalog.core.domain.client.commands.create_client import CreateClient\n5 | | from src.contexts.recipes_catalog.core.domain.client.root_aggregate.client import Client\n6 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n7 | | from src.contexts.recipes_catalog.core.services.client.form_response_mapper import FormResponseMapper\n8 | | from src.contexts.recipes_catalog.core.adapters.external_providers.client_onboarding.client_onboarding_provider import ClientOnboardingProvider\n  | |_______________________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:14:1\n   |\n12 |     \"\"\"\n13 |     Enhanced create client handler with form response data processing support.\n14 |     \n   | ^^^^\n15 |     Supports two modes:\n16 |     1. Standard creation: Direct client creation from command attributes\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:18:1\n   |\n16 |     1. Standard creation: Direct client creation from command attributes\n17 |     2. Form response integration: Automatic mapping from TypeForm response data with command precedence\n18 |     \n   | ^^^^\n19 |     Form Response Integration Mode:\n20 |     - If 'form_response_id' is provided in command, fetches the form response\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:34:1\n   |\n32 |             client_params = asdict(cmd, recurse=False)\n33 |             client_params['onboarding_data'] = None  # No form response data\n34 |         \n   | ^^^^^^^^\n35 |         client = Client.create_client(**client_params)\n36 |         await uow.clients.add(client)\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:40:98\n   |\n40 | async def _prepare_client_params_with_form_response(cmd: CreateClient, form_response_id: str) -> Dict[str, Any]:\n   |                                                                                                  ^^^^\n41 |     \"\"\"\n42 |     Prepare client creation parameters by combining command attributes with form response data.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:44:1\n   |\n42 |     Prepare client creation parameters by combining command attributes with form response data.\n43 |     Command attributes take precedence over form response data.\n44 |     \n   | ^^^^\n45 |     Args:\n46 |         cmd: CreateClient command with explicit attributes\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:48:1\n   |\n46 |         cmd: CreateClient command with explicit attributes\n47 |         form_response_id: TypeForm response ID to fetch and process\n48 |         \n   | ^^^^^^^^\n49 |     Returns:\n50 |         Dictionary of client creation parameters with command precedence\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:54:1\n   |\n52 |     # Fetch form response data from client_onboarding context\n53 |     form_response_data = await ClientOnboardingProvider.get_form_response(form_response_id)\n54 |     \n   | ^^^^\n55 |     # Initialize form response mapper\n56 |     mapper = FormResponseMapper()\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:57:1\n   |\n55 |     # Initialize form response mapper\n56 |     mapper = FormResponseMapper()\n57 |     \n   | ^^^^\n58 |     # Map form response to client data\n59 |     form_client_params, extraction_warnings = mapper.map_form_response_to_client_data(\n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:60:42\n   |\n58 |     # Map form response to client data\n59 |     form_client_params, extraction_warnings = mapper.map_form_response_to_client_data(\n60 |         form_response=form_response_data, \n   |                                          ^\n61 |         author_id=cmd.author_id\n62 |     )\n   |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:63:1\n   |\n61 |         author_id=cmd.author_id\n62 |     )\n63 |     \n   | ^^^^\n64 |     # Start with command attributes (these take precedence)\n65 |     cmd_dict = asdict(cmd, recurse=False)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:66:1\n   |\n64 |     # Start with command attributes (these take precedence)\n65 |     cmd_dict = asdict(cmd, recurse=False)\n66 |     \n   | ^^^^\n67 |     # Remove form_response_id from final params since it's not a Client attribute\n68 |     cmd_dict.pop('form_response_id', None)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:69:1\n   |\n67 |     # Remove form_response_id from final params since it's not a Client attribute\n68 |     cmd_dict.pop('form_response_id', None)\n69 |     \n   | ^^^^\n70 |     # Prepare final client creation parameters\n71 |     client_params = {}\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:72:1\n   |\n70 |     # Prepare final client creation parameters\n71 |     client_params = {}\n72 |     \n   | ^^^^\n73 |     # Required fields - always use command values\n74 |     client_params['author_id'] = cmd.author_id\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:75:1\n   |\n73 |     # Required fields - always use command values\n74 |     client_params['author_id'] = cmd.author_id\n75 |     \n   | ^^^^\n76 |     # Profile - use command if provided, otherwise use form data\n77 |     if cmd.profile is not None:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:84:1\n   |\n82 |         # This should not happen as profile is required, but fallback to command\n83 |         client_params['profile'] = cmd.profile\n84 |     \n   | ^^^^\n85 |     # Optional fields - command takes precedence, fall back to form data\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:86:1\n   |\n85 |     # Optional fields - command takes precedence, fall back to form data\n86 |     \n   | ^^^^\n87 |     # Contact Info\n88 |     if cmd.contact_info is not None:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:94:1\n   |\n92 |     else:\n93 |         client_params['contact_info'] = None\n94 |     \n   | ^^^^\n95 |     # Address\n96 |     if cmd.address is not None:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:102:1\n    |\n100 |     else:\n101 |         client_params['address'] = None\n102 |     \n    | ^^^^\n103 |     # Tags\n104 |     if cmd.tags is not None:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:110:1\n    |\n108 |     else:\n109 |         client_params['tags'] = None\n110 |     \n    | ^^^^\n111 |     # Notes - combine command notes with form extraction notes\n112 |     if cmd.notes is not None:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:122:1\n    |\n120 |     else:\n121 |         client_params['notes'] = None\n122 |     \n    | ^^^^\n123 |     # Onboarding Data - always store the fetched form response data\n124 |     client_params['onboarding_data'] = form_response_data\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_client.py:125:1\n    |\n123 |     # Onboarding Data - always store the fetched form response data\n124 |     client_params['onboarding_data'] = form_response_data\n125 |     \n    | ^^^^\n126 |     return client_params\n    |\nhelp: Remove whitespace from blank line\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/create_menu.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.commands.create_menu import CreateMenu\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/delete_client.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.commands.delete_client import DeleteClient\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:1:1\n  |\n1 | from typing import Dict, Any, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2 | from src.contexts.recipes_catalog.core.domain.client.commands.update_client import UpdateClient\n3 | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:1:1\n  |\n1 | / from typing import Dict, Any, Optional\n2 | | from src.contexts.recipes_catalog.core.domain.client.commands.update_client import UpdateClient\n3 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n4 | | from src.contexts.recipes_catalog.core.services.client.form_response_mapper import FormResponseMapper\n5 | | from src.contexts.recipes_catalog.core.adapters.external_providers.client_onboarding.client_onboarding_provider import ClientOnboardingProvider\n  | |_______________________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:11:1\n   |\n 9 |     \"\"\"\n10 |     Enhanced update client handler with form response data processing support.\n11 |     \n   | ^^^^\n12 |     Supports two modes:\n13 |     1. Standard update: Direct property updates via cmd.updates\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:15:1\n   |\n13 |     1. Standard update: Direct property updates via cmd.updates\n14 |     2. Form response integration: Automatic mapping from TypeForm response data\n15 |     \n   | ^^^^\n16 |     Form Response Integration Mode:\n17 |     - If 'form_response_id' is provided in cmd.updates, fetches the form response\n   |\nhelp: Remove whitespace from blank line\n\nW291 Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:18:75\n   |\n16 |     Form Response Integration Mode:\n17 |     - If 'form_response_id' is provided in cmd.updates, fetches the form response\n18 |     - Maps form data to Client properties (profile, contact_info, address)  \n   |                                                                           ^^\n19 |     - Stores original form data in onboarding_data field\n20 |     - Updates existing Client with mapped data while preserving existing properties\n   |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:24:1\n   |\n22 |     async with uow:\n23 |         client = await uow.clients.get(cmd.client_id)\n24 |         \n   | ^^^^^^^^\n25 |         # Check if this is a form response integration update\n26 |         form_response_id = cmd.updates.get('form_response_id')\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:32:1\n   |\n30 |             # Standard property update\n31 |             client.update_properties(**cmd.updates)\n32 |         \n   | ^^^^^^^^\n33 |         await uow.clients.persist(client)\n34 |         await uow.commit()\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:37:80\n   |\n37 | async def _handle_form_response_update(client, form_response_id: str, updates: Dict[str, Any]) -> None:\n   |                                                                                ^^^^\n38 |     \"\"\"\n39 |     Handle form response integration for client updates.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:40:1\n   |\n38 |     \"\"\"\n39 |     Handle form response integration for client updates.\n40 |     \n   | ^^^^\n41 |     Args:\n42 |         client: The Client entity to update\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:48:1\n   |\n46 |     # Fetch form response data from client_onboarding context\n47 |     form_response_data = await ClientOnboardingProvider.get_form_response(form_response_id)\n48 |     \n   | ^^^^\n49 |     # Initialize form response mapper\n50 |     mapper = FormResponseMapper()\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:51:1\n   |\n49 |     # Initialize form response mapper\n50 |     mapper = FormResponseMapper()\n51 |     \n   | ^^^^\n52 |     # Map form response to client data (excluding author_id since this is an update)\n53 |     client_params, extraction_warnings = mapper.map_form_response_to_client_data(\n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:54:42\n   |\n52 |     # Map form response to client data (excluding author_id since this is an update)\n53 |     client_params, extraction_warnings = mapper.map_form_response_to_client_data(\n54 |         form_response=form_response_data, \n   |                                          ^\n55 |         author_id=client.author_id\n56 |     )\n   |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:57:1\n   |\n55 |         author_id=client.author_id\n56 |     )\n57 |     \n   | ^^^^\n58 |     # Prepare update parameters, excluding read-only fields\n59 |     update_params = {}\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:60:1\n   |\n58 |     # Prepare update parameters, excluding read-only fields\n59 |     update_params = {}\n60 |     \n   | ^^^^\n61 |     # Update profile if extracted and not explicitly overridden in updates\n62 |     if client_params.get('profile') and 'profile' not in updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:64:1\n   |\n62 |     if client_params.get('profile') and 'profile' not in updates:\n63 |         update_params['profile'] = client_params['profile']\n64 |     \n   | ^^^^\n65 |     # Update contact_info if extracted and not explicitly overridden\n66 |     if client_params.get('contact_info') and 'contact_info' not in updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:68:1\n   |\n66 |     if client_params.get('contact_info') and 'contact_info' not in updates:\n67 |         update_params['contact_info'] = client_params['contact_info']\n68 |     \n   | ^^^^\n69 |     # Update address if extracted and not explicitly overridden\n70 |     if client_params.get('address') and 'address' not in updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:72:1\n   |\n70 |     if client_params.get('address') and 'address' not in updates:\n71 |         update_params['address'] = client_params['address']\n72 |     \n   | ^^^^\n73 |     # Always update onboarding_data with the form response unless explicitly overridden\n74 |     if 'onboarding_data' not in updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:76:1\n   |\n74 |     if 'onboarding_data' not in updates:\n75 |         update_params['onboarding_data'] = form_response_data\n76 |     \n   | ^^^^\n77 |     # Update notes with extraction information unless explicitly overridden\n78 |     if client_params.get('notes') and 'notes' not in updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:85:1\n   |\n83 |         elif form_notes:\n84 |             update_params['notes'] = form_notes\n85 |     \n   | ^^^^\n86 |     # Apply any explicit updates from the command (these take priority)\n87 |     update_params.update({k: v for k, v in updates.items() if k != 'form_response_id'})\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_client.py:88:1\n   |\n86 |     # Apply any explicit updates from the command (these take priority)\n87 |     update_params.update({k: v for k, v in updates.items() if k != 'form_response_id'})\n88 |     \n   | ^^^^\n89 |     # Apply all updates to the client\n90 |     client.update_properties(**update_params)\n   |\nhelp: Remove whitespace from blank line\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/command_handlers/update_menu.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.commands.update_menu import UpdateMenu\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/services/client/event_handlers/__init__.py:7:2\n  |\n5 |     \"delete_related_meals\",\n6 |     \"update_menu_id_on_meals\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:3:1\n  |\n1 | \"\"\"Address data extraction service for form response data.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | from src.contexts.shared_kernel.domain.value_objects.address import Address\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:3:1\n  |\n1 |   \"\"\"Address data extraction service for form response data.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Optional\n4 | |\n5 | | from src.contexts.shared_kernel.domain.value_objects.address import Address\n6 | | from src.contexts.shared_kernel.domain.enums import State\n  | |_________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:11:1\n   |\n 9 | class AddressDataExtractor:\n10 |     \"\"\"Extract Address data from form responses to create Address value objects.\"\"\"\n11 |     \n   | ^^^^\n12 |     def __init__(self):\n13 |         \"\"\"Initialize the Address data extractor.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:15:1\n   |\n13 |         \"\"\"Initialize the Address data extractor.\"\"\"\n14 |         pass\n15 |     \n   | ^^^^\n16 |     def extract_address_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Address]:\n17 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:16:65\n   |\n14 |         pass\n15 |     \n16 |     def extract_address_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Address]:\n   |                                                                 ^^^^\n17 |         \"\"\"\n18 |         Extract Address information from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:16:84\n   |\n14 |         pass\n15 |     \n16 |     def extract_address_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Address]:\n   |                                                                                    ^^^^^^^^^^^^^^^^^\n17 |         \"\"\"\n18 |         Extract Address information from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:19:1\n   |\n17 |         \"\"\"\n18 |         Extract Address information from form response data.\n19 |         \n   | ^^^^^^^^\n20 |         Args:\n21 |             form_response: The form response data from client_onboarding context\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:22:1\n   |\n20 |         Args:\n21 |             form_response: The form response data from client_onboarding context\n22 |             \n   | ^^^^^^^^^^^^\n23 |         Returns:\n24 |             Address value object or None if no address information found\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:25:1\n   |\n23 |         Returns:\n24 |             Address value object or None if no address information found\n25 |             \n   | ^^^^^^^^^^^^\n26 |         Raises:\n27 |             ValueError: If form response data is invalid\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:31:1\n   |\n29 |         if not form_response:\n30 |             raise ValueError(\"Form response data cannot be empty\")\n31 |             \n   | ^^^^^^^^^^^^\n32 |         answers = form_response.get(\"answers\", [])\n33 |         if not answers:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:35:1\n   |\n33 |         if not answers:\n34 |             raise ValueError(\"Form response must contain answers\")\n35 |             \n   | ^^^^^^^^^^^^\n36 |         # Extract answers by field reference or field type\n37 |         extracted_data = self._extract_answers_by_type(answers)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:38:1\n   |\n36 |         # Extract answers by field reference or field type\n37 |         extracted_data = self._extract_answers_by_type(answers)\n38 |         \n   | ^^^^^^^^\n39 |         # Extract address fields\n40 |         street = self._extract_street(extracted_data)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:44:1\n   |\n42 |         state = self._extract_state(extracted_data)\n43 |         zip_code = self._extract_zip_code(extracted_data)\n44 |         \n   | ^^^^^^^^\n45 |         # Return None if no meaningful address information found\n46 |         if not street and not city:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:48:1\n   |\n46 |         if not street and not city:\n47 |             return None\n48 |             \n   | ^^^^^^^^^^^^\n49 |         return Address(\n50 |             street=street,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:55:1\n   |\n53 |             zip_code=zip_code\n54 |         )\n55 |     \n   | ^^^^\n56 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n57 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:56:58\n   |\n54 |         )\n55 |     \n56 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n   |                                                          ^^^^\n57 |         \"\"\"\n58 |         Extract answers organized by field type and reference.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:59:1\n   |\n57 |         \"\"\"\n58 |         Extract answers organized by field type and reference.\n59 |         \n   | ^^^^^^^^\n60 |         Args:\n61 |             answers: List of answer objects from form response\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:62:1\n   |\n60 |         Args:\n61 |             answers: List of answer objects from form response\n62 |             \n   | ^^^^^^^^^^^^\n63 |         Returns:\n64 |             Dictionary with field references/types as keys and values\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:67:1\n   |\n65 |         \"\"\"\n66 |         extracted = {}\n67 |         \n   | ^^^^^^^^\n68 |         for answer in answers:\n69 |             if not isinstance(answer, dict):\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:71:1\n   |\n69 |             if not isinstance(answer, dict):\n70 |                 continue\n71 |                 \n   | ^^^^^^^^^^^^^^^^\n72 |             field = answer.get(\"field\", {})\n73 |             field_ref = field.get(\"ref\", \"\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:75:1\n   |\n73 |             field_ref = field.get(\"ref\", \"\")\n74 |             field_type = field.get(\"type\", \"\")\n75 |             \n   | ^^^^^^^^^^^^\n76 |             # Store answer value by field reference (preferred) or type\n77 |             key = field_ref if field_ref else field_type\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:80:1\n   |\n78 |             if key:\n79 |                 extracted[key] = answer.get(\"text\") or answer.get(\"choice\", {}).get(\"label\")\n80 |                 \n   | ^^^^^^^^^^^^^^^^\n81 |         return extracted\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:82:1\n   |\n81 |         return extracted\n82 |     \n   | ^^^^\n83 |     def _extract_street(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n84 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:83:47\n   |\n81 |         return extracted\n82 |     \n83 |     def _extract_street(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                               ^^^^\n84 |         \"\"\"\n85 |         Extract street address from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:83:66\n   |\n81 |         return extracted\n82 |     \n83 |     def _extract_street(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                                                  ^^^^^^^^^^^^^\n84 |         \"\"\"\n85 |         Extract street address from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:86:1\n   |\n84 |         \"\"\"\n85 |         Extract street address from form response data.\n86 |         \n   | ^^^^^^^^\n87 |         Args:\n88 |             extracted_data: Processed form answers\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:89:1\n   |\n87 |         Args:\n88 |             extracted_data: Processed form answers\n89 |             \n   | ^^^^^^^^^^^^\n90 |         Returns:\n91 |             Street address string or None if not found\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:100:1\n    |\n 98 |             \"short_text\", \"long_text\"  # Fallback field types\n 99 |         ]\n100 |         \n    | ^^^^^^^^\n101 |         for field in street_fields:\n102 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:102:16\n    |\n101 |         for field in street_fields:\n102 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n103 |                 street = str(extracted_data[field]).strip()\n104 |                 if street:\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:106:1\n    |\n104 |                 if street:\n105 |                     return street\n106 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n107 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:108:1\n    |\n107 |         return None\n108 |     \n    | ^^^^\n109 |     def _extract_city(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n110 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:109:45\n    |\n107 |         return None\n108 |     \n109 |     def _extract_city(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                             ^^^^\n110 |         \"\"\"\n111 |         Extract city from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:109:64\n    |\n107 |         return None\n108 |     \n109 |     def _extract_city(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                ^^^^^^^^^^^^^\n110 |         \"\"\"\n111 |         Extract city from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:112:1\n    |\n110 |         \"\"\"\n111 |         Extract city from form response data.\n112 |         \n    | ^^^^^^^^\n113 |         Args:\n114 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:115:1\n    |\n113 |         Args:\n114 |             extracted_data: Processed form answers\n115 |             \n    | ^^^^^^^^^^^^\n116 |         Returns:\n117 |             City string or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:125:1\n    |\n123 |             \"short_text\"  # Fallback field type\n124 |         ]\n125 |         \n    | ^^^^^^^^\n126 |         for field in city_fields:\n127 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:127:16\n    |\n126 |         for field in city_fields:\n127 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n128 |                 city = str(extracted_data[field]).strip()\n129 |                 if city:\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:131:1\n    |\n129 |                 if city:\n130 |                     return city\n131 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n132 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:133:1\n    |\n132 |         return None\n133 |     \n    | ^^^^\n134 |     def _extract_state(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n135 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:134:46\n    |\n132 |         return None\n133 |     \n134 |     def _extract_state(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                              ^^^^\n135 |         \"\"\"\n136 |         Extract state/province from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:134:65\n    |\n132 |         return None\n133 |     \n134 |     def _extract_state(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                 ^^^^^^^^^^^^^\n135 |         \"\"\"\n136 |         Extract state/province from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:137:1\n    |\n135 |         \"\"\"\n136 |         Extract state/province from form response data.\n137 |         \n    | ^^^^^^^^\n138 |         Args:\n139 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:140:1\n    |\n138 |         Args:\n139 |             extracted_data: Processed form answers\n140 |             \n    | ^^^^^^^^^^^^\n141 |         Returns:\n142 |             State/province string or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:150:1\n    |\n148 |             \"dropdown\", \"choice\"  # Fallback field types\n149 |         ]\n150 |         \n    | ^^^^^^^^\n151 |         for field in state_fields:\n152 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:152:16\n    |\n151 |         for field in state_fields:\n152 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n153 |                 state = str(extracted_data[field]).strip()\n154 |                 if state:\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:156:1\n    |\n154 |                 if state:\n155 |                     return state\n156 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n157 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:158:1\n    |\n157 |         return None\n158 |     \n    | ^^^^\n159 |     def _extract_country(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n160 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:159:48\n    |\n157 |         return None\n158 |     \n159 |     def _extract_country(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                ^^^^\n160 |         \"\"\"\n161 |         Extract country from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:159:67\n    |\n157 |         return None\n158 |     \n159 |     def _extract_country(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                   ^^^^^^^^^^^^^\n160 |         \"\"\"\n161 |         Extract country from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:162:1\n    |\n160 |         \"\"\"\n161 |         Extract country from form response data.\n162 |         \n    | ^^^^^^^^\n163 |         Args:\n164 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:165:1\n    |\n163 |         Args:\n164 |             extracted_data: Processed form answers\n165 |             \n    | ^^^^^^^^^^^^\n166 |         Returns:\n167 |             Country string or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:175:1\n    |\n173 |             \"dropdown\", \"choice\"  # Fallback field types\n174 |         ]\n175 |         \n    | ^^^^^^^^\n176 |         for field in country_fields:\n177 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:177:16\n    |\n176 |         for field in country_fields:\n177 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n178 |                 country = str(extracted_data[field]).strip()\n179 |                 if country:\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:181:1\n    |\n179 |                 if country:\n180 |                     return self._normalize_country(country)\n181 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n182 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:183:1\n    |\n182 |         return None\n183 |     \n    | ^^^^\n184 |     def _extract_zip_code(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n185 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:184:49\n    |\n182 |         return None\n183 |     \n184 |     def _extract_zip_code(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                 ^^^^\n185 |         \"\"\"\n186 |         Extract ZIP/postal code from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:184:68\n    |\n182 |         return None\n183 |     \n184 |     def _extract_zip_code(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                    ^^^^^^^^^^^^^\n185 |         \"\"\"\n186 |         Extract ZIP/postal code from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:187:1\n    |\n185 |         \"\"\"\n186 |         Extract ZIP/postal code from form response data.\n187 |         \n    | ^^^^^^^^\n188 |         Args:\n189 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:190:1\n    |\n188 |         Args:\n189 |             extracted_data: Processed form answers\n190 |             \n    | ^^^^^^^^^^^^\n191 |         Returns:\n192 |             ZIP/postal code string or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:200:1\n    |\n198 |             \"short_text\", \"number\"  # Fallback field types\n199 |         ]\n200 |         \n    | ^^^^^^^^\n201 |         for field in zip_fields:\n202 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:202:16\n    |\n201 |         for field in zip_fields:\n202 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n203 |                 zip_code = str(extracted_data[field]).strip()\n204 |                 if zip_code:\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:206:1\n    |\n204 |                 if zip_code:\n205 |                     return zip_code\n206 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n207 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:208:1\n    |\n207 |         return None\n208 |     \n    | ^^^^\n209 |     def _normalize_country(self, country: str) -> str:\n210 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:212:1\n    |\n210 |         \"\"\"\n211 |         Normalize country name to common format.\n212 |         \n    | ^^^^^^^^\n213 |         Args:\n214 |             country: Country name to normalize\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:215:1\n    |\n213 |         Args:\n214 |             country: Country name to normalize\n215 |             \n    | ^^^^^^^^^^^^\n216 |         Returns:\n217 |             Normalized country name\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:220:1\n    |\n218 |         \"\"\"\n219 |         country_lower = country.lower().strip()\n220 |         \n    | ^^^^^^^^\n221 |         # Common country name normalizations\n222 |         country_mappings = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:234:1\n    |\n232 |             \"northern ireland\": \"United Kingdom\",\n233 |         }\n234 |         \n    | ^^^^^^^^\n235 |         return country_mappings.get(country_lower, country.title())\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:236:1\n    |\n235 |         return country_mappings.get(country_lower, country.title())\n236 |     \n    | ^^^^\n237 |     def _map_state_to_enum(self, state_str: Optional[str]) -> Optional[State]:\n238 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:237:45\n    |\n235 |         return country_mappings.get(country_lower, country.title())\n236 |     \n237 |     def _map_state_to_enum(self, state_str: Optional[str]) -> Optional[State]:\n    |                                             ^^^^^^^^^^^^^\n238 |         \"\"\"\n239 |         Map state string to State enum.\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:237:63\n    |\n235 |         return country_mappings.get(country_lower, country.title())\n236 |     \n237 |     def _map_state_to_enum(self, state_str: Optional[str]) -> Optional[State]:\n    |                                                               ^^^^^^^^^^^^^^^\n238 |         \"\"\"\n239 |         Map state string to State enum.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:240:1\n    |\n238 |         \"\"\"\n239 |         Map state string to State enum.\n240 |         \n    | ^^^^^^^^\n241 |         Args:\n242 |             state_str: State string from form response\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:243:1\n    |\n241 |         Args:\n242 |             state_str: State string from form response\n243 |             \n    | ^^^^^^^^^^^^\n244 |         Returns:\n245 |             State enum value or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:249:1\n    |\n247 |         if not state_str:\n248 |             return None\n249 |             \n    | ^^^^^^^^^^^^\n250 |         state_upper = state_str.upper().strip()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:251:1\n    |\n250 |         state_upper = state_str.upper().strip()\n251 |         \n    | ^^^^^^^^\n252 |         # Try direct mapping to Brazilian state codes\n253 |         try:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:257:1\n    |\n255 |         except ValueError:\n256 |             pass\n257 |             \n    | ^^^^^^^^^^^^\n258 |         # Try mapping common state names to codes (Brazilian states)\n259 |         state_name_mapping = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:299:1\n    |\n297 |             \"TOCANTINS\": State.TO,\n298 |         }\n299 |         \n    | ^^^^^^^^\n300 |         return state_name_mapping.get(state_upper, None)\n    |\nhelp: Remove whitespace from blank line\n\nSIM910 [*] Use `state_name_mapping.get(state_upper)` instead of `state_name_mapping.get(state_upper, None)`\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:300:16\n    |\n298 |         }\n299 |         \n300 |         return state_name_mapping.get(state_upper, None)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Replace `state_name_mapping.get(state_upper, None)` with `state_name_mapping.get(state_upper)`\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/extractors/address_data_extractor.py:300:57\n    |\n298 |         }\n299 |         \n300 |         return state_name_mapping.get(state_upper, None)\n    |                                                         ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:3:1\n  |\n1 | \"\"\"ContactInfo data extraction service for form response data.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | import re\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:3:1\n  |\n1 |   \"\"\"ContactInfo data extraction service for form response data.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Optional\n4 | | import re\n5 | |\n6 | | from src.contexts.shared_kernel.domain.value_objects.contact_info import ContactInfo\n  | |____________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:11:1\n   |\n 9 | class ContactDataExtractor:\n10 |     \"\"\"Extract ContactInfo data from form responses to create ContactInfo value objects.\"\"\"\n11 |     \n   | ^^^^\n12 |     def __init__(self):\n13 |         \"\"\"Initialize the ContactInfo data extractor.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:16:1\n   |\n14 |         self.email_pattern = re.compile(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')\n15 |         self.phone_pattern = re.compile(r'^[\\+]?[1-9][\\d]{0,15}$')\n16 |     \n   | ^^^^\n17 |     def extract_contact_info_from_form_response(self, form_response: Dict[str, Any]) -> Optional[ContactInfo]:\n18 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:17:70\n   |\n15 |         self.phone_pattern = re.compile(r'^[\\+]?[1-9][\\d]{0,15}$')\n16 |     \n17 |     def extract_contact_info_from_form_response(self, form_response: Dict[str, Any]) -> Optional[ContactInfo]:\n   |                                                                      ^^^^\n18 |         \"\"\"\n19 |         Extract ContactInfo information from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:17:89\n   |\n15 |         self.phone_pattern = re.compile(r'^[\\+]?[1-9][\\d]{0,15}$')\n16 |     \n17 |     def extract_contact_info_from_form_response(self, form_response: Dict[str, Any]) -> Optional[ContactInfo]:\n   |                                                                                         ^^^^^^^^^^^^^^^^^^^^^\n18 |         \"\"\"\n19 |         Extract ContactInfo information from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:20:1\n   |\n18 |         \"\"\"\n19 |         Extract ContactInfo information from form response data.\n20 |         \n   | ^^^^^^^^\n21 |         Args:\n22 |             form_response: The form response data from client_onboarding context\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:23:1\n   |\n21 |         Args:\n22 |             form_response: The form response data from client_onboarding context\n23 |             \n   | ^^^^^^^^^^^^\n24 |         Returns:\n25 |             ContactInfo value object or None if no contact information found\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:26:1\n   |\n24 |         Returns:\n25 |             ContactInfo value object or None if no contact information found\n26 |             \n   | ^^^^^^^^^^^^\n27 |         Raises:\n28 |             ValueError: If form response data is invalid\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:32:1\n   |\n30 |         if not form_response:\n31 |             raise ValueError(\"Form response data cannot be empty\")\n32 |             \n   | ^^^^^^^^^^^^\n33 |         answers = form_response.get(\"answers\", [])\n34 |         if not answers:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:36:1\n   |\n34 |         if not answers:\n35 |             raise ValueError(\"Form response must contain answers\")\n36 |             \n   | ^^^^^^^^^^^^\n37 |         # Extract answers by field reference or field type\n38 |         extracted_data = self._extract_answers_by_type(answers)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:39:1\n   |\n37 |         # Extract answers by field reference or field type\n38 |         extracted_data = self._extract_answers_by_type(answers)\n39 |         \n   | ^^^^^^^^\n40 |         # Extract contact fields\n41 |         email = self._extract_email(extracted_data)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:43:1\n   |\n41 |         email = self._extract_email(extracted_data)\n42 |         phone = self._extract_phone(extracted_data)\n43 |         \n   | ^^^^^^^^\n44 |         # Return None if no contact information found\n45 |         if not email and not phone:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:47:1\n   |\n45 |         if not email and not phone:\n46 |             return None\n47 |             \n   | ^^^^^^^^^^^^\n48 |         return ContactInfo(\n49 |             main_email=email,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:54:1\n   |\n52 |             all_phones=frozenset([phone]) if phone else frozenset()\n53 |         )\n54 |     \n   | ^^^^\n55 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n56 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:55:58\n   |\n53 |         )\n54 |     \n55 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n   |                                                          ^^^^\n56 |         \"\"\"\n57 |         Extract answers organized by field type and reference.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:58:1\n   |\n56 |         \"\"\"\n57 |         Extract answers organized by field type and reference.\n58 |         \n   | ^^^^^^^^\n59 |         Args:\n60 |             answers: List of answer objects from form response\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:61:1\n   |\n59 |         Args:\n60 |             answers: List of answer objects from form response\n61 |             \n   | ^^^^^^^^^^^^\n62 |         Returns:\n63 |             Dictionary with field references/types as keys and values\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:66:1\n   |\n64 |         \"\"\"\n65 |         extracted = {}\n66 |         \n   | ^^^^^^^^\n67 |         for answer in answers:\n68 |             if not isinstance(answer, dict):\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:70:1\n   |\n68 |             if not isinstance(answer, dict):\n69 |                 continue\n70 |                 \n   | ^^^^^^^^^^^^^^^^\n71 |             field = answer.get(\"field\", {})\n72 |             field_ref = field.get(\"ref\", \"\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:74:1\n   |\n72 |             field_ref = field.get(\"ref\", \"\")\n73 |             field_type = field.get(\"type\", \"\")\n74 |             \n   | ^^^^^^^^^^^^\n75 |             # Store answer value by field reference (preferred) or type\n76 |             key = field_ref if field_ref else field_type\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:79:1\n   |\n77 | \u2026         if key:\n78 | \u2026             extracted[key] = answer.get(\"text\") or answer.get(\"email\") or answer.get(\"phone_number\") or answer.get(\"choice\", {}).get\u2026\n79 | \u2026             \n   ^^^^^^^^^^^^^^^^\n80 | \u2026     return extracted\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:81:1\n   |\n80 |         return extracted\n81 |     \n   | ^^^^\n82 |     def _extract_email(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n83 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:82:46\n   |\n80 |         return extracted\n81 |     \n82 |     def _extract_email(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                              ^^^^\n83 |         \"\"\"\n84 |         Extract email from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:82:65\n   |\n80 |         return extracted\n81 |     \n82 |     def _extract_email(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                                                 ^^^^^^^^^^^^^\n83 |         \"\"\"\n84 |         Extract email from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:85:1\n   |\n83 |         \"\"\"\n84 |         Extract email from form response data.\n85 |         \n   | ^^^^^^^^\n86 |         Args:\n87 |             extracted_data: Processed form answers\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:88:1\n   |\n86 |         Args:\n87 |             extracted_data: Processed form answers\n88 |             \n   | ^^^^^^^^^^^^\n89 |         Returns:\n90 |             Email string or None if not found/invalid\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:98:1\n    |\n 96 |             \"email\"  # Typeform email field type\n 97 |         ]\n 98 |         \n    | ^^^^^^^^\n 99 |         for field in email_fields:\n100 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:100:16\n    |\n 99 |         for field in email_fields:\n100 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n101 |                 email = str(extracted_data[field]).strip().lower()\n102 |                 if email and self.email_pattern.match(email):\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:104:1\n    |\n102 |                 if email and self.email_pattern.match(email):\n103 |                     return email\n104 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n105 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:106:1\n    |\n105 |         return None\n106 |     \n    | ^^^^\n107 |     def _extract_phone(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n108 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:107:46\n    |\n105 |         return None\n106 |     \n107 |     def _extract_phone(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                              ^^^^\n108 |         \"\"\"\n109 |         Extract phone number from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:107:65\n    |\n105 |         return None\n106 |     \n107 |     def _extract_phone(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                 ^^^^^^^^^^^^^\n108 |         \"\"\"\n109 |         Extract phone number from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:110:1\n    |\n108 |         \"\"\"\n109 |         Extract phone number from form response data.\n110 |         \n    | ^^^^^^^^\n111 |         Args:\n112 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:113:1\n    |\n111 |         Args:\n112 |             extracted_data: Processed form answers\n113 |             \n    | ^^^^^^^^^^^^\n114 |         Returns:\n115 |             Phone number string or None if not found/invalid\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:123:1\n    |\n121 |             \"phone_number\"  # Typeform phone number field type\n122 |         ]\n123 |         \n    | ^^^^^^^^\n124 |         for field in phone_fields:\n125 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:125:16\n    |\n124 |         for field in phone_fields:\n125 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n126 |                 phone = str(extracted_data[field]).strip()\n127 |                 # Clean phone number (remove spaces, dashes, parentheses)\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:131:1\n    |\n129 |                 if cleaned_phone and self._is_valid_phone(cleaned_phone):\n130 |                     return cleaned_phone\n131 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n132 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:133:1\n    |\n132 |         return None\n133 |     \n    | ^^^^\n134 |     def _extract_preferred_contact_method(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n135 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:134:65\n    |\n132 |         return None\n133 |     \n134 |     def _extract_preferred_contact_method(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                 ^^^^\n135 |         \"\"\"\n136 |         Extract preferred contact method from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:134:84\n    |\n132 |         return None\n133 |     \n134 |     def _extract_preferred_contact_method(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n    |                                                                                    ^^^^^^^^^^^^^\n135 |         \"\"\"\n136 |         Extract preferred contact method from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:137:1\n    |\n135 |         \"\"\"\n136 |         Extract preferred contact method from form response data.\n137 |         \n    | ^^^^^^^^\n138 |         Args:\n139 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:140:1\n    |\n138 |         Args:\n139 |             extracted_data: Processed form answers\n140 |             \n    | ^^^^^^^^^^^^\n141 |         Returns:\n142 |             Preferred contact method string or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:150:1\n    |\n148 |             \"choice\", \"multiple_choice\"  # Fallback field types\n149 |         ]\n150 |         \n    | ^^^^^^^^\n151 |         for field in preference_fields:\n152 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:152:16\n    |\n151 |         for field in preference_fields:\n152 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n153 |                 preference = str(extracted_data[field]).strip().lower()\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:154:1\n    |\n152 |             if field in extracted_data and extracted_data[field]:\n153 |                 preference = str(extracted_data[field]).strip().lower()\n154 |                 \n    | ^^^^^^^^^^^^^^^^\n155 |                 # Normalize common contact method values\n156 |                 if preference in [\"email\", \"e-mail\", \"electronic mail\"]:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:164:1\n    |\n162 |                 elif preference:\n163 |                     return preference  # Return as-is if not recognized\n164 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n165 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:166:1\n    |\n165 |         return None\n166 |     \n    | ^^^^\n167 |     def _is_valid_phone(self, phone: str) -> bool:\n168 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:170:1\n    |\n168 |         \"\"\"\n169 |         Validate phone number format.\n170 |         \n    | ^^^^^^^^\n171 |         Args:\n172 |             phone: Phone number string to validate\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:173:1\n    |\n171 |         Args:\n172 |             phone: Phone number string to validate\n173 |             \n    | ^^^^^^^^^^^^\n174 |         Returns:\n175 |             True if phone number appears valid, False otherwise\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:179:1\n    |\n177 |         if not phone:\n178 |             return False\n179 |             \n    | ^^^^^^^^^^^^\n180 |         # Remove country code prefix if present\n181 |         if phone.startswith('+'):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:185:1\n    |\n183 |         elif phone.startswith('00'):\n184 |             phone = phone[2:]\n185 |             \n    | ^^^^^^^^^^^^\n186 |         # Check basic length and format (7-15 digits)\n187 |         return len(phone) >= 7 and len(phone) <= 15 and phone.isdigit()\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/extractors/contact_data_extractor.py:187:72\n    |\n186 |         # Check basic length and format (7-15 digits)\n187 |         return len(phone) >= 7 and len(phone) <= 15 and phone.isdigit()\n    |                                                                        ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:3:1\n  |\n1 | \"\"\"Profile data extraction service for form response data.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from datetime import date, datetime\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:3:1\n  |\n1 |   \"\"\"Profile data extraction service for form response data.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Optional\n4 | | from datetime import date, datetime\n5 | |\n6 | | from src.contexts.shared_kernel.domain.value_objects.profile import Profile\n  | |___________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:11:1\n   |\n 9 | class ProfileDataExtractor:\n10 |     \"\"\"Extract Profile data from form responses to create Profile value objects.\"\"\"\n11 |     \n   | ^^^^\n12 |     def __init__(self):\n13 |         \"\"\"Initialize the Profile data extractor.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:15:1\n   |\n13 |         \"\"\"Initialize the Profile data extractor.\"\"\"\n14 |         pass\n15 |     \n   | ^^^^\n16 |     def extract_profile_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Profile]:\n17 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:16:65\n   |\n14 |         pass\n15 |     \n16 |     def extract_profile_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Profile]:\n   |                                                                 ^^^^\n17 |         \"\"\"\n18 |         Extract Profile information from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:16:84\n   |\n14 |         pass\n15 |     \n16 |     def extract_profile_from_form_response(self, form_response: Dict[str, Any]) -> Optional[Profile]:\n   |                                                                                    ^^^^^^^^^^^^^^^^^\n17 |         \"\"\"\n18 |         Extract Profile information from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:19:1\n   |\n17 |         \"\"\"\n18 |         Extract Profile information from form response data.\n19 |         \n   | ^^^^^^^^\n20 |         Args:\n21 |             form_response: The form response data from client_onboarding context\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:22:1\n   |\n20 |         Args:\n21 |             form_response: The form response data from client_onboarding context\n22 |             \n   | ^^^^^^^^^^^^\n23 |         Returns:\n24 |             Profile value object or None if required fields are missing\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:25:1\n   |\n23 |         Returns:\n24 |             Profile value object or None if required fields are missing\n25 |             \n   | ^^^^^^^^^^^^\n26 |         Raises:\n27 |             ValueError: If form response data is invalid or missing required fields\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:31:1\n   |\n29 |         if not form_response:\n30 |             raise ValueError(\"Form response data cannot be empty\")\n31 |             \n   | ^^^^^^^^^^^^\n32 |         answers = form_response.get(\"answers\", [])\n33 |         if not answers:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:35:1\n   |\n33 |         if not answers:\n34 |             raise ValueError(\"Form response must contain answers\")\n35 |             \n   | ^^^^^^^^^^^^\n36 |         # Extract answers by field reference or field type\n37 |         extracted_data = self._extract_answers_by_type(answers)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:38:1\n   |\n36 |         # Extract answers by field reference or field type\n37 |         extracted_data = self._extract_answers_by_type(answers)\n38 |         \n   | ^^^^^^^^\n39 |         # Extract required profile fields\n40 |         name = self._extract_name(extracted_data)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:43:1\n   |\n41 |         if not name:\n42 |             raise ValueError(\"Name is required for Profile creation\")\n43 |             \n   | ^^^^^^^^^^^^\n44 |         age = self._extract_age(extracted_data)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:45:1\n   |\n44 |         age = self._extract_age(extracted_data)\n45 |         \n   | ^^^^^^^^\n46 |         return Profile(\n47 |             name=name,\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:51:1\n   |\n49 |             birthday=self._extract_birthday(extracted_data, age)\n50 |         )\n51 |     \n   | ^^^^\n52 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n53 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:52:58\n   |\n50 |         )\n51 |     \n52 |     def _extract_answers_by_type(self, answers: list) -> Dict[str, Any]:\n   |                                                          ^^^^\n53 |         \"\"\"\n54 |         Extract answers organized by field type and reference.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:55:1\n   |\n53 |         \"\"\"\n54 |         Extract answers organized by field type and reference.\n55 |         \n   | ^^^^^^^^\n56 |         Args:\n57 |             answers: List of answer objects from form response\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:58:1\n   |\n56 |         Args:\n57 |             answers: List of answer objects from form response\n58 |             \n   | ^^^^^^^^^^^^\n59 |         Returns:\n60 |             Dictionary with field references/types as keys and values\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:63:1\n   |\n61 |         \"\"\"\n62 |         extracted = {}\n63 |         \n   | ^^^^^^^^\n64 |         for answer in answers:\n65 |             if not isinstance(answer, dict):\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:67:1\n   |\n65 |             if not isinstance(answer, dict):\n66 |                 continue\n67 |                 \n   | ^^^^^^^^^^^^^^^^\n68 |             field = answer.get(\"field\", {})\n69 |             field_ref = field.get(\"ref\", \"\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:71:1\n   |\n69 |             field_ref = field.get(\"ref\", \"\")\n70 |             field_type = field.get(\"type\", \"\")\n71 |             \n   | ^^^^^^^^^^^^\n72 |             # Store answer value by field reference (preferred) or type\n73 |             key = field_ref if field_ref else field_type\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:76:1\n   |\n74 |             if key:\n75 |                 extracted[key] = answer.get(\"text\") or answer.get(\"number\") or answer.get(\"choice\", {}).get(\"label\")\n76 |                 \n   | ^^^^^^^^^^^^^^^^\n77 |         return extracted\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:78:1\n   |\n77 |         return extracted\n78 |     \n   | ^^^^\n79 |     def _extract_name(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n80 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:79:45\n   |\n77 |         return extracted\n78 |     \n79 |     def _extract_name(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                             ^^^^\n80 |         \"\"\"\n81 |         Extract name from form response data.\n   |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:79:64\n   |\n77 |         return extracted\n78 |     \n79 |     def _extract_name(self, extracted_data: Dict[str, Any]) -> Optional[str]:\n   |                                                                ^^^^^^^^^^^^^\n80 |         \"\"\"\n81 |         Extract name from form response data.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:82:1\n   |\n80 |         \"\"\"\n81 |         Extract name from form response data.\n82 |         \n   | ^^^^^^^^\n83 |         Args:\n84 |             extracted_data: Processed form answers\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:85:1\n   |\n83 |         Args:\n84 |             extracted_data: Processed form answers\n85 |             \n   | ^^^^^^^^^^^^\n86 |         Returns:\n87 |             Name string or None if not found\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:94:1\n   |\n92 |             \"short_text\", \"long_text\"  # Fallback field types\n93 |         ]\n94 |         \n   | ^^^^^^^^\n95 |         for field in name_fields:\n96 |             if field in extracted_data and extracted_data[field]:\n   |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n  --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:96:16\n   |\n95 |         for field in name_fields:\n96 |             if field in extracted_data and extracted_data[field]:\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n97 |                 name = str(extracted_data[field]).strip()\n98 |                 if name:\n   |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:100:1\n    |\n 98 |                 if name:\n 99 |                     return name\n100 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n101 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:102:1\n    |\n101 |         return None\n102 |     \n    | ^^^^\n103 |     def _extract_age(self, extracted_data: Dict[str, Any]) -> Optional[int]:\n104 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:103:44\n    |\n101 |         return None\n102 |     \n103 |     def _extract_age(self, extracted_data: Dict[str, Any]) -> Optional[int]:\n    |                                            ^^^^\n104 |         \"\"\"\n105 |         Extract age from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:103:63\n    |\n101 |         return None\n102 |     \n103 |     def _extract_age(self, extracted_data: Dict[str, Any]) -> Optional[int]:\n    |                                                               ^^^^^^^^^^^^^\n104 |         \"\"\"\n105 |         Extract age from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:106:1\n    |\n104 |         \"\"\"\n105 |         Extract age from form response data.\n106 |         \n    | ^^^^^^^^\n107 |         Args:\n108 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:109:1\n    |\n107 |         Args:\n108 |             extracted_data: Processed form answers\n109 |             \n    | ^^^^^^^^^^^^\n110 |         Returns:\n111 |             Age integer or None if not found/invalid\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:118:1\n    |\n116 |             \"number\"  # Fallback field type\n117 |         ]\n118 |         \n    | ^^^^^^^^\n119 |         for field in age_fields:\n120 |             if field in extracted_data and extracted_data[field] is not None:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:127:1\n    |\n125 |                 except (ValueError, TypeError):\n126 |                     continue\n127 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n128 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:129:1\n    |\n128 |         return None\n129 |     \n    | ^^^^\n130 |     def _extract_birthday(self, extracted_data: Dict[str, Any], age: Optional[int]) -> 'date':\n131 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:130:49\n    |\n128 |         return None\n129 |     \n130 |     def _extract_birthday(self, extracted_data: Dict[str, Any], age: Optional[int]) -> 'date':\n    |                                                 ^^^^\n131 |         \"\"\"\n132 |         Extract or calculate birthday from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:130:70\n    |\n128 |         return None\n129 |     \n130 |     def _extract_birthday(self, extracted_data: Dict[str, Any], age: Optional[int]) -> 'date':\n    |                                                                      ^^^^^^^^^^^^^\n131 |         \"\"\"\n132 |         Extract or calculate birthday from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:133:1\n    |\n131 |         \"\"\"\n132 |         Extract or calculate birthday from form response data.\n133 |         \n    | ^^^^^^^^\n134 |         Args:\n135 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:137:1\n    |\n135 |             extracted_data: Processed form answers\n136 |             age: Extracted age if available\n137 |             \n    | ^^^^^^^^^^^^\n138 |         Returns:\n139 |             Date object for birthday (estimated if only age available)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:142:1\n    |\n140 |         \"\"\"\n141 |         from datetime import date\n142 |         \n    | ^^^^^^^^\n143 |         # Try to find explicit birthday/birthdate fields\n144 |         birthday_fields = [\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:147:1\n    |\n145 |             \"birthday\", \"birth_date\", \"date_of_birth\", \"birthdate\"\n146 |         ]\n147 |         \n    | ^^^^^^^^\n148 |         for field in birthday_fields:\n149 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:149:16\n    |\n148 |         for field in birthday_fields:\n149 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n150 |                 try:\n151 |                     # Try to parse date string\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:162:1\n    |\n160 |                 except (ValueError, TypeError):\n161 |                     continue\n162 |         \n    | ^^^^^^^^\n163 |         # If no explicit birthday but we have age, estimate birthday\n164 |         if age is not None:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:168:1\n    |\n166 |             estimated_birth_year = today.year - age\n167 |             return date(estimated_birth_year, 1, 1)  # January 1st as default\n168 |         \n    | ^^^^^^^^\n169 |         # Default fallback - use a reasonable default date\n170 |         return date(1990, 1, 1)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:171:1\n    |\n169 |         # Default fallback - use a reasonable default date\n170 |         return date(1990, 1, 1)\n171 |     \n    | ^^^^\n172 |     def _extract_dietary_preferences(self, extracted_data: Dict[str, Any]) -> Optional[list[str]]:\n173 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:172:60\n    |\n170 |         return date(1990, 1, 1)\n171 |     \n172 |     def _extract_dietary_preferences(self, extracted_data: Dict[str, Any]) -> Optional[list[str]]:\n    |                                                            ^^^^\n173 |         \"\"\"\n174 |         Extract dietary preferences from form response data.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:172:79\n    |\n170 |         return date(1990, 1, 1)\n171 |     \n172 |     def _extract_dietary_preferences(self, extracted_data: Dict[str, Any]) -> Optional[list[str]]:\n    |                                                                               ^^^^^^^^^^^^^^^^^^^\n173 |         \"\"\"\n174 |         Extract dietary preferences from form response data.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:175:1\n    |\n173 |         \"\"\"\n174 |         Extract dietary preferences from form response data.\n175 |         \n    | ^^^^^^^^\n176 |         Args:\n177 |             extracted_data: Processed form answers\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:178:1\n    |\n176 |         Args:\n177 |             extracted_data: Processed form answers\n178 |             \n    | ^^^^^^^^^^^^\n179 |         Returns:\n180 |             List of dietary preferences or None if not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:188:1\n    |\n186 |             \"multiple_choice\", \"checkboxes\"  # Fallback field types\n187 |         ]\n188 |         \n    | ^^^^^^^^\n189 |         for field in dietary_fields:\n190 |             if field in extracted_data and extracted_data[field]:\n    |\nhelp: Remove whitespace from blank line\n\nRUF019 [*] Unnecessary key check before dictionary access\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:190:16\n    |\n189 |         for field in dietary_fields:\n190 |             if field in extracted_data and extracted_data[field]:\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n191 |                 preferences = extracted_data[field]\n    |\nhelp: Replace with `dict.get`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:192:1\n    |\n190 |             if field in extracted_data and extracted_data[field]:\n191 |                 preferences = extracted_data[field]\n192 |                 \n    | ^^^^^^^^^^^^^^^^\n193 |                 # Handle different response formats\n194 |                 if isinstance(preferences, str):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:200:1\n    |\n198 |                     # Multiple preferences\n199 |                     return [str(pref).strip() for pref in preferences if pref]\n200 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n201 |         return None\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/extractors/profile_data_extractor.py:201:20\n    |\n199 |                     return [str(pref).strip() for pref in preferences if pref]\n200 |                     \n201 |         return None\n    |                    ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:3:1\n  |\n1 | \"\"\"Form response mapper service that orchestrates all extractors.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional, Tuple\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | from src.contexts.recipes_catalog.core.services.client.extractors.profile_data_extractor import ProfileDataExtractor\n  |\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:3:1\n  |\n1 | \"\"\"Form response mapper service that orchestrates all extractors.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional, Tuple\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | from src.contexts.recipes_catalog.core.services.client.extractors.profile_data_extractor import ProfileDataExtractor\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:3:1\n  |\n1 |   \"\"\"Form response mapper service that orchestrates all extractors.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Optional, Tuple\n4 | |\n5 | | from src.contexts.recipes_catalog.core.services.client.extractors.profile_data_extractor import ProfileDataExtractor\n6 | | from src.contexts.recipes_catalog.core.services.client.extractors.contact_data_extractor import ContactDataExtractor\n7 | | from src.contexts.recipes_catalog.core.services.client.extractors.address_data_extractor import AddressDataExtractor\n  | |____________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:12:1\n   |\n10 | class FormResponseMapper:\n11 |     \"\"\"Main service that orchestrates all extractors to map raw form response data to Client creation parameters.\"\"\"\n12 |     \n   | ^^^^\n13 |     def __init__(self):\n14 |         \"\"\"Initialize the form response mapper with all extractors.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:18:1\n   |\n16 |         self.contact_extractor = ContactDataExtractor()\n17 |         self.address_extractor = AddressDataExtractor()\n18 |     \n   | ^^^^\n19 |     def map_form_response_to_client_data(\n20 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:20:14\n   |\n19 |     def map_form_response_to_client_data(\n20 |         self, \n   |              ^\n21 |         form_response: Dict[str, Any], \n22 |         author_id: str\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:21:24\n   |\n19 |     def map_form_response_to_client_data(\n20 |         self, \n21 |         form_response: Dict[str, Any], \n   |                        ^^^^\n22 |         author_id: str\n23 |     ) -> Tuple[Dict[str, Any], Dict[str, str]]:\n   |\nhelp: Replace with `dict`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:21:39\n   |\n19 |     def map_form_response_to_client_data(\n20 |         self, \n21 |         form_response: Dict[str, Any], \n   |                                       ^\n22 |         author_id: str\n23 |     ) -> Tuple[Dict[str, Any], Dict[str, str]]:\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `tuple` instead of `Tuple` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:23:10\n   |\n21 |         form_response: Dict[str, Any], \n22 |         author_id: str\n23 |     ) -> Tuple[Dict[str, Any], Dict[str, str]]:\n   |          ^^^^^\n24 |         \"\"\"\n25 |         Map form response data to Client creation parameters.\n   |\nhelp: Replace with `tuple`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:23:16\n   |\n21 |         form_response: Dict[str, Any], \n22 |         author_id: str\n23 |     ) -> Tuple[Dict[str, Any], Dict[str, str]]:\n   |                ^^^^\n24 |         \"\"\"\n25 |         Map form response data to Client creation parameters.\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:23:32\n   |\n21 |         form_response: Dict[str, Any], \n22 |         author_id: str\n23 |     ) -> Tuple[Dict[str, Any], Dict[str, str]]:\n   |                                ^^^^\n24 |         \"\"\"\n25 |         Map form response data to Client creation parameters.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:26:1\n   |\n24 |         \"\"\"\n25 |         Map form response data to Client creation parameters.\n26 |         \n   | ^^^^^^^^\n27 |         Args:\n28 |             form_response: The form response data from client_onboarding context\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:30:1\n   |\n28 |             form_response: The form response data from client_onboarding context\n29 |             author_id: The ID of the user creating the client\n30 |             \n   | ^^^^^^^^^^^^\n31 |         Returns:\n32 |             Tuple of (client_creation_params, extraction_warnings)\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:35:1\n   |\n33 |             - client_creation_params: Dictionary suitable for CreateClient command\n34 |             - extraction_warnings: Dictionary of field -> warning message for partial extractions\n35 |             \n   | ^^^^^^^^^^^^\n36 |         Raises:\n37 |             ValueError: If form response data is invalid or missing required fields\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:41:1\n   |\n39 |         if not form_response:\n40 |             raise ValueError(\"Form response data cannot be empty\")\n41 |             \n   | ^^^^^^^^^^^^\n42 |         if not author_id:\n43 |             raise ValueError(\"Author ID is required\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:44:1\n   |\n42 |         if not author_id:\n43 |             raise ValueError(\"Author ID is required\")\n44 |             \n   | ^^^^^^^^^^^^\n45 |         extraction_warnings = {}\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:46:1\n   |\n45 |         extraction_warnings = {}\n46 |         \n   | ^^^^^^^^\n47 |         # Extract Profile (required)\n48 |         try:\n   |\nhelp: Remove whitespace from blank line\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:53:13\n   |\n51 |                 raise ValueError(\"Profile data is required but could not be extracted from form response\")\n52 |         except Exception as e:\n53 |             raise ValueError(f\"Failed to extract profile data: {str(e)}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n54 |         \n55 |         # Extract ContactInfo (optional)\n   |\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:53:65\n   |\n51 |                 raise ValueError(\"Profile data is required but could not be extracted from form response\")\n52 |         except Exception as e:\n53 |             raise ValueError(f\"Failed to extract profile data: {str(e)}\")\n   |                                                                 ^^^^^^\n54 |         \n55 |         # Extract ContactInfo (optional)\n   |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:54:1\n   |\n52 |         except Exception as e:\n53 |             raise ValueError(f\"Failed to extract profile data: {str(e)}\")\n54 |         \n   | ^^^^^^^^\n55 |         # Extract ContactInfo (optional)\n56 |         contact_info = None\n   |\nhelp: Remove whitespace from blank line\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:60:93\n   |\n58 |             contact_info = self.contact_extractor.extract_contact_info_from_form_response(form_response)\n59 |         except Exception as e:\n60 |             extraction_warnings[\"contact_info\"] = f\"Could not extract contact information: {str(e)}\"\n   |                                                                                             ^^^^^^\n61 |         \n62 |         # Extract Address (optional)\n   |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:61:1\n   |\n59 |         except Exception as e:\n60 |             extraction_warnings[\"contact_info\"] = f\"Could not extract contact information: {str(e)}\"\n61 |         \n   | ^^^^^^^^\n62 |         # Extract Address (optional)\n63 |         address = None\n   |\nhelp: Remove whitespace from blank line\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:67:88\n   |\n65 |             address = self.address_extractor.extract_address_from_form_response(form_response)\n66 |         except Exception as e:\n67 |             extraction_warnings[\"address\"] = f\"Could not extract address information: {str(e)}\"\n   |                                                                                        ^^^^^^\n68 |         \n69 |         # Build client creation parameters\n   |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:68:1\n   |\n66 |         except Exception as e:\n67 |             extraction_warnings[\"address\"] = f\"Could not extract address information: {str(e)}\"\n68 |         \n   | ^^^^^^^^\n69 |         # Build client creation parameters\n70 |         client_params = {\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:79:1\n   |\n77 |             \"tags\": None  # Could be enhanced later to extract tags from form responses\n78 |         }\n79 |         \n   | ^^^^^^^^\n80 |         return client_params, extraction_warnings\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:81:1\n   |\n80 |         return client_params, extraction_warnings\n81 |     \n   | ^^^^\n82 |     def preview_client_data_from_form_response(\n83 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:83:14\n   |\n82 |     def preview_client_data_from_form_response(\n83 |         self, \n   |              ^\n84 |         form_response: Dict[str, Any], \n85 |         author_id: str\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:84:24\n   |\n82 |     def preview_client_data_from_form_response(\n83 |         self, \n84 |         form_response: Dict[str, Any], \n   |                        ^^^^\n85 |         author_id: str\n86 |     ) -> Dict[str, Any]:\n   |\nhelp: Replace with `dict`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:84:39\n   |\n82 |     def preview_client_data_from_form_response(\n83 |         self, \n84 |         form_response: Dict[str, Any], \n   |                                       ^\n85 |         author_id: str\n86 |     ) -> Dict[str, Any]:\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:86:10\n   |\n84 |         form_response: Dict[str, Any], \n85 |         author_id: str\n86 |     ) -> Dict[str, Any]:\n   |          ^^^^\n87 |         \"\"\"\n88 |         Preview what client data would look like before actual creation.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:89:1\n   |\n87 |         \"\"\"\n88 |         Preview what client data would look like before actual creation.\n89 |         \n   | ^^^^^^^^\n90 |         Args:\n91 |             form_response: The form response data from client_onboarding context\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:93:1\n   |\n91 |             form_response: The form response data from client_onboarding context\n92 |             author_id: The ID of the user creating the client\n93 |             \n   | ^^^^^^^^^^^^\n94 |         Returns:\n95 |             Dictionary with preview data including extracted fields and warnings\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:96:1\n   |\n94 |         Returns:\n95 |             Dictionary with preview data including extracted fields and warnings\n96 |             \n   | ^^^^^^^^^^^^\n97 |         Raises:\n98 |             ValueError: If form response data is invalid\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:102:1\n    |\n100 |         try:\n101 |             client_params, warnings = self.map_form_response_to_client_data(form_response, author_id)\n102 |             \n    | ^^^^^^^^^^^^\n103 |             return {\n104 |                 \"preview\": {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:139:1\n    |\n137 |                 \"required_fields_present\": False,\n138 |             }\n139 |     \n    | ^^^^\n140 |     def validate_form_response_completeness(self, form_response: Dict[str, Any]) -> Dict[str, Any]:\n141 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:140:66\n    |\n138 |             }\n139 |     \n140 |     def validate_form_response_completeness(self, form_response: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                                  ^^^^\n141 |         \"\"\"\n142 |         Validate completeness of form response for client creation.\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:140:85\n    |\n138 |             }\n139 |     \n140 |     def validate_form_response_completeness(self, form_response: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                                                     ^^^^\n141 |         \"\"\"\n142 |         Validate completeness of form response for client creation.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:143:1\n    |\n141 |         \"\"\"\n142 |         Validate completeness of form response for client creation.\n143 |         \n    | ^^^^^^^^\n144 |         Args:\n145 |             form_response: The form response data to validate\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:146:1\n    |\n144 |         Args:\n145 |             form_response: The form response data to validate\n146 |             \n    | ^^^^^^^^^^^^\n147 |         Returns:\n148 |             Dictionary with validation results and completeness score\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:158:1\n    |\n156 |                 \"validation_errors\": [\"Form response data is empty\"]\n157 |             }\n158 |             \n    | ^^^^^^^^^^^^\n159 |         missing_fields = []\n160 |         extractable_fields = []\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:162:1\n    |\n160 |         extractable_fields = []\n161 |         validation_errors = []\n162 |         \n    | ^^^^^^^^\n163 |         # Check Profile extraction (required)\n164 |         try:\n    |\nhelp: Remove whitespace from blank line\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:172:68\n    |\n170 |         except Exception as e:\n171 |             missing_fields.append(\"profile\")\n172 |             validation_errors.append(f\"Profile extraction failed: {str(e)}\")\n    |                                                                    ^^^^^^\n173 |         \n174 |         # Check ContactInfo extraction (optional but valuable)\n    |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:173:1\n    |\n171 |             missing_fields.append(\"profile\")\n172 |             validation_errors.append(f\"Profile extraction failed: {str(e)}\")\n173 |         \n    | ^^^^^^^^\n174 |         # Check ContactInfo extraction (optional but valuable)\n175 |         try:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:183:1\n    |\n181 |         except Exception:\n182 |             missing_fields.append(\"contact_info\")\n183 |         \n    | ^^^^^^^^\n184 |         # Check Address extraction (optional but valuable)\n185 |         try:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:193:1\n    |\n191 |         except Exception:\n192 |             missing_fields.append(\"address\")\n193 |         \n    | ^^^^^^^^\n194 |         # Calculate completeness score\n195 |         total_possible_fields = 3  # profile, contact_info, address\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:197:1\n    |\n195 |         total_possible_fields = 3  # profile, contact_info, address\n196 |         extractable_count = len(extractable_fields)\n197 |         \n    | ^^^^^^^^\n198 |         # Base score on extractable fields vs total, with required field weight\n199 |         if \"profile\" in extractable_fields:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:203:1\n    |\n201 |         else:\n202 |             completeness_score = 0.0\n203 |         \n    | ^^^^^^^^\n204 |         is_complete = \"profile\" in extractable_fields and len(validation_errors) == 0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:205:1\n    |\n204 |         is_complete = \"profile\" in extractable_fields and len(validation_errors) == 0\n205 |         \n    | ^^^^^^^^\n206 |         return {\n207 |             \"is_complete\": is_complete,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:215:1\n    |\n213 |             \"optional_fields_available\": extractable_count - (1 if \"profile\" in extractable_fields else 0)\n214 |         }\n215 |     \n    | ^^^^\n216 |     def _generate_extraction_notes(self, form_response: Dict[str, Any], warnings: Dict[str, str]) -> Optional[str]:\n217 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:216:57\n    |\n214 |         }\n215 |     \n216 |     def _generate_extraction_notes(self, form_response: Dict[str, Any], warnings: Dict[str, str]) -> Optional[str]:\n    |                                                         ^^^^\n217 |         \"\"\"\n218 |         Generate notes about the extraction process for audit purposes.\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:216:83\n    |\n214 |         }\n215 |     \n216 |     def _generate_extraction_notes(self, form_response: Dict[str, Any], warnings: Dict[str, str]) -> Optional[str]:\n    |                                                                                   ^^^^\n217 |         \"\"\"\n218 |         Generate notes about the extraction process for audit purposes.\n    |\nhelp: Replace with `dict`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:216:102\n    |\n214 |         }\n215 |     \n216 |     def _generate_extraction_notes(self, form_response: Dict[str, Any], warnings: Dict[str, str]) -> Optional[str]:\n    |                                                                                                      ^^^^^^^^^^^^^\n217 |         \"\"\"\n218 |         Generate notes about the extraction process for audit purposes.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:219:1\n    |\n217 |         \"\"\"\n218 |         Generate notes about the extraction process for audit purposes.\n219 |         \n    | ^^^^^^^^\n220 |         Args:\n221 |             form_response: The original form response data\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:223:1\n    |\n221 |             form_response: The original form response data\n222 |             warnings: Dictionary of extraction warnings\n223 |             \n    | ^^^^^^^^^^^^\n224 |         Returns:\n225 |             Notes string or None if no notable information\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:228:1\n    |\n226 |         \"\"\"\n227 |         notes_parts = []\n228 |         \n    | ^^^^^^^^\n229 |         # Add form metadata\n230 |         form_id = form_response.get(\"form_id\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:236:1\n    |\n234 |         if response_id:\n235 |             notes_parts.append(f\"Response ID: {response_id}\")\n236 |         \n    | ^^^^^^^^\n237 |         # Add warnings if any\n238 |         if warnings:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:242:1\n    |\n240 |             for field, warning in warnings.items():\n241 |                 notes_parts.append(f\"- {field}: {warning}\")\n242 |         \n    | ^^^^^^^^\n243 |         return \"; \".join(notes_parts) if notes_parts else None\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/form_response_mapper.py:243:63\n    |\n241 |                 notes_parts.append(f\"- {field}: {warning}\")\n242 |         \n243 |         return \"; \".join(notes_parts) if notes_parts else None\n    |                                                               ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:3:1\n  |\n1 | \"\"\"Form response preview service for client data transfer workflows.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional, List\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from datetime import datetime\n  |\n\nUP035 `typing.List` is deprecated, use `list` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:3:1\n  |\n1 | \"\"\"Form response preview service for client data transfer workflows.\"\"\"\n2 |\n3 | from typing import Dict, Any, Optional, List\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from datetime import datetime\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:3:1\n  |\n1 |   \"\"\"Form response preview service for client data transfer workflows.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Optional, List\n4 | | from datetime import datetime\n5 | |\n6 | | from src.contexts.recipes_catalog.core.services.client.form_response_mapper import FormResponseMapper\n7 | | from src.contexts.recipes_catalog.core.adapters.external_providers.client_onboarding.client_onboarding_provider import ClientOnboardingProvider\n  | |_______________________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:12:1\n   |\n10 | class FormResponsePreviewService:\n11 |     \"\"\"Preview what client data would look like before transfer.\"\"\"\n12 |     \n   | ^^^^\n13 |     def __init__(self):\n14 |         \"\"\"Initialize the form response preview service.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:17:1\n   |\n15 |         self.form_mapper = FormResponseMapper()\n16 |         self.onboarding_provider = ClientOnboardingProvider()\n17 |     \n   | ^^^^\n18 |     async def preview_form_response_for_client_creation(\n19 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:19:14\n   |\n18 |     async def preview_form_response_for_client_creation(\n19 |         self, \n   |              ^\n20 |         response_id: str, \n21 |         author_id: str\n   |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:20:26\n   |\n18 |     async def preview_form_response_for_client_creation(\n19 |         self, \n20 |         response_id: str, \n   |                          ^\n21 |         author_id: str\n22 |     ) -> Dict[str, Any]:\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:22:10\n   |\n20 |         response_id: str, \n21 |         author_id: str\n22 |     ) -> Dict[str, Any]:\n   |          ^^^^\n23 |         \"\"\"\n24 |         Preview what client data would look like for a specific form response.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:25:1\n   |\n23 |         \"\"\"\n24 |         Preview what client data would look like for a specific form response.\n25 |         \n   | ^^^^^^^^\n26 |         Args:\n27 |             response_id: The TypeForm response ID\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:29:1\n   |\n27 |             response_id: The TypeForm response ID\n28 |             author_id: The ID of the user who would create the client\n29 |             \n   | ^^^^^^^^^^^^\n30 |         Returns:\n31 |             Dictionary with preview data and metadata\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:32:1\n   |\n30 |         Returns:\n31 |             Dictionary with preview data and metadata\n32 |             \n   | ^^^^^^^^^^^^\n33 |         Raises:\n34 |             ValueError: If response not found or invalid parameters\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:40:1\n   |\n38 |         if not author_id:\n39 |             raise ValueError(\"Author ID is required\")\n40 |             \n   | ^^^^^^^^^^^^\n41 |         # Get form response data from client_onboarding context\n42 |         try:\n   |\nhelp: Remove whitespace from blank line\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:45:13\n   |\n43 |             form_response_data = await self.onboarding_provider.get_form_response(response_id)\n44 |         except Exception as e:\n45 |             raise ValueError(f\"Failed to retrieve form response {response_id}: {str(e)}\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n46 |             \n47 |         if not form_response_data or not form_response_data.get(\"success\"):\n   |\n\nRUF010 [*] Use explicit conversion flag\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:45:81\n   |\n43 |             form_response_data = await self.onboarding_provider.get_form_response(response_id)\n44 |         except Exception as e:\n45 |             raise ValueError(f\"Failed to retrieve form response {response_id}: {str(e)}\")\n   |                                                                                 ^^^^^^\n46 |             \n47 |         if not form_response_data or not form_response_data.get(\"success\"):\n   |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:46:1\n   |\n44 |         except Exception as e:\n45 |             raise ValueError(f\"Failed to retrieve form response {response_id}: {str(e)}\")\n46 |             \n   | ^^^^^^^^^^^^\n47 |         if not form_response_data or not form_response_data.get(\"success\"):\n48 |             raise ValueError(f\"Form response {response_id} not found or inaccessible\")\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:49:1\n   |\n47 |         if not form_response_data or not form_response_data.get(\"success\"):\n48 |             raise ValueError(f\"Form response {response_id} not found or inaccessible\")\n49 |             \n   | ^^^^^^^^^^^^\n50 |         response_data = form_response_data.get(\"response\")\n51 |         if not response_data:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:53:1\n   |\n51 |         if not response_data:\n52 |             raise ValueError(f\"No response data found for {response_id}\")\n53 |         \n   | ^^^^^^^^\n54 |         # Generate preview using form response mapper\n55 |         preview_result = self.form_mapper.preview_client_data_from_form_response(response_data, author_id)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:56:1\n   |\n54 |         # Generate preview using form response mapper\n55 |         preview_result = self.form_mapper.preview_client_data_from_form_response(response_data, author_id)\n56 |         \n   | ^^^^^^^^\n57 |         # Add metadata and frontend-friendly information\n58 |         enhanced_preview = {\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:75:1\n   |\n73 |             }\n74 |         }\n75 |         \n   | ^^^^^^^^\n76 |         return enhanced_preview\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:77:1\n   |\n76 |         return enhanced_preview\n77 |     \n   | ^^^^\n78 |     async def preview_multiple_form_responses(\n79 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:79:14\n   |\n78 |     async def preview_multiple_form_responses(\n79 |         self, \n   |              ^\n80 |         response_ids: List[str], \n81 |         author_id: str\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `list` instead of `List` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:80:23\n   |\n78 |     async def preview_multiple_form_responses(\n79 |         self, \n80 |         response_ids: List[str], \n   |                       ^^^^\n81 |         author_id: str\n82 |     ) -> Dict[str, Any]:\n   |\nhelp: Replace with `list`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:80:33\n   |\n78 |     async def preview_multiple_form_responses(\n79 |         self, \n80 |         response_ids: List[str], \n   |                                 ^\n81 |         author_id: str\n82 |     ) -> Dict[str, Any]:\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:82:10\n   |\n80 |         response_ids: List[str], \n81 |         author_id: str\n82 |     ) -> Dict[str, Any]:\n   |          ^^^^\n83 |         \"\"\"\n84 |         Preview multiple form responses for batch client creation assessment.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:85:1\n   |\n83 |         \"\"\"\n84 |         Preview multiple form responses for batch client creation assessment.\n85 |         \n   | ^^^^^^^^\n86 |         Args:\n87 |             response_ids: List of TypeForm response IDs\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:89:1\n   |\n87 |             response_ids: List of TypeForm response IDs\n88 |             author_id: The ID of the user who would create the clients\n89 |             \n   | ^^^^^^^^^^^^\n90 |         Returns:\n91 |             Dictionary with previews for all responses and batch summary\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:92:1\n   |\n90 |         Returns:\n91 |             Dictionary with previews for all responses and batch summary\n92 |             \n   | ^^^^^^^^^^^^\n93 |         Raises:\n94 |             ValueError: If invalid parameters\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:102:1\n    |\n100 |         if not author_id:\n101 |             raise ValueError(\"Author ID is required\")\n102 |             \n    | ^^^^^^^^^^^^\n103 |         previews = {}\n104 |         batch_summary = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:113:1\n    |\n111 |             \"batch_recommendations\": []\n112 |         }\n113 |         \n    | ^^^^^^^^\n114 |         quality_scores = []\n115 |         all_missing_fields = []\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:116:1\n    |\n114 |         quality_scores = []\n115 |         all_missing_fields = []\n116 |         \n    | ^^^^^^^^\n117 |         for response_id in response_ids:\n118 |             try:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:121:1\n    |\n119 |                 preview = await self.preview_form_response_for_client_creation(response_id, author_id)\n120 |                 previews[response_id] = preview\n121 |                 \n    | ^^^^^^^^^^^^^^^^\n122 |                 # Update batch summary\n123 |                 if preview.get(\"client_creation_readiness\", {}).get(\"can_create_client\", False):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:127:1\n    |\n125 |                 elif preview.get(\"extraction_success\", False):\n126 |                     batch_summary[\"partial_data\"] += 1\n127 |                     \n    | ^^^^^^^^^^^^^^^^^^^^\n128 |                 quality_score = preview.get(\"client_creation_readiness\", {}).get(\"data_quality_score\", 0)\n129 |                 quality_scores.append(quality_score)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:130:1\n    |\n128 |                 quality_score = preview.get(\"client_creation_readiness\", {}).get(\"data_quality_score\", 0)\n129 |                 quality_scores.append(quality_score)\n130 |                 \n    | ^^^^^^^^^^^^^^^^\n131 |                 missing_fields = preview.get(\"client_creation_readiness\", {}).get(\"missing_required_fields\", [])\n132 |                 all_missing_fields.extend(missing_fields)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:133:1\n    |\n131 |                 missing_fields = preview.get(\"client_creation_readiness\", {}).get(\"missing_required_fields\", [])\n132 |                 all_missing_fields.extend(missing_fields)\n133 |                 \n    | ^^^^^^^^^^^^^^^^\n134 |             except Exception as e:\n135 |                 previews[response_id] = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:141:1\n    |\n139 |                 }\n140 |                 batch_summary[\"failed_previews\"] += 1\n141 |         \n    | ^^^^^^^^\n142 |         # Calculate batch statistics\n143 |         if quality_scores:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:145:1\n    |\n143 |         if quality_scores:\n144 |             batch_summary[\"average_quality_score\"] = sum(quality_scores) / len(quality_scores)\n145 |             \n    | ^^^^^^^^^^^^\n146 |         # Count common missing fields\n147 |         if all_missing_fields:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:152:1\n    |\n150 |                 field_counts[field] = field_counts.get(field, 0) + 1\n151 |             batch_summary[\"common_missing_fields\"] = field_counts\n152 |             \n    | ^^^^^^^^^^^^\n153 |         # Generate batch recommendations\n154 |         batch_summary[\"batch_recommendations\"] = self._generate_batch_recommendations(batch_summary)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:155:1\n    |\n153 |         # Generate batch recommendations\n154 |         batch_summary[\"batch_recommendations\"] = self._generate_batch_recommendations(batch_summary)\n155 |         \n    | ^^^^^^^^\n156 |         return {\n157 |             \"previews\": previews,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:161:1\n    |\n159 |             \"generated_at\": datetime.now().isoformat()\n160 |         }\n161 |     \n    | ^^^^\n162 |     async def get_form_responses_for_client_selection(\n163 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:163:14\n    |\n162 |     async def get_form_responses_for_client_selection(\n163 |         self, \n    |              ^\n164 |         author_id: str,\n165 |         form_id: Optional[str] = None,\n    |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:165:18\n    |\n163 |         self, \n164 |         author_id: str,\n165 |         form_id: Optional[str] = None,\n    |                  ^^^^^^^^^^^^^\n166 |         limit: int = 20,\n167 |         offset: int = 0,\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:169:10\n    |\n167 |         offset: int = 0,\n168 |         include_preview: bool = False\n169 |     ) -> Dict[str, Any]:\n    |          ^^^^\n170 |         \"\"\"\n171 |         Get form responses suitable for client creation with optional previews.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:172:1\n    |\n170 |         \"\"\"\n171 |         Get form responses suitable for client creation with optional previews.\n172 |         \n    | ^^^^^^^^\n173 |         Args:\n174 |             author_id: The ID of the user requesting the responses\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:179:1\n    |\n177 |             offset: Offset for pagination\n178 |             include_preview: Whether to include client data previews\n179 |             \n    | ^^^^^^^^^^^^\n180 |         Returns:\n181 |             Dictionary with form responses and metadata\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:184:64\n    |\n182 |         \"\"\"\n183 |         try:\n184 |             # Get form responses from client_onboarding context  \n    |                                                                ^^\n185 |             form_id_int = int(form_id) if form_id else None\n186 |             responses = await self.onboarding_provider.get_form_responses(\n    |\nhelp: Remove trailing whitespace\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:191:1\n    |\n189 |                 offset=offset\n190 |             )\n191 |             \n    | ^^^^^^^^^^^^\n192 |             if not responses:\n193 |                 return {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:199:1\n    |\n197 |                     \"error\": \"No form responses found\"\n198 |                 }\n199 |             \n    | ^^^^^^^^^^^^\n200 |             # Enhance responses with client creation readiness info\n201 |             enhanced_responses = []\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:211:1\n    |\n209 |                     }\n210 |                 }\n211 |                 \n    | ^^^^^^^^^^^^^^^^\n212 |                 # Add preview if requested\n213 |                 if include_preview:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:228:1\n    |\n226 |                         # Skip preview on error, keep basic response data\n227 |                         pass\n228 |                 \n    | ^^^^^^^^^^^^^^^^\n229 |                 enhanced_responses.append(enhanced_response)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:230:1\n    |\n229 |                 enhanced_responses.append(enhanced_response)\n230 |             \n    | ^^^^^^^^^^^^\n231 |             return {\n232 |                 \"success\": True,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:247:1\n    |\n245 |                 }\n246 |             }\n247 |             \n    | ^^^^^^^^^^^^\n248 |         except Exception as e:\n249 |             return {\n    |\nhelp: Remove whitespace from blank line\n\nRUF010 [*] Use explicit conversion flag\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:253:64\n    |\n251 |                 \"responses\": [],\n252 |                 \"total\": 0,\n253 |                 \"error\": f\"Failed to retrieve form responses: {str(e)}\"\n    |                                                                ^^^^^^\n254 |             }\n    |\nhelp: Replace with conversion flag\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:255:1\n    |\n253 |                 \"error\": f\"Failed to retrieve form responses: {str(e)}\"\n254 |             }\n255 |     \n    | ^^^^\n256 |     def _identify_missing_required_fields(self, preview_result: Dict[str, Any]) -> List[str]:\n257 |         \"\"\"Identify which required fields are missing from the preview.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:256:65\n    |\n254 |             }\n255 |     \n256 |     def _identify_missing_required_fields(self, preview_result: Dict[str, Any]) -> List[str]:\n    |                                                                 ^^^^\n257 |         \"\"\"Identify which required fields are missing from the preview.\"\"\"\n258 |         missing_fields = []\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:256:84\n    |\n254 |             }\n255 |     \n256 |     def _identify_missing_required_fields(self, preview_result: Dict[str, Any]) -> List[str]:\n    |                                                                                    ^^^^\n257 |         \"\"\"Identify which required fields are missing from the preview.\"\"\"\n258 |         missing_fields = []\n    |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:259:1\n    |\n257 |         \"\"\"Identify which required fields are missing from the preview.\"\"\"\n258 |         missing_fields = []\n259 |         \n    | ^^^^^^^^\n260 |         preview_data = preview_result.get(\"preview\", {})\n261 |         if not preview_data:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:263:1\n    |\n261 |         if not preview_data:\n262 |             return [\"all_fields\"]\n263 |             \n    | ^^^^^^^^^^^^\n264 |         # Check required profile fields\n265 |         profile = preview_data.get(\"profile\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:268:1\n    |\n266 |         if not profile or not profile.get(\"name\"):\n267 |             missing_fields.append(\"profile.name\")\n268 |             \n    | ^^^^^^^^^^^^\n269 |         return missing_fields\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:270:1\n    |\n269 |         return missing_fields\n270 |     \n    | ^^^^\n271 |     def _calculate_data_quality_score(self, preview_result: Dict[str, Any]) -> float:\n272 |         \"\"\"Calculate a data quality score (0-100) based on available fields.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:271:61\n    |\n269 |         return missing_fields\n270 |     \n271 |     def _calculate_data_quality_score(self, preview_result: Dict[str, Any]) -> float:\n    |                                                             ^^^^\n272 |         \"\"\"Calculate a data quality score (0-100) based on available fields.\"\"\"\n273 |         if not preview_result.get(\"extraction_success\", False):\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:275:1\n    |\n273 |         if not preview_result.get(\"extraction_success\", False):\n274 |             return 0.0\n275 |             \n    | ^^^^^^^^^^^^\n276 |         preview_data = preview_result.get(\"preview\", {})\n277 |         if not preview_data:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:279:1\n    |\n277 |         if not preview_data:\n278 |             return 0.0\n279 |             \n    | ^^^^^^^^^^^^\n280 |         score = 0.0\n281 |         max_score = 100.0\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:282:1\n    |\n280 |         score = 0.0\n281 |         max_score = 100.0\n282 |         \n    | ^^^^^^^^\n283 |         # Profile scoring (60% of total score)\n284 |         profile = preview_data.get(\"profile\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:292:1\n    |\n290 |             if profile.get(\"dietary_preferences\"):\n291 |                 score += 10.0\n292 |                 \n    | ^^^^^^^^^^^^^^^^\n293 |         # Contact info scoring (25% of total score)\n294 |         contact_info = preview_data.get(\"contact_info\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:300:1\n    |\n298 |             if contact_info.get(\"phone\"):\n299 |                 score += 10.0\n300 |                 \n    | ^^^^^^^^^^^^^^^^\n301 |         # Address scoring (15% of total score)\n302 |         address = preview_data.get(\"address\")\n    |\nhelp: Remove whitespace from blank line\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:303:9\n    |\n301 |           # Address scoring (15% of total score)\n302 |           address = preview_data.get(\"address\")\n303 | /         if address:\n304 | |             if address.get(\"street\") and address.get(\"city\"):\n    | |_____________________________________________________________^\n305 |                   score += 15.0\n    |\nhelp: Combine `if` statements using `and`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:306:1\n    |\n304 |             if address.get(\"street\") and address.get(\"city\"):\n305 |                 score += 15.0\n306 |                 \n    | ^^^^^^^^^^^^^^^^\n307 |         return min(score, max_score)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:308:1\n    |\n307 |         return min(score, max_score)\n308 |     \n    | ^^^^\n309 |     def _generate_recommendations(self, preview_result: Dict[str, Any]) -> List[str]:\n310 |         \"\"\"Generate recommendations for improving client data quality.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:309:57\n    |\n307 |         return min(score, max_score)\n308 |     \n309 |     def _generate_recommendations(self, preview_result: Dict[str, Any]) -> List[str]:\n    |                                                         ^^^^\n310 |         \"\"\"Generate recommendations for improving client data quality.\"\"\"\n311 |         recommendations = []\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:309:76\n    |\n307 |         return min(score, max_score)\n308 |     \n309 |     def _generate_recommendations(self, preview_result: Dict[str, Any]) -> List[str]:\n    |                                                                            ^^^^\n310 |         \"\"\"Generate recommendations for improving client data quality.\"\"\"\n311 |         recommendations = []\n    |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:312:1\n    |\n310 |         \"\"\"Generate recommendations for improving client data quality.\"\"\"\n311 |         recommendations = []\n312 |         \n    | ^^^^^^^^\n313 |         if not preview_result.get(\"extraction_success\", False):\n314 |             recommendations.append(\"Review form response data for extraction errors\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:316:1\n    |\n314 |             recommendations.append(\"Review form response data for extraction errors\")\n315 |             return recommendations\n316 |             \n    | ^^^^^^^^^^^^\n317 |         preview_data = preview_result.get(\"preview\", {})\n318 |         warnings = preview_result.get(\"warnings\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:319:1\n    |\n317 |         preview_data = preview_result.get(\"preview\", {})\n318 |         warnings = preview_result.get(\"warnings\", {})\n319 |         \n    | ^^^^^^^^\n320 |         # Profile recommendations\n321 |         profile = preview_data.get(\"profile\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:326:1\n    |\n324 |         if profile and not profile.get(\"age\"):\n325 |             recommendations.append(\"Consider adding age information for better client profiling\")\n326 |             \n    | ^^^^^^^^^^^^\n327 |         # Contact recommendations\n328 |         if not preview_data.get(\"contact_info\"):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:330:1\n    |\n328 |         if not preview_data.get(\"contact_info\"):\n329 |             recommendations.append(\"Add contact information (email or phone) for client communication\")\n330 |             \n    | ^^^^^^^^^^^^\n331 |         # Address recommendations\n332 |         if not preview_data.get(\"address\"):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:334:1\n    |\n332 |         if not preview_data.get(\"address\"):\n333 |             recommendations.append(\"Consider adding address information for delivery and location services\")\n334 |             \n    | ^^^^^^^^^^^^\n335 |         # Warning-based recommendations\n336 |         if warnings:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:338:1\n    |\n336 |         if warnings:\n337 |             recommendations.append(\"Review extraction warnings and consider manual data entry for missing fields\")\n338 |             \n    | ^^^^^^^^^^^^\n339 |         return recommendations\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:340:1\n    |\n339 |         return recommendations\n340 |     \n    | ^^^^\n341 |     def _generate_batch_recommendations(self, batch_summary: Dict[str, Any]) -> List[str]:\n342 |         \"\"\"Generate recommendations for batch processing.\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:341:62\n    |\n339 |         return recommendations\n340 |     \n341 |     def _generate_batch_recommendations(self, batch_summary: Dict[str, Any]) -> List[str]:\n    |                                                              ^^^^\n342 |         \"\"\"Generate recommendations for batch processing.\"\"\"\n343 |         recommendations = []\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `list` instead of `List` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:341:81\n    |\n339 |         return recommendations\n340 |     \n341 |     def _generate_batch_recommendations(self, batch_summary: Dict[str, Any]) -> List[str]:\n    |                                                                                 ^^^^\n342 |         \"\"\"Generate recommendations for batch processing.\"\"\"\n343 |         recommendations = []\n    |\nhelp: Replace with `list`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:344:1\n    |\n342 |         \"\"\"Generate recommendations for batch processing.\"\"\"\n343 |         recommendations = []\n344 |         \n    | ^^^^^^^^\n345 |         total = batch_summary[\"total_responses\"]\n346 |         ready = batch_summary[\"ready_for_creation\"]\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:349:1\n    |\n347 |         partial = batch_summary[\"partial_data\"]\n348 |         failed = batch_summary[\"failed_previews\"]\n349 |         \n    | ^^^^^^^^\n350 |         if ready == total:\n351 |             recommendations.append(\"All responses are ready for automatic client creation\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:356:1\n    |\n354 |         else:\n355 |             recommendations.append(\"No responses ready for automatic creation - manual review required\")\n356 |             \n    | ^^^^^^^^^^^^\n357 |         # Common field recommendations\n358 |         common_missing = batch_summary.get(\"common_missing_fields\", {})\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:362:1\n    |\n360 |             most_common = max(common_missing.items(), key=lambda x: x[1])\n361 |             recommendations.append(f\"Most common missing field: {most_common[0]} (missing in {most_common[1]} responses)\")\n362 |             \n    | ^^^^^^^^^^^^\n363 |         avg_quality = batch_summary.get(\"average_quality_score\", 0)\n364 |         if avg_quality < 50:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:366:1\n    |\n364 |         if avg_quality < 50:\n365 |             recommendations.append(\"Consider improving form design to capture more complete client data\")\n366 |             \n    | ^^^^^^^^^^^^\n367 |         return recommendations\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/form_response_preview.py:367:31\n    |\n365 |             recommendations.append(\"Consider improving form design to capture more complete client data\")\n366 |             \n367 |         return recommendations\n    |                               ^\n    |\nhelp: Add trailing newline\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:3:1\n  |\n1 | \"\"\"Form response transfer service for updating existing clients with form data.\"\"\"\n2 |\n3 | from typing import Dict, Any, Tuple, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from src.contexts.recipes_catalog.core.domain.client.commands.update_client import UpdateClient\n5 | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  |\n\nUP035 `typing.Tuple` is deprecated, use `tuple` instead\n --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:3:1\n  |\n1 | \"\"\"Form response transfer service for updating existing clients with form data.\"\"\"\n2 |\n3 | from typing import Dict, Any, Tuple, Optional\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 | from src.contexts.recipes_catalog.core.domain.client.commands.update_client import UpdateClient\n5 | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  |\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:3:1\n  |\n1 |   \"\"\"Form response transfer service for updating existing clients with form data.\"\"\"\n2 |\n3 | / from typing import Dict, Any, Tuple, Optional\n4 | | from src.contexts.recipes_catalog.core.domain.client.commands.update_client import UpdateClient\n5 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n6 | | from src.contexts.recipes_catalog.core.services.client.command_handlers.update_client import update_client_handler\n7 | | from src.contexts.recipes_catalog.core.services.client.form_response_mapper import FormResponseMapper\n8 | | from src.contexts.recipes_catalog.core.adapters.external_providers.client_onboarding.client_onboarding_provider import ClientOnboardingProvider\n  | |_______________________________________________________________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:14:1\n   |\n12 |     \"\"\"\n13 |     Service for transferring form response data to existing clients.\n14 |     \n   | ^^^^\n15 |     Provides methods to transfer TypeForm response data to existing clients\n16 |     through the update_client workflow, supporting both manual and automated\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:19:1\n   |\n17 |     transfer modes with preview capabilities.\n18 |     \"\"\"\n19 |     \n   | ^^^^\n20 |     def __init__(self):\n21 |         \"\"\"Initialize the form response transfer service.\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:23:1\n   |\n21 |         \"\"\"Initialize the form response transfer service.\"\"\"\n22 |         self.form_mapper = FormResponseMapper()\n23 |     \n   | ^^^^\n24 |     async def transfer_form_response_to_client(\n25 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:25:14\n   |\n24 |     async def transfer_form_response_to_client(\n25 |         self, \n   |              ^\n26 |         client_id: str,\n27 |         form_response_id: str,\n   |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:30:25\n   |\n28 |         uow: UnitOfWork,\n29 |         preserve_existing: bool = True,\n30 |         custom_updates: Optional[Dict[str, Any]] = None\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n31 |     ) -> Dict[str, Any]:\n32 |         \"\"\"\n   |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:30:34\n   |\n28 |         uow: UnitOfWork,\n29 |         preserve_existing: bool = True,\n30 |         custom_updates: Optional[Dict[str, Any]] = None\n   |                                  ^^^^\n31 |     ) -> Dict[str, Any]:\n32 |         \"\"\"\n   |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:31:10\n   |\n29 |         preserve_existing: bool = True,\n30 |         custom_updates: Optional[Dict[str, Any]] = None\n31 |     ) -> Dict[str, Any]:\n   |          ^^^^\n32 |         \"\"\"\n33 |         Transfer form response data to an existing client.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:34:1\n   |\n32 |         \"\"\"\n33 |         Transfer form response data to an existing client.\n34 |         \n   | ^^^^^^^^\n35 |         Args:\n36 |             client_id: ID of the client to update\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:41:1\n   |\n39 |             preserve_existing: If True, only update fields that are None/empty\n40 |             custom_updates: Additional updates to apply alongside form data\n41 |             \n   | ^^^^^^^^^^^^\n42 |         Returns:\n43 |             Dictionary with transfer results and warnings\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:44:1\n   |\n42 |         Returns:\n43 |             Dictionary with transfer results and warnings\n44 |             \n   | ^^^^^^^^^^^^\n45 |         Raises:\n46 |             Exception: If client not found, form response not found, or transfer fails\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:50:1\n   |\n48 |         # Build update command with form response integration\n49 |         updates = {\"form_response_id\": form_response_id}\n50 |         \n   | ^^^^^^^^\n51 |         # Add custom updates if provided\n52 |         if custom_updates:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:54:1\n   |\n52 |         if custom_updates:\n53 |             updates.update(custom_updates)\n54 |         \n   | ^^^^^^^^\n55 |         # Create and execute update command\n56 |         update_cmd = UpdateClient(client_id=client_id, updates=updates)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:57:1\n   |\n55 |         # Create and execute update command\n56 |         update_cmd = UpdateClient(client_id=client_id, updates=updates)\n57 |         \n   | ^^^^^^^^\n58 |         try:\n59 |             await update_client_handler(update_cmd, uow)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:60:1\n   |\n58 |         try:\n59 |             await update_client_handler(update_cmd, uow)\n60 |             \n   | ^^^^^^^^^^^^\n61 |             # Get transfer results for return value\n62 |             async with uow:\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:64:1\n   |\n62 |             async with uow:\n63 |                 updated_client = await uow.clients.get(client_id)\n64 |                 \n   | ^^^^^^^^^^^^^^^^\n65 |                 return {\n66 |                     \"status\": \"success\",\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:79:1\n   |\n77 |                     \"custom_updates_applied\": list(custom_updates.keys()) if custom_updates else []\n78 |                 }\n79 |                 \n   | ^^^^^^^^^^^^^^^^\n80 |         except Exception as e:\n81 |             return {\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:88:1\n   |\n86 |                 \"error_type\": type(e).__name__\n87 |             }\n88 |     \n   | ^^^^\n89 |     async def preview_form_response_transfer(\n90 |         self, \n   |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:90:14\n   |\n89 |     async def preview_form_response_transfer(\n90 |         self, \n   |              ^\n91 |         client_id: str,\n92 |         form_response_id: str,\n   |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:94:10\n   |\n92 |         form_response_id: str,\n93 |         uow: UnitOfWork\n94 |     ) -> Dict[str, Any]:\n   |          ^^^^\n95 |         \"\"\"\n96 |         Preview what would happen if form response data is transferred to a client.\n   |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n  --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:97:1\n   |\n95 |         \"\"\"\n96 |         Preview what would happen if form response data is transferred to a client.\n97 |         \n   | ^^^^^^^^\n98 |         Args:\n99 |             client_id: ID of the client to preview update for\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:102:1\n    |\n100 |             form_response_id: TypeForm response ID to preview\n101 |             uow: Unit of work for database operations\n102 |             \n    | ^^^^^^^^^^^^\n103 |         Returns:\n104 |             Dictionary with preview data showing before/after comparison\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:105:1\n    |\n103 |         Returns:\n104 |             Dictionary with preview data showing before/after comparison\n105 |             \n    | ^^^^^^^^^^^^\n106 |         Raises:\n107 |             Exception: If client not found or form response not found\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:113:1\n    |\n111 |             async with uow:\n112 |                 current_client = await uow.clients.get(client_id)\n113 |                 \n    | ^^^^^^^^^^^^^^^^\n114 |             # Get form response data\n115 |             form_response_data = await ClientOnboardingProvider.get_form_response(form_response_id)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:116:1\n    |\n114 |             # Get form response data\n115 |             form_response_data = await ClientOnboardingProvider.get_form_response(form_response_id)\n116 |             \n    | ^^^^^^^^^^^^\n117 |             # Map form response to client data\n118 |             client_params, extraction_warnings = self.form_mapper.map_form_response_to_client_data(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:122:1\n    |\n120 |                 author_id=current_client.author_id\n121 |             )\n122 |             \n    | ^^^^^^^^^^^^\n123 |             # Build preview comparison\n124 |             preview = {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:175:1\n    |\n173 |                 \"changes_summary\": self._analyze_changes(current_client, client_params)\n174 |             }\n175 |             \n    | ^^^^^^^^^^^^\n176 |             return preview\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:177:1\n    |\n176 |             return preview\n177 |             \n    | ^^^^^^^^^^^^\n178 |         except Exception as e:\n179 |             return {\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:186:1\n    |\n184 |                 \"error_type\": type(e).__name__\n185 |             }\n186 |     \n    | ^^^^\n187 |     async def batch_transfer_form_responses(\n188 |         self,\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:189:25\n    |\n187 |     async def batch_transfer_form_responses(\n188 |         self,\n189 |         transfers: list[Dict[str, Any]],\n    |                         ^^^^\n190 |         uow: UnitOfWork\n191 |     ) -> Dict[str, Any]:\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:191:10\n    |\n189 |         transfers: list[Dict[str, Any]],\n190 |         uow: UnitOfWork\n191 |     ) -> Dict[str, Any]:\n    |          ^^^^\n192 |         \"\"\"\n193 |         Transfer multiple form responses to multiple clients in batch.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:194:1\n    |\n192 |         \"\"\"\n193 |         Transfer multiple form responses to multiple clients in batch.\n194 |         \n    | ^^^^^^^^\n195 |         Args:\n196 |             transfers: List of transfer specifications, each containing:\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:202:1\n    |\n200 |                 - custom_updates: Additional updates (optional)\n201 |             uow: Unit of work for database operations\n202 |             \n    | ^^^^^^^^^^^^\n203 |         Returns:\n204 |             Dictionary with batch operation results\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:213:1\n    |\n211 |             \"status\": \"completed\"\n212 |         }\n213 |         \n    | ^^^^^^^^\n214 |         for transfer_spec in transfers:\n215 |             try:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:220:1\n    |\n218 |                 preserve_existing = transfer_spec.get(\"preserve_existing\", True)\n219 |                 custom_updates = transfer_spec.get(\"custom_updates\")\n220 |                 \n    | ^^^^^^^^^^^^^^^^\n221 |                 transfer_result = await self.transfer_form_response_to_client(\n222 |                     client_id=client_id,\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:228:1\n    |\n226 |                     custom_updates=custom_updates\n227 |                 )\n228 |                 \n    | ^^^^^^^^^^^^^^^^\n229 |                 if transfer_result[\"status\"] == \"success\":\n230 |                     results[\"successful_transfers\"] += 1\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:233:1\n    |\n231 |                 else:\n232 |                     results[\"failed_transfers\"] += 1\n233 |                 \n    | ^^^^^^^^^^^^^^^^\n234 |                 results[\"results\"].append(transfer_result)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:235:1\n    |\n234 |                 results[\"results\"].append(transfer_result)\n235 |                 \n    | ^^^^^^^^^^^^^^^^\n236 |             except Exception as e:\n237 |                 results[\"failed_transfers\"] += 1\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:245:1\n    |\n243 |                     \"error_type\": type(e).__name__\n244 |                 })\n245 |         \n    | ^^^^^^^^\n246 |         return results\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:247:1\n    |\n246 |         return results\n247 |     \n    | ^^^^\n248 |     def _analyze_changes(self, current_client, proposed_params: Dict[str, Any]) -> Dict[str, Any]:\n249 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:248:65\n    |\n246 |         return results\n247 |     \n248 |     def _analyze_changes(self, current_client, proposed_params: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                                 ^^^^\n249 |         \"\"\"\n250 |         Analyze what changes would be made during transfer.\n    |\nhelp: Replace with `dict`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:248:84\n    |\n246 |         return results\n247 |     \n248 |     def _analyze_changes(self, current_client, proposed_params: Dict[str, Any]) -> Dict[str, Any]:\n    |                                                                                    ^^^^\n249 |         \"\"\"\n250 |         Analyze what changes would be made during transfer.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:251:1\n    |\n249 |         \"\"\"\n250 |         Analyze what changes would be made during transfer.\n251 |         \n    | ^^^^^^^^\n252 |         Args:\n253 |             current_client: Current client entity\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:255:1\n    |\n253 |             current_client: Current client entity\n254 |             proposed_params: Proposed update parameters from form mapping\n255 |             \n    | ^^^^^^^^^^^^\n256 |         Returns:\n257 |             Dictionary describing the changes that would be made\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:267:1\n    |\n265 |             \"total_field_updates\": 0\n266 |         }\n267 |         \n    | ^^^^^^^^\n268 |         # Analyze profile changes\n269 |         if proposed_params.get(\"profile\"):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:281:1\n    |\n279 |                     changes[\"profile_changes\"].append(f\"Age: {current_client.profile.age} \u2192 {proposed_profile.age}\")\n280 |                     changes[\"total_field_updates\"] += 1\n281 |         \n    | ^^^^^^^^\n282 |         # Analyze contact info changes\n283 |         if proposed_params.get(\"contact_info\"):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:292:1\n    |\n290 | \u2026                 changes[\"contact_info_changes\"].append(f\"Email: '{current_client.contact_info.email}' \u2192 '{proposed_contact.email}'\")\n291 | \u2026                 changes[\"total_field_updates\"] += 1\n292 | \u2026     \n    ^^^^^^^^\n293 | \u2026     # Analyze address changes\n294 | \u2026     if proposed_params.get(\"address\"):\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:303:1\n    |\n301 |                     changes[\"address_changes\"].append(f\"City: '{current_client.address.city}' \u2192 '{proposed_address.city}'\")\n302 |                     changes[\"total_field_updates\"] += 1\n303 |         \n    | ^^^^^^^^\n304 |         # Analyze notes and onboarding data\n305 |         if proposed_params.get(\"notes\") and proposed_params[\"notes\"] != current_client.notes:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:308:1\n    |\n306 |             changes[\"notes_changes\"] = True\n307 |             changes[\"total_field_updates\"] += 1\n308 |             \n    | ^^^^^^^^^^^^\n309 |         if proposed_params.get(\"onboarding_data\") and proposed_params[\"onboarding_data\"] != current_client.onboarding_data:\n310 |             changes[\"onboarding_data_changes\"] = True\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:312:1\n    |\n310 |             changes[\"onboarding_data_changes\"] = True\n311 |             changes[\"total_field_updates\"] += 1\n312 |         \n    | ^^^^^^^^\n313 |         return changes\n    |\nhelp: Remove whitespace from blank line\n\nW292 [*] No newline at end of file\n   --> src/contexts/recipes_catalog/core/services/client/form_response_transfer.py:313:23\n    |\n311 |             changes[\"total_field_updates\"] += 1\n312 |         \n313 |         return changes\n    |                       ^\n    |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/recipes_catalog/core/services/meal/command_handlers/__init__.py:1:1\n   |\n 1 | / from .copy_meal import copy_meal_handler\n 2 | | from .create_meal import create_meal_handler\n 3 | | from .delete_meal import delete_meal_handler\n 4 | | from .update_meal import update_meal_handler\n 5 | | from .copy_recipe import copy_recipe_handler\n 6 | | from .create_recipe import create_recipe_handler\n 7 | | from .delete_recipe import delete_recipe_handler\n 8 | | from .update_recipe import update_recipe_handler\n 9 | | from .rate_recipe import rate_recipe_handler\n   | |____________________________________________^\n10 |\n11 |   __all__ = [\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/copy_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.copy_recipe import CopyRecipe\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/create_meal.py:1:1\n  |\n1 | / from attrs import asdict\n2 | |\n3 | | from src.contexts.recipes_catalog.core.domain.meal.commands.create_meal import CreateMeal\n4 | | from src.contexts.recipes_catalog.core.domain.meal.root_aggregate.meal import Meal\n5 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n6 | | from src.logging.logger import logger\n  | |_____________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/create_recipe.py:1:1\n  |\n1 | / from attrs import asdict\n2 | |\n3 | | from src.contexts.recipes_catalog.core.domain.meal.commands.create_recipe import CreateRecipe\n4 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/delete_meal.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.delete_meal import DeleteMeal\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/delete_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.delete_recipe import DeleteRecipe\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/rate_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.rate_recipe import RateRecipe\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nW291 [*] Trailing whitespace\n  --> src/contexts/recipes_catalog/core/services/meal/command_handlers/rate_recipe.py:16:27\n   |\n14 |         )\n15 |         await uow.meals.persist(meal)\n16 |         await uow.commit() \n   |                           ^\n   |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n  --> src/contexts/recipes_catalog/core/services/meal/command_handlers/rate_recipe.py:16:28\n   |\n14 |         )\n15 |         await uow.meals.persist(meal)\n16 |         await uow.commit() \n   |                            ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/update_meal.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.update_meal import UpdateMeal\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n3 | | from src.logging.logger import logger\n  | |_____________________________________^\n4 |\n5 |   async def update_meal_handler(cmd: UpdateMeal, uow: UnitOfWork) -> None:\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/command_handlers/update_recipe.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.meal.commands.update_recipe import UpdateRecipe\n2 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n3 | | from src.logging.logger import logger\n  | |_____________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/event_handlers/__init__.py:1:1\n  |\n1 | / from .updated_attr_on_meal_that_reflect_on_menu import update_menu_meals\n2 | | from .meal_deleted import remove_meals_from_menu\n  | |________________________________________________^\n3 |\n4 |   __all__ = [\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/recipes_catalog/core/services/meal/event_handlers/__init__.py:7:2\n  |\n5 |     \"update_menu_meals\",\n6 |     \"remove_meals_from_menu\",\n7 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/event_handlers/meal_deleted.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.entities.menu import Menu\n2 | | from src.contexts.recipes_catalog.core.domain.meal.events.meal_deleted import MealDeleted\n3 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n  | |_____________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/meal/event_handlers/updated_attr_on_meal_that_reflect_on_menu.py:1:1\n  |\n1 | / from src.contexts.recipes_catalog.core.domain.client.value_objects.menu_meal import MenuMeal\n2 | | from src.contexts.recipes_catalog.core.domain.meal.events.updated_attr_that_reflect_on_menu import UpdatedAttrOnMealThatReflectOnMenu\n3 | | from src.contexts.recipes_catalog.core.services.uow import UnitOfWork\n4 | | from src.logging.logger import logger\n  | |_____________________________________^\n5 |\n6 |   async def update_menu_meals(\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/recipes_catalog/core/services/uow.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from src.contexts.recipes_catalog.core.adapters.client.repositories.client_repository import ClientRepo\n4 | | from src.contexts.recipes_catalog.core.adapters.client.repositories.menu_repository import MenuRepo\n5 | | from src.contexts.recipes_catalog.core.adapters.meal.repositories.meal_repository import MealRepo\n6 | | from src.contexts.recipes_catalog.core.adapters.meal.repositories.recipe_repository import RecipeRepo\n7 | | from src.contexts.seedwork.shared.services.uow import \\\n8 | |     UnitOfWork as SeedUnitOfWork\n9 | | from src.contexts.shared_kernel.adapters.repositories.tags.tag_repository import TagRepo\n  | |________________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/seedwork/shared/adapters/ORM/mappers/mapper.py:1:1\n  |\n1 | / from typing import Protocol, TypeVar\n2 | |\n3 | | from sqlalchemy.ext.asyncio import AsyncSession\n4 | |\n5 | | from src.contexts.seedwork.shared.domain.entity import Entity\n6 | | from src.db.base import SaBase\n  | |______________________________^\n7 |\n8 |   E = TypeVar(\"E\", bound=Entity)\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/seedwork/shared/adapters/api_schemas/base_api_fields.py:1:1\n  |\n1 | / from datetime import UTC, datetime\n2 | | from typing import Annotated\n3 | |\n4 | | from pydantic import AfterValidator, BeforeValidator, Field, HttpUrl\n5 | |\n6 | | from src.contexts.seedwork.shared.adapters.api_schemas import validators\n  | |________________________________________________________________________^\n7 |\n8 |   # ID fields\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/api_schemas/base_api_model.py:1:1\n   |\n 1 | / from datetime import datetime\n 2 | | from typing import Annotated, Any, ClassVar, Generic, Self, TypeVar\n 3 | |\n 4 | | from pydantic import BaseModel, BeforeValidator, ConfigDict, Field\n 5 | |\n 6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 7 | |     UUIDIdRequired,\n 8 | | )\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.type_convertion_util import (\n10 | |     TypeConversionUtility,\n11 | | )\n12 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n13 | | from src.contexts.seedwork.shared.domain.entity import Entity\n14 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n15 | | from src.db.base import SaBase\n   | |______________________________^\n16 |\n17 |   MODEL_CONFIG = ConfigDict(\n   |\nhelp: Organize imports\n\nUP046 Generic class `BaseApiCommand` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/api_schemas/base_api_model.py:78:33\n   |\n78 | class BaseApiCommand(BaseModel, Generic[C]):\n   |                                 ^^^^^^^^^^\n79 |     \"\"\"Enhanced base class for command schemas with comprehensive validation and\n80 |     utilities.\n   |\nhelp: Use type parameters\n\nUP046 Generic class `BaseApiModel` uses `Generic` subclass instead of type parameters\n   --> src/contexts/seedwork/shared/adapters/api_schemas/base_api_model.py:158:31\n    |\n158 | class BaseApiModel(BaseModel, Generic[D, S]):\n    |                               ^^^^^^^^^^^^^\n159 |     \"\"\"Enhanced base class for all API schemas with comprehensive validation\n160 |     and utilities.\n    |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/api_schemas/validators.py:1:1\n   |\n 1 | / import re\n 2 | | from datetime import UTC, date, datetime\n 3 | | from typing import Any\n 4 | | from uuid import UUID\n 5 | |\n 6 | | from pydantic import HttpUrl\n 7 | |\n 8 | | from src.contexts.shared_kernel.domain.enums import Privacy\n   | |___________________________________________________________^\n 9 |\n10 |   # Constants for validation limits\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/api_schemas/value_objects/api_seed_role.py:1:1\n   |\n 1 | / from abc import ABC, abstractmethod\n 2 | | from typing import Annotated, Any, Generic, TypeVar\n 3 | |\n 4 | | from pydantic import AfterValidator, Field\n 5 | |\n 6 | | from src.contexts.iam.core.adapters.ORM.sa_models.role_sa_model import RoleSaModel\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 8 | |     SanitizedText,\n 9 | | )\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n11 | |     BaseApiValueObject,\n12 | | )\n13 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n14 | |     validate_role_name_format,\n15 | | )\n16 | | from src.contexts.seedwork.shared.domain.value_objects.role import SeedRole\n   | |___________________________________________________________________________^\n17 |\n18 |   D_ROLE = TypeVar(\"D_ROLE\", bound=SeedRole)\n   |\nhelp: Organize imports\n\nUP046 Generic class `ApiSeedRole` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/api_schemas/value_objects/api_seed_role.py:25:5\n   |\n23 | class ApiSeedRole(\n24 |     BaseApiValueObject[D_ROLE, S_ROLE],\n25 |     Generic[API_SEED_ROLE, D_ROLE, S_ROLE],\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n26 |     ABC,\n27 | ):\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/api_schemas/value_objects/api_seed_user.py:1:1\n   |\n 1 | / from abc import ABC, abstractmethod\n 2 | | from typing import Annotated, Any, Generic, TypeVar\n 3 | |\n 4 | | from pydantic import Field\n 5 | |\n 6 | | from src.contexts.iam.core.adapters.ORM.sa_models.user_sa_model import UserSaModel\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 8 | |     UUIDIdRequired,\n 9 | | )\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n11 | |     BaseApiValueObject,\n12 | | )\n13 | | from src.contexts.seedwork.shared.adapters.api_schemas.value_objects import (\n14 | |     ApiSeedRole,\n15 | | )\n16 | | from src.contexts.seedwork.shared.domain.value_objects.user import SeedUser\n   | |___________________________________________________________________________^\n17 |\n18 |   D_USER = TypeVar(\"D_USER\", bound=SeedUser)\n   |\nhelp: Organize imports\n\nUP046 Generic class `ApiSeedUser` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/api_schemas/value_objects/api_seed_user.py:26:5\n   |\n24 | class ApiSeedUser(\n25 |     BaseApiValueObject[D_USER, S_USER],\n26 |     Generic[API_SEED_USER, API_SEED_ROLE, D_USER, S_USER],\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     ABC,\n28 | ):\n   |\nhelp: Use type parameters\n\nUP046 Generic class `RepositoryError` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/exceptions/repo_exceptions.py:21:23\n   |\n21 | class RepositoryError(Generic[R], Exception):\n   |                       ^^^^^^^^^^\n22 |     def __init__(self, message: str, entity_id: str, repository: R) -> None:\n23 |         super().__init__(message)\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/filter_validator.py:1:1\n   |\n 1 | / from typing import Any\n 2 | |\n 3 | | from sqlalchemy.inspection import inspect as sa_inspect\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.repositories.filter_mapper import (\n 6 | |     FilterColumnMapper,\n 7 | | )\n 8 | | from src.contexts.seedwork.shared.adapters.repositories.repository_exceptions import (\n 9 | |     FilterValidationError,\n10 | | )\n   | |_^\n   |\nhelp: Organize imports\n\nUP046 Generic class `BaseIAMProvider` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/internal_providers/base_iam_provider.py:17:23\n   |\n17 | class BaseIAMProvider(Generic[TApiUser]):\n   |                       ^^^^^^^^^^^^^^^^^\n18 |     \"\"\"\n19 |     Base class for IAM providers that abstracts common logic across different contexts.\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/filter_mapper.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from typing import TYPE_CHECKING, Annotated, Generic, TypeVar\n 4 | |\n 5 | | from attrs import define, field\n 6 | |\n 7 | | from src.contexts.seedwork.shared.domain.entity import Entity\n 8 | | from src.db.base import SaBase\n   | |______________________________^\n 9 |\n10 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nUP046 Generic class `FilterColumnMapper` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/repositories/filter_mapper.py:18:26\n   |\n17 | @define\n18 | class FilterColumnMapper(Generic[E, S]):\n   |                          ^^^^^^^^^^^^^\n19 |     \"\"\"\n20 |     A class used to map filter keys to SQLAlchemy model columns\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/join_manager.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from typing import TYPE_CHECKING, Generic, TypeVar\n 4 | |\n 5 | | from attrs import define, field\n 6 | |\n 7 | | from src.contexts.seedwork.shared.domain.entity import Entity\n 8 | | from src.db.base import SaBase\n 9 | | from src.logging.logger import logger\n   | |_____________________________________^\n10 |\n11 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nUP046 Generic class `JoinManager` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/repositories/join_manager.py:20:19\n   |\n19 | @define\n20 | class JoinManager(Generic[E, S]):\n   |                   ^^^^^^^^^^^^^\n21 |     \"\"\"\n22 |     Manages table joins for SQLAlchemy query statements.\n   |\nhelp: Use type parameters\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/seedwork/shared/adapters/repositories/protocols.py:13:93\n   |\n11 | if TYPE_CHECKING:\n12 |     from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n13 |     from src.contexts.seedwork.shared.adapters.repositories.sa_generic_repository import (  # noqa: E501\n   |                                                                                             ^^^^^^^^^^^^\n14 |         SaGenericRepository,\n15 |     )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/query_builder.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from typing import TYPE_CHECKING, Any, Generic, TypeVar\n 4 | |\n 5 | | from sqlalchemy import ColumnElement, Select, nulls_last, select\n 6 | |\n 7 | | from src.contexts.seedwork.shared.adapters.repositories.filter_operators import (\n 8 | |     FilterOperator,\n 9 | | )\n10 | | from src.contexts.seedwork.shared.domain.entity import Entity\n11 | | from src.db.base import SaBase\n   | |______________________________^\n12 |\n13 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/query_builder.py:15:5\n   |\n13 |   if TYPE_CHECKING:\n14 |\n15 | /     from sqlalchemy.ext.asyncio import AsyncSession\n16 | |\n17 | |     from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n18 | |     from src.contexts.seedwork.shared.adapters.repositories.filter_operators import (\n19 | |         FilterOperator,\n20 | |     )\n   | |_____^\n21 |\n22 |   # Type variables with proper bounds\n   |\nhelp: Organize imports\n\nUP046 Generic class `QueryBuilder` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/repositories/query_builder.py:27:20\n   |\n27 | class QueryBuilder(Generic[E, S]):\n   |                    ^^^^^^^^^^^^^\n28 |     \"\"\"\n29 |     A generic query builder for constructing SQLAlchemy Select statements.\n   |\nhelp: Use type parameters\n\nUP046 Generic class `RepositoryError` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_exceptions.py:25:23\n   |\n25 | class RepositoryError(Generic[R], Exception):\n   |                       ^^^^^^^^^^\n26 |     \"\"\"\n27 |     Enhanced base exception class for repository operations.\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:8:1\n   |\n 6 |   \"\"\"\n 7 |\n 8 | / from __future__ import annotations\n 9 | | import uuid\n10 | | import time\n11 | | import structlog\n12 | | from contextlib import asynccontextmanager\n13 | | from typing import Any, Dict, Optional, AsyncGenerator\n14 | | from datetime import datetime, timezone\n15 | | import os\n   | |_________^\n16 |\n17 |   try:\n   |\nhelp: Organize imports\n\nUP035 [*] Import from `collections.abc` instead: `AsyncGenerator`\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:13:1\n   |\n11 | import structlog\n12 | from contextlib import asynccontextmanager\n13 | from typing import Any, Dict, Optional, AsyncGenerator\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from datetime import datetime, timezone\n15 | import os\n   |\nhelp: Import from `collections.abc`\n\nUP035 `typing.Dict` is deprecated, use `dict` instead\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:13:1\n   |\n11 | import structlog\n12 | from contextlib import asynccontextmanager\n13 | from typing import Any, Dict, Optional, AsyncGenerator\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from datetime import datetime, timezone\n15 | import os\n   |\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:29:1\n   |\n27 |     \"\"\"\n28 |     Enhanced repository logger using structlog for structured logging.\n29 |     \n   | ^^^^\n30 |     Provides correlation ID generation, context management, performance tracking,\n31 |     and integration with existing logging infrastructure.\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:32:1\n   |\n30 |     Provides correlation ID generation, context management, performance tracking,\n31 |     and integration with existing logging infrastructure.\n32 |     \n   | ^^^^\n33 |     Features:\n34 |     - Structured logging with correlation ID tracking\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:41:1\n   |\n39 |     - Debug logging for SQL query construction\n40 |     \"\"\"\n41 |     \n   | ^^^^\n42 |     def __init__(self, logger_name: str = \"repository\", correlation_id: Optional[str] = None):\n43 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:42:73\n   |\n40 |     \"\"\"\n41 |     \n42 |     def __init__(self, logger_name: str = \"repository\", correlation_id: Optional[str] = None):\n   |                                                                         ^^^^^^^^^^^^^\n43 |         \"\"\"\n44 |         Initialize repository logger with structlog.\n   |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:45:1\n   |\n43 |         \"\"\"\n44 |         Initialize repository logger with structlog.\n45 |         \n   | ^^^^^^^^\n46 |         Args:\n47 |             logger_name: Name for the logger instance\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:52:1\n   |\n50 |         # Ensure structlog is configured\n51 |         StructlogFactory.configure()\n52 |         \n   | ^^^^^^^^\n53 |         self.logger = structlog.get_logger(logger_name)\n54 |         self.correlation_id = correlation_id or uuid.uuid4().hex[:8]\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:56:1\n   |\n54 |         self.correlation_id = correlation_id or uuid.uuid4().hex[:8]\n55 |         self.logger_name = logger_name\n56 |         \n   | ^^^^^^^^\n57 |         # Bind correlation_id to all log messages from this instance\n58 |         self.logger = self.logger.bind(correlation_id=self.correlation_id)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:59:1\n   |\n57 |         # Bind correlation_id to all log messages from this instance\n58 |         self.logger = self.logger.bind(correlation_id=self.correlation_id)\n59 |         \n   | ^^^^^^^^\n60 |         # Smart debug logging configuration\n61 |         self.debug_enabled = self._should_debug_be_enabled()\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:63:1\n   |\n61 |         self.debug_enabled = self._should_debug_be_enabled()\n62 |         self.verbose_performance = os.getenv('VERBOSE_PERFORMANCE', 'false').lower() == 'true'\n63 |     \n   | ^^^^\n64 |     def _should_debug_be_enabled(self) -> bool:\n65 |         \"\"\"Determine if debug logging should be enabled based on environment\"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:69:1\n   |\n67 |         if os.getenv('REPOSITORY_DEBUG', 'false').lower() == 'true':\n68 |             return True\n69 |             \n   | ^^^^^^^^^^^^\n70 |         # Check log level settings\n71 |         log_level = os.getenv('LOG_LEVEL', 'INFO').upper()\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:73:1\n   |\n71 |         log_level = os.getenv('LOG_LEVEL', 'INFO').upper()\n72 |         repo_log_level = os.getenv('REPOSITORY_LOG_LEVEL', log_level).upper()\n73 |         \n   | ^^^^^^^^\n74 |         return repo_log_level == 'DEBUG'\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:75:1\n   |\n74 |         return repo_log_level == 'DEBUG'\n75 |     \n   | ^^^^\n76 |     def debug_conditional(self, message: str, context: str = \"general\", **kwargs):\n77 |         \"\"\"\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:79:1\n   |\n77 |         \"\"\"\n78 |         Conditional debug logging that can be controlled via environment variables.\n79 |         \n   | ^^^^^^^^\n80 |         This allows you to keep debug statements in code but only see them when needed.\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:81:1\n   |\n80 |         This allows you to keep debug statements in code but only see them when needed.\n81 |         \n   | ^^^^^^^^\n82 |         Args:\n83 |             message: Debug message\n   |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:86:1\n   |\n84 |             context: Context/component name (e.g., \"filters\", \"sql\", \"performance\")\n85 |             **kwargs: Additional structured data\n86 |             \n   | ^^^^^^^^^^^^\n87 |         Environment Controls:\n88 |             REPOSITORY_DEBUG=true - Enable all repository debug logging\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:96:1\n   |\n94 |             self.logger.debug(f\"[{context}] {message}\", **kwargs)\n95 |             return\n96 |             \n   | ^^^^^^^^^^^^\n97 |         # Check context-specific debug settings\n98 |         context_enabled = self._is_context_debug_enabled(context)\n   |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:101:1\n    |\n 99 |         if context_enabled:\n100 |             self.logger.debug(f\"[{context}] {message}\", **kwargs)\n101 |     \n    | ^^^^\n102 |     def _is_context_debug_enabled(self, context: str) -> bool:\n103 |         \"\"\"Check if debug logging is enabled for a specific context\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:108:1\n    |\n106 |         if os.getenv(context_var, 'false').lower() == 'true':\n107 |             return True\n108 |             \n    | ^^^^^^^^^^^^\n109 |         # Check DEBUG_CONTEXTS list (e.g., DEBUG_CONTEXTS=filters,sql,joins)\n110 |         debug_contexts = os.getenv('DEBUG_CONTEXTS', '').lower().split(',')\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:112:1\n    |\n110 |         debug_contexts = os.getenv('DEBUG_CONTEXTS', '').lower().split(',')\n111 |         debug_contexts = [ctx.strip() for ctx in debug_contexts if ctx.strip()]\n112 |         \n    | ^^^^^^^^\n113 |         return context.lower() in debug_contexts or 'all' in debug_contexts\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:114:1\n    |\n113 |         return context.lower() in debug_contexts or 'all' in debug_contexts\n114 |     \n    | ^^^^\n115 |     def debug_query_step(self, step: str, message: str, **kwargs):\n116 |         \"\"\"Debug logging specifically for query execution steps\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:118:1\n    |\n116 |         \"\"\"Debug logging specifically for query execution steps\"\"\"\n117 |         self.debug_conditional(message, context=\"query_steps\", step=step, **kwargs)\n118 |     \n    | ^^^^\n119 |     def debug_filter_operation(self, message: str, **kwargs):\n120 |         \"\"\"Debug logging specifically for filter operations\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:122:1\n    |\n120 |         \"\"\"Debug logging specifically for filter operations\"\"\"\n121 |         self.debug_conditional(message, context=\"filters\", **kwargs)\n122 |     \n    | ^^^^\n123 |     def debug_sql_construction(self, message: str, **kwargs):\n124 |         \"\"\"Debug logging specifically for SQL construction\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:126:1\n    |\n124 |         \"\"\"Debug logging specifically for SQL construction\"\"\"\n125 |         self.debug_conditional(message, context=\"sql\", **kwargs)\n126 |     \n    | ^^^^\n127 |     def debug_join_operation(self, message: str, **kwargs):\n128 |         \"\"\"Debug logging specifically for join operations\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:130:1\n    |\n128 |         \"\"\"Debug logging specifically for join operations\"\"\"\n129 |         self.debug_conditional(message, context=\"joins\", **kwargs)\n130 |     \n    | ^^^^\n131 |     def debug_performance_detail(self, message: str, **kwargs):\n132 |         \"\"\"Detailed performance debug logging (can be very verbose)\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:135:1\n    |\n133 |         if self.verbose_performance:\n134 |             self.debug_conditional(message, context=\"performance_detail\", **kwargs)\n135 |     \n    | ^^^^\n136 |     @classmethod\n137 |     def create_logger(cls, repository_name: str) -> \"RepositoryLogger\":\n    |\nhelp: Remove whitespace from blank line\n\nUP037 [*] Remove quotes from type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:137:53\n    |\n136 |     @classmethod\n137 |     def create_logger(cls, repository_name: str) -> \"RepositoryLogger\":\n    |                                                     ^^^^^^^^^^^^^^^^^^\n138 |         \"\"\"\n139 |         Create a logger instance for a specific repository.\n    |\nhelp: Remove quotes\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:140:1\n    |\n138 |         \"\"\"\n139 |         Create a logger instance for a specific repository.\n140 |         \n    | ^^^^^^^^\n141 |         Args:\n142 |             repository_name: Name of the repository (e.g., \"ProductRepo\", \"MealRepo\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:143:1\n    |\n141 |         Args:\n142 |             repository_name: Name of the repository (e.g., \"ProductRepo\", \"MealRepo\")\n143 |             \n    | ^^^^^^^^^^^^\n144 |         Returns:\n145 |             RepositoryLogger instance with repository-specific context\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:153:1\n    |\n151 |         elif clean_name.endswith(\"repo\"):\n152 |             clean_name = clean_name[:-4]   # Remove \"repo\"\n153 |         \n    | ^^^^^^^^\n154 |         logger_name = f\"repository.{clean_name}\"\n155 |         return cls(logger_name)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:156:1\n    |\n154 |         logger_name = f\"repository.{clean_name}\"\n155 |         return cls(logger_name)\n156 |     \n    | ^^^^\n157 |     def with_correlation_id(self, correlation_id: str) -> \"RepositoryLogger\":\n158 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP037 [*] Remove quotes from type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:157:59\n    |\n155 |         return cls(logger_name)\n156 |     \n157 |     def with_correlation_id(self, correlation_id: str) -> \"RepositoryLogger\":\n    |                                                           ^^^^^^^^^^^^^^^^^^\n158 |         \"\"\"\n159 |         Create a new logger instance with a specific correlation ID.\n    |\nhelp: Remove quotes\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:160:1\n    |\n158 |         \"\"\"\n159 |         Create a new logger instance with a specific correlation ID.\n160 |         \n    | ^^^^^^^^\n161 |         Args:\n162 |             correlation_id: Correlation ID to use for tracking\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:163:1\n    |\n161 |         Args:\n162 |             correlation_id: Correlation ID to use for tracking\n163 |             \n    | ^^^^^^^^^^^^\n164 |         Returns:\n165 |             New RepositoryLogger instance with the specified correlation ID\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:168:1\n    |\n166 |         \"\"\"\n167 |         return RepositoryLogger(self.logger_name, correlation_id)\n168 |     \n    | ^^^^\n169 |     @asynccontextmanager\n170 |     async def track_query(\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:171:14\n    |\n169 |     @asynccontextmanager\n170 |     async def track_query(\n171 |         self, \n    |              ^\n172 |         operation: str, \n173 |         **context: Any\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:172:24\n    |\n170 |     async def track_query(\n171 |         self, \n172 |         operation: str, \n    |                        ^\n173 |         **context: Any\n174 |     ) -> AsyncGenerator[Dict[str, Any], None]:\n    |\nhelp: Remove trailing whitespace\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:174:25\n    |\n172 |         operation: str, \n173 |         **context: Any\n174 |     ) -> AsyncGenerator[Dict[str, Any], None]:\n    |                         ^^^^\n175 |         \"\"\"\n176 |         Context manager for tracking query execution time and context.\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:177:1\n    |\n175 |         \"\"\"\n176 |         Context manager for tracking query execution time and context.\n177 |         \n    | ^^^^^^^^\n178 |         Args:\n179 |             operation: Operation being performed (e.g., \"query\", \"save\", \"delete\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:181:1\n    |\n179 |             operation: Operation being performed (e.g., \"query\", \"save\", \"delete\")\n180 |             **context: Additional context to include in logging\n181 |             \n    | ^^^^^^^^^^^^\n182 |         Yields:\n183 |             Dictionary that can be updated with additional context during execution\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:186:28\n    |\n184 |         \"\"\"\n185 |         start_time = time.perf_counter()\n186 |         operation_context: Dict[str, Any] = {\n    |                            ^^^^\n187 |             \"operation\": operation,\n188 |             \"start_time\": datetime.now(timezone.utc).isoformat(),\n    |\nhelp: Replace with `dict`\n\nUP017 [*] Use `datetime.UTC` alias\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:188:40\n    |\n186 |         operation_context: Dict[str, Any] = {\n187 |             \"operation\": operation,\n188 |             \"start_time\": datetime.now(timezone.utc).isoformat(),\n    |                                        ^^^^^^^^^^^^\n189 |             **context\n190 |         }\n    |\nhelp: Convert to `datetime.UTC` alias\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:191:1\n    |\n189 |             **context\n190 |         }\n191 |         \n    | ^^^^^^^^\n192 |         # Set correlation ID in context for this operation\n193 |         token = correlation_id_ctx.set(self.correlation_id)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:194:1\n    |\n192 |         # Set correlation ID in context for this operation\n193 |         token = correlation_id_ctx.set(self.correlation_id)\n194 |         \n    | ^^^^^^^^\n195 |         try:\n196 |             self.logger.debug(\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:201:1\n    |\n199 |                 **context\n200 |             )\n201 |             \n    | ^^^^^^^^^^^^\n202 |             yield operation_context\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:203:1\n    |\n202 |             yield operation_context\n203 |             \n    | ^^^^^^^^^^^^\n204 |             # Calculate execution time\n205 |             execution_time = time.perf_counter() - start_time\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:207:1\n    |\n205 |             execution_time = time.perf_counter() - start_time\n206 |             operation_context[\"execution_time\"] = execution_time\n207 |             \n    | ^^^^^^^^^^^^\n208 |             self.logger.info(\n209 |                 \"Repository operation completed\",\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:214:1\n    |\n212 |                 **context\n213 |             )\n214 |             \n    | ^^^^^^^^^^^^\n215 |             # Check for performance warnings\n216 |             self._check_performance_warnings(operation, execution_time, operation_context)\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:217:1\n    |\n215 |             # Check for performance warnings\n216 |             self._check_performance_warnings(operation, execution_time, operation_context)\n217 |             \n    | ^^^^^^^^^^^^\n218 |         except Exception as e:\n219 |             execution_time = time.perf_counter() - start_time\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:232:1\n    |\n230 |             # Reset correlation ID context\n231 |             correlation_id_ctx.reset(token)\n232 |     \n    | ^^^^\n233 |     def log_filter(\n234 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:234:14\n    |\n233 |     def log_filter(\n234 |         self, \n    |              ^\n235 |         filter_key: str, \n236 |         filter_value: Any, \n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:235:25\n    |\n233 |     def log_filter(\n234 |         self, \n235 |         filter_key: str, \n    |                         ^\n236 |         filter_value: Any, \n237 |         filter_type: str,\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:236:27\n    |\n234 |         self, \n235 |         filter_key: str, \n236 |         filter_value: Any, \n    |                           ^\n237 |         filter_type: str,\n238 |         column_name: Optional[str] = None\n    |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:238:22\n    |\n236 |         filter_value: Any, \n237 |         filter_type: str,\n238 |         column_name: Optional[str] = None\n    |                      ^^^^^^^^^^^^^\n239 |     ) -> None:\n240 |         \"\"\"\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:242:1\n    |\n240 |         \"\"\"\n241 |         Log filter application with context.\n242 |         \n    | ^^^^^^^^\n243 |         Args:\n244 |             filter_key: The filter key being applied (e.g., \"name\", \"created_at_gte\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:257:1\n    |\n255 |             value_type=type(filter_value).__name__\n256 |         )\n257 |     \n    | ^^^^\n258 |     def log_join(\n259 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:259:14\n    |\n258 |     def log_join(\n259 |         self, \n    |              ^\n260 |         join_target: str, \n261 |         join_condition: str,\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:260:26\n    |\n258 |     def log_join(\n259 |         self, \n260 |         join_target: str, \n    |                          ^\n261 |         join_condition: str,\n262 |         join_type: str = \"inner\"\n    |\nhelp: Remove trailing whitespace\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:266:1\n    |\n264 |         \"\"\"\n265 |         Log table join operations.\n266 |         \n    | ^^^^^^^^\n267 |         Args:\n268 |             join_target: Target table/model being joined\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:278:1\n    |\n276 |             join_type=join_type\n277 |         )\n278 |     \n    | ^^^^\n279 |     def log_performance(\n280 |         self, \n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:280:14\n    |\n279 |     def log_performance(\n280 |         self, \n    |              ^\n281 |         query_time: float, \n282 |         result_count: int, \n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:281:27\n    |\n279 |     def log_performance(\n280 |         self, \n281 |         query_time: float, \n    |                           ^\n282 |         result_count: int, \n283 |         memory_usage: Optional[float] = None,\n    |\nhelp: Remove trailing whitespace\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:282:27\n    |\n280 |         self, \n281 |         query_time: float, \n282 |         result_count: int, \n    |                           ^\n283 |         memory_usage: Optional[float] = None,\n284 |         sql_query: Optional[str] = None\n    |\nhelp: Remove trailing whitespace\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:283:23\n    |\n281 |         query_time: float, \n282 |         result_count: int, \n283 |         memory_usage: Optional[float] = None,\n    |                       ^^^^^^^^^^^^^^^\n284 |         sql_query: Optional[str] = None\n285 |     ) -> None:\n    |\nhelp: Convert to `X | None`\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:284:20\n    |\n282 |         result_count: int, \n283 |         memory_usage: Optional[float] = None,\n284 |         sql_query: Optional[str] = None\n    |                    ^^^^^^^^^^^^^\n285 |     ) -> None:\n286 |         \"\"\"\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:288:1\n    |\n286 |         \"\"\"\n287 |         Log performance metrics for repository operations.\n288 |         \n    | ^^^^^^^^\n289 |         Args:\n290 |             query_time: Query execution time in seconds\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:300:1\n    |\n298 |             \"results_per_second\": result_count / query_time if query_time > 0 else 0\n299 |         }\n300 |         \n    | ^^^^^^^^\n301 |         if memory_usage is not None:\n302 |             performance_data[\"memory_usage_mb\"] = memory_usage\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:303:1\n    |\n301 |         if memory_usage is not None:\n302 |             performance_data[\"memory_usage_mb\"] = memory_usage\n303 |         \n    | ^^^^^^^^\n304 |         if sql_query:\n305 |             performance_data[\"sql_query\"] = sql_query\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:306:1\n    |\n304 |         if sql_query:\n305 |             performance_data[\"sql_query\"] = sql_query\n306 |         \n    | ^^^^^^^^\n307 |         # Log at appropriate level based on performance\n308 |         if query_time > 1.0:  # Slow query warning\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:323:1\n    |\n321 |                 **performance_data\n322 |             )\n323 |     \n    | ^^^^\n324 |     def log_sql_construction(\n325 |         self,\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:328:21\n    |\n326 |         step: str,\n327 |         sql_fragment: str,\n328 |         parameters: Optional[Dict[str, Any]] = None\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^\n329 |     ) -> None:\n330 |         \"\"\"\n    |\nhelp: Convert to `X | None`\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:328:30\n    |\n326 |         step: str,\n327 |         sql_fragment: str,\n328 |         parameters: Optional[Dict[str, Any]] = None\n    |                              ^^^^\n329 |     ) -> None:\n330 |         \"\"\"\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:332:1\n    |\n330 |         \"\"\"\n331 |         Create debug logging for SQL query construction steps.\n332 |         \n    | ^^^^^^^^\n333 |         Uses conditional debug logging - only shows when SQL debugging is enabled.\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:334:1\n    |\n333 |         Uses conditional debug logging - only shows when SQL debugging is enabled.\n334 |         \n    | ^^^^^^^^\n335 |         Args:\n336 |             step: Construction step (e.g., \"select\", \"where\", \"join\", \"order_by\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:339:1\n    |\n337 |             sql_fragment: SQL fragment being constructed\n338 |             parameters: Parameter bindings (if any)\n339 |             \n    | ^^^^^^^^^^^^\n340 |         Environment Controls:\n341 |             SQL_DEBUG=true - Enable SQL construction logging\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:345:19\n    |\n343 |             REPOSITORY_DEBUG=true - Enable all repository debug logging\n344 |         \"\"\"\n345 |         log_data: Dict[str, Any] = {\n    |                   ^^^^\n346 |             \"sql_construction_step\": step,\n347 |             \"sql_fragment\": sql_fragment\n    |\nhelp: Replace with `dict`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:349:1\n    |\n347 |             \"sql_fragment\": sql_fragment\n348 |         }\n349 |         \n    | ^^^^^^^^\n350 |         if parameters:\n351 |             log_data[\"parameters\"] = parameters\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:352:1\n    |\n350 |         if parameters:\n351 |             log_data[\"parameters\"] = parameters\n352 |         \n    | ^^^^^^^^\n353 |         self.debug_sql_construction(\n354 |             f\"SQL construction: {step}\",\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:357:1\n    |\n355 |             **log_data\n356 |         )\n357 |     \n    | ^^^^\n358 |     def warn_performance_issue(\n359 |         self,\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:366:1\n    |\n364 |         \"\"\"\n365 |         Log performance warning with context.\n366 |         \n    | ^^^^^^^^\n367 |         Args:\n368 |             issue_type: Type of performance issue\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:377:1\n    |\n375 |             **context\n376 |         )\n377 |     \n    | ^^^^\n378 |     def _check_performance_warnings(\n379 |         self,\n    |\nhelp: Remove whitespace from blank line\n\nUP006 [*] Use `dict` instead of `Dict` for type annotation\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:382:18\n    |\n380 |         operation: str,\n381 |         execution_time: float,\n382 |         context: Dict[str, Any]\n    |                  ^^^^\n383 |     ) -> None:\n384 |         \"\"\"\n    |\nhelp: Replace with `dict`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:386:1\n    |\n384 |         \"\"\"\n385 |         Check for potential performance issues and log warnings.\n386 |         \n    | ^^^^^^^^\n387 |         Args:\n388 |             operation: Operation that was performed\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:400:1\n    |\n398 |                 execution_time=execution_time\n399 |             )\n400 |         \n    | ^^^^^^^^\n401 |         # Large result set warning\n402 |         result_count = context.get(\"result_count\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:410:1\n    |\n408 |                 result_count=result_count\n409 |             )\n410 |         \n    | ^^^^^^^^\n411 |         # Complex join warning\n412 |         join_count = context.get(\"join_count\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:420:1\n    |\n418 |                 join_count=join_count\n419 |             )\n420 |         \n    | ^^^^^^^^\n421 |         # Memory usage warning (if available)\n422 |         if PSUTIL_AVAILABLE:\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:435:1\n    |\n433 |             except (psutil.NoSuchProcess, psutil.AccessDenied):\n434 |                 pass  # Ignore psutil errors\n435 |     \n    | ^^^^\n436 |     def get_memory_usage(self) -> Optional[float]:\n437 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nUP045 [*] Use `X | None` for type annotations\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:436:35\n    |\n434 |                 pass  # Ignore psutil errors\n435 |     \n436 |     def get_memory_usage(self) -> Optional[float]:\n    |                                   ^^^^^^^^^^^^^^^\n437 |         \"\"\"\n438 |         Get current memory usage in MB.\n    |\nhelp: Convert to `X | None`\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:439:1\n    |\n437 |         \"\"\"\n438 |         Get current memory usage in MB.\n439 |         \n    | ^^^^^^^^\n440 |         Returns:\n441 |             Memory usage in MB or None if psutil is not available\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:445:1\n    |\n443 |         if not PSUTIL_AVAILABLE:\n444 |             return None\n445 |         \n    | ^^^^^^^^\n446 |         try:\n447 |             process = psutil.Process()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:451:1\n    |\n449 |         except (psutil.NoSuchProcess, psutil.AccessDenied):\n450 |             return None\n451 |     \n    | ^^^^\n452 |     @classmethod\n453 |     def show_debug_usage_examples(cls):\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:456:1\n    |\n454 |         \"\"\"\n455 |         Print examples of how to control debug logging during development.\n456 |         \n    | ^^^^^^^^\n457 |         Call this method to see available debug controls.\n458 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:461:1\n    |\n459 |         examples = \"\"\"\n460 |         \ud83c\udfaf Repository Debug Logging Control Examples:\n461 |         \n    | ^^^^^^^^\n462 |         # Enable ALL repository debug logging\n463 |         export REPOSITORY_DEBUG=true\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:464:1\n    |\n462 |         # Enable ALL repository debug logging\n463 |         export REPOSITORY_DEBUG=true\n464 |         \n    | ^^^^^^^^\n465 |         # Enable specific components only\n466 |         export DEBUG_CONTEXTS=filters,sql,joins\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:470:1\n    |\n468 |         export SQL_DEBUG=true\n469 |         export JOINS_DEBUG=true\n470 |         \n    | ^^^^^^^^\n471 |         # Enable verbose performance logging\n472 |         export VERBOSE_PERFORMANCE=true\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:473:1\n    |\n471 |         # Enable verbose performance logging\n472 |         export VERBOSE_PERFORMANCE=true\n473 |         \n    | ^^^^^^^^\n474 |         # Common debugging scenarios:\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:475:1\n    |\n474 |         # Common debugging scenarios:\n475 |         \n    | ^^^^^^^^\n476 |         # \ud83d\udd0d Debug filter issues:\n477 |         export DEBUG_CONTEXTS=filters\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:478:1\n    |\n476 |         # \ud83d\udd0d Debug filter issues:\n477 |         export DEBUG_CONTEXTS=filters\n478 |         \n    | ^^^^^^^^\n479 |         # \ud83d\udd0d Debug SQL generation:\n480 |         export DEBUG_CONTEXTS=sql\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:481:1\n    |\n479 |         # \ud83d\udd0d Debug SQL generation:\n480 |         export DEBUG_CONTEXTS=sql\n481 |         \n    | ^^^^^^^^\n482 |         # \ud83d\udd0d Debug join problems:\n483 |         export DEBUG_CONTEXTS=joins\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:484:1\n    |\n482 |         # \ud83d\udd0d Debug join problems:\n483 |         export DEBUG_CONTEXTS=joins\n484 |         \n    | ^^^^^^^^\n485 |         # \ud83d\udd0d Debug query execution steps:\n486 |         export DEBUG_CONTEXTS=query_steps\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:487:1\n    |\n485 |         # \ud83d\udd0d Debug query execution steps:\n486 |         export DEBUG_CONTEXTS=query_steps\n487 |         \n    | ^^^^^^^^\n488 |         # \ud83d\udd0d Debug everything:\n489 |         export DEBUG_CONTEXTS=all\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:490:1\n    |\n488 |         # \ud83d\udd0d Debug everything:\n489 |         export DEBUG_CONTEXTS=all\n490 |         \n    | ^^^^^^^^\n491 |         # \ud83d\udd0d Debug multiple components:\n492 |         export DEBUG_CONTEXTS=filters,sql,performance_detail\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:493:1\n    |\n491 |         # \ud83d\udd0d Debug multiple components:\n492 |         export DEBUG_CONTEXTS=filters,sql,performance_detail\n493 |         \n    | ^^^^^^^^\n494 |         # Turn off all debug logging:\n495 |         unset REPOSITORY_DEBUG DEBUG_CONTEXTS FILTERS_DEBUG SQL_DEBUG JOINS_DEBUG\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:498:1\n    |\n496 |         \"\"\"\n497 |         print(examples)\n498 |     \n    | ^^^^\n499 |     def enable_debug_for_session(self, contexts: list[str]):\n500 |         \"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:502:1\n    |\n500 |         \"\"\"\n501 |         Temporarily enable debug logging for specific contexts in this session.\n502 |         \n    | ^^^^^^^^\n503 |         Args:\n504 |             contexts: List of contexts to enable (e.g., ['filters', 'sql'])\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:509:1\n    |\n507 |         for context in contexts:\n508 |             os.environ[f'{context.upper()}_DEBUG'] = 'true'\n509 |         \n    | ^^^^^^^^\n510 |         self.debug_enabled = self._should_debug_be_enabled()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:511:1\n    |\n510 |         self.debug_enabled = self._should_debug_be_enabled()\n511 |         \n    | ^^^^^^^^\n512 |         self.logger.info(\n513 |             \"Debug logging enabled for session\",\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:517:1\n    |\n515 |             debug_globally_enabled=self.debug_enabled\n516 |         )\n517 |     \n    | ^^^^\n518 |     def disable_debug_for_session(self):\n519 |         \"\"\"Disable all debug logging for this session\"\"\"\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:521:1\n    |\n519 |         \"\"\"Disable all debug logging for this session\"\"\"\n520 |         import os\n521 |         \n    | ^^^^^^^^\n522 |         # Remove context-specific debug settings\n523 |         debug_vars = [k for k in os.environ.keys() if k.endswith('_DEBUG')]\n    |\nhelp: Remove whitespace from blank line\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:523:29\n    |\n522 |         # Remove context-specific debug settings\n523 |         debug_vars = [k for k in os.environ.keys() if k.endswith('_DEBUG')]\n    |                             ^^^^^^^^^^^^^^^^^^^^^^\n524 |         for var in debug_vars:\n525 |             if var != 'REPOSITORY_DEBUG':  # Keep global setting if it was set\n    |\nhelp: Remove `.keys()`\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:527:1\n    |\n525 |             if var != 'REPOSITORY_DEBUG':  # Keep global setting if it was set\n526 |                 os.environ.pop(var, None)\n527 |         \n    | ^^^^^^^^\n528 |         # Update debug status\n529 |         self.debug_enabled = self._should_debug_be_enabled()\n    |\nhelp: Remove whitespace from blank line\n\nW293 [*] Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:530:1\n    |\n528 |         # Update debug status\n529 |         self.debug_enabled = self._should_debug_be_enabled()\n530 |         \n    | ^^^^^^^^\n531 |         self.logger.info(\"Debug logging disabled for session\")\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:537:1\n    |\n535 |     \"\"\"\n536 |     Convenience function to create a repository logger.\n537 |     \n    | ^^^^\n538 |     Args:\n539 |         repository_name: Name of the repository\n    |\nhelp: Remove whitespace from blank line\n\nW293 Blank line contains whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:540:1\n    |\n538 |     Args:\n539 |         repository_name: Name of the repository\n540 |         \n    | ^^^^^^^^\n541 |     Returns:\n542 |         Configured RepositoryLogger instance\n    |\nhelp: Remove whitespace from blank line\n\nW291 [*] Trailing whitespace\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:544:59\n    |\n542 |         Configured RepositoryLogger instance\n543 |     \"\"\"\n544 |     return RepositoryLogger.create_logger(repository_name) \n    |                                                           ^\n    |\nhelp: Remove trailing whitespace\n\nW292 [*] No newline at end of file\n   --> src/contexts/seedwork/shared/adapters/repositories/repository_logger.py:544:60\n    |\n542 |         Configured RepositoryLogger instance\n543 |     \"\"\"\n544 |     return RepositoryLogger.create_logger(repository_name) \n    |                                                            ^\n    |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | import time\n 4 | | import warnings\n 5 | | from typing import TYPE_CHECKING, Any, ClassVar, Generic, TypeVar, Union\n 6 | |\n 7 | | import anyio\n 8 | | from sqlalchemy import ColumnElement, Select, inspect, nulls_last, select\n 9 | | from sqlalchemy.exc import (\n10 | |     DatabaseError,\n11 | |     MultipleResultsFound,\n12 | |     NoResultFound,\n13 | |     SQLAlchemyError,\n14 | | )\n15 | | from sqlalchemy.sql import operators\n16 | |\n17 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n18 | |     EntityNotFoundError,\n19 | |     MultipleEntitiesFoundError,\n20 | | )\n21 | | from src.contexts.seedwork.shared.adapters.filter_validator import FilterValidator\n22 | | from src.contexts.seedwork.shared.adapters.repositories.filter_mapper import (\n23 | |     FilterColumnMapper\n24 | | )\n25 | | from src.contexts.seedwork.shared.adapters.repositories.filter_operators import (\n26 | |     filter_operator_factory,\n27 | |     filter_operator_registry,\n28 | | )\n29 | | from src.contexts.seedwork.shared.adapters.repositories.join_manager import JoinManager\n30 | | from src.contexts.seedwork.shared.adapters.repositories.query_builder import (\n31 | |     QueryBuilder,\n32 | | )\n33 | | from src.contexts.seedwork.shared.adapters.repositories.repository_exceptions import (\n34 | |     EntityMappingError,\n35 | |     FilterValidationError,\n36 | |     JoinError,\n37 | |     RepositoryQueryError,\n38 | | )\n39 | | from src.contexts.seedwork.shared.adapters.repositories.repository_logger import (\n40 | |     RepositoryLogger,\n41 | | )\n42 | | from src.contexts.seedwork.shared.domain.entity import Entity\n43 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n44 | | from src.contexts.seedwork.shared.endpoints.exceptions import BadRequestError\n45 | | from src.db.base import SaBase\n46 | | from src.logging.logger import logger\n   | |_____________________________________^\n47 |\n48 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py:49:5\n   |\n48 |   if TYPE_CHECKING:\n49 | /     from collections.abc import Callable\n50 | |\n51 | |     from sqlalchemy.ext.asyncio import AsyncSession\n52 | |\n53 | |     from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n   | |____________________________________________________________________________________^\n54 |\n55 |   D = TypeVar(\"D\", bound=Union[Entity, ValueObject])\n   |\nhelp: Organize imports\n\nUP007 [*] Use `X | Y` for type annotations\n  --> src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py:55:24\n   |\n53 |     from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n54 |\n55 | D = TypeVar(\"D\", bound=Union[Entity, ValueObject])\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n56 | S = TypeVar(\"S\", bound=SaBase)\n   |\nhelp: Convert to `X | Y`\n\nUP046 Generic class `SaGenericRepository` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py:58:27\n   |\n56 | S = TypeVar(\"S\", bound=SaBase)\n57 |\n58 | class SaGenericRepository(Generic[D, S]):\n   |                           ^^^^^^^^^^^^^\n59 |     \"\"\"\n60 |     This class is a generic repository for handling asynchronous database\n   |\nhelp: Use type parameters\n\nE711 Comparison to `None` should be `cond is None`\n    --> src/contexts/seedwork/shared/adapters/repositories/sa_generic_repository.py:1027:39\n     |\n1026 |                 if operator_name == \"NotInOperator\":\n1027 |                     return (column == None) | (~column.in_(value))\n     |                                       ^^^^\n1028 |\n1029 |                 if operator_name == \"ContainsOperator\":\n     |\nhelp: Replace with `cond is None`\n\nW291 Trailing whitespace\n --> src/contexts/seedwork/shared/adapters/repositories/seedwork_repository.py:8:74\n  |\n7 | - filter_mapper.py: Contains FilterColumnMapper, Filter classes and TypeVars\n8 | - protocols.py: Contains BaseRepository and CompositeRepository protocols  \n  |                                                                          ^^\n9 | - sa_generic_repository.py: Contains the main SaGenericRepository implementation\n  |\nhelp: Remove trailing whitespace\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/repositories/seedwork_repository.py:14:1\n   |\n12 |   \"\"\"\n13 |\n14 | / from __future__ import annotations\n15 | |\n16 | | # Re-export all classes for backward compatibility\n17 | | from .filter_mapper import FilterColumnMapper, Filter, E, S\n18 | | from .protocols import BaseRepository, CompositeRepository\n19 | | from .sa_generic_repository import SaGenericRepository\n   | |______________________________________________________^\n20 |\n21 |   # Export everything that was previously available in this file\n   |\nhelp: Organize imports\n\nRUF022 [*] `__all__` is not sorted\n  --> src/contexts/seedwork/shared/adapters/repositories/seedwork_repository.py:22:11\n   |\n21 |   # Export everything that was previously available in this file\n22 |   __all__ = [\n   |  ___________^\n23 | |     \"FilterColumnMapper\",\n24 | |     \"Filter\", \n25 | |     \"BaseRepository\",\n26 | |     \"CompositeRepository\",\n27 | |     \"SaGenericRepository\",\n28 | |     \"E\",\n29 | |     \"S\",\n30 | | ]\n   | |_^\n   |\nhelp: Apply an isort-style sorting to `__all__`\n\nW291 [*] Trailing whitespace\n  --> src/contexts/seedwork/shared/adapters/repositories/seedwork_repository.py:24:14\n   |\n22 | __all__ = [\n23 |     \"FilterColumnMapper\",\n24 |     \"Filter\", \n   |              ^\n25 |     \"BaseRepository\",\n26 |     \"CompositeRepository\",\n   |\nhelp: Remove trailing whitespace\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/adapters/tag_filter_builder.py:12:1\n   |\n10 |   \"\"\"\n11 |\n12 | / from itertools import groupby\n13 | | from typing import Any, TypeVar\n14 | |\n15 | | from sqlalchemy import ColumnElement, and_, inspect, true\n16 | |\n17 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n18 | |     FilterNotAllowedError,\n19 | | )\n20 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n21 | |     TagSaModel,\n22 | | )\n23 | | from src.db.base import SaBase\n   | |______________________________^\n24 |\n25 |   S = TypeVar(\"S\", bound=SaBase)\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/seedwork/shared/domain/value_objects/role.py:1:1\n  |\n1 | / from attrs import field, frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.enums import Permission\n4 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/domain/value_objects/user.py:1:1\n   |\n 1 | / from typing import Generic, TypeVar\n 2 | |\n 3 | | from attrs import frozen\n 4 | |\n 5 | | from src.contexts.seedwork.shared.domain.enums import Permission\n 6 | | from src.contexts.seedwork.shared.domain.enums import Role as EnumRoles\n 7 | | from src.contexts.seedwork.shared.domain.value_objects.role import SeedRole\n 8 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n   | |______________________________________________________________________________________^\n 9 |\n10 |   R = TypeVar(\"R\", bound=SeedRole)\n   |\nhelp: Organize imports\n\nUP046 Generic class `SeedUser` uses `Generic` subclass instead of type parameters\n  --> src/contexts/seedwork/shared/domain/value_objects/user.py:14:29\n   |\n13 | @frozen(kw_only=True)\n14 | class SeedUser(ValueObject, Generic[R]):\n   |                             ^^^^^^^^^^\n15 |     id: str\n16 |     roles: frozenset[R]\n   |\nhelp: Use type parameters\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/endpoints/decorators/lambda_exception_handler.py:1:1\n   |\n 1 | / import functools\n 2 | | import json\n 3 | | from collections.abc import Callable\n 4 | | from typing import Any\n 5 | |\n 6 | | from pydantic_core import ValidationError\n 7 | |\n 8 | | from src.contexts.seedwork.shared.adapters.exceptions.repo_exceptions import (\n 9 | |     EntityNotFoundError,\n10 | |     MultipleEntitiesFoundError,\n11 | | )\n   | |_^\n12 |\n13 |   # Default CORS headers if none provided\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/seedwork/shared/services/decorators.py:1:1\n  |\n1 | / import functools\n2 | | from inspect import iscoroutinefunction\n3 | |\n4 | | from anyio import get_cancelled_exc_class, move_on_after\n5 | |\n6 | | from src.config.app_config import app_settings\n  | |______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/seedwork/shared/utils.py:1:1\n   |\n 1 | / from collections.abc import Awaitable, Iterable\n 2 | | from datetime import datetime\n 3 | | from typing import Any\n 4 | |\n 5 | | import anyio\n 6 | | from cattrs import Converter\n 7 | | from sqlalchemy import select\n 8 | | from sqlalchemy.exc import NoResultFound\n 9 | | from sqlalchemy.ext.asyncio import AsyncSession\n10 | |\n11 | | from src.db.base import SaBase\n12 | | from src.logging.logger import logger\n   | |_____________________________________^\n13 |\n14 |   converter = Converter()\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/ORM/__init__.py:1:1\n  |\n1 | / from .sa_models import *\n2 | | from .mappers import *\n  | |______________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/shared_kernel/adapters/ORM/__init__.py:8:2\n  |\n6 |     \"sa_models\",\n7 |     \"mappers\",\n8 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/ORM/mappers/nutri_facts_mapper.py:1:1\n   |\n 1 | / from dataclasses import asdict as dataclass_asdict\n 2 | |\n 3 | | from attrs import asdict as attrs_asdict\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n 7 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n 8 | |     NutriFactsSaModel,\n 9 | | )\n10 | | from src.contexts.shared_kernel.domain.value_objects.nutri_facts import NutriFacts\n   | |__________________________________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/ORM/mappers/tag/tag_mapper.py:1:1\n  |\n1 | / from sqlalchemy.ext.asyncio import AsyncSession\n2 | |\n3 | | from src.contexts.seedwork.shared import utils\n4 | | from src.contexts.seedwork.shared.adapters.ORM.mappers.mapper import ModelMapper\n5 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n6 | |     TagSaModel,\n7 | | )\n8 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n  | |___________________________________________________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/shared_kernel/adapters/ORM/sa_models/address_sa_model.py:13:28\n   |\n11 |     state: str | None = None\n12 |     complement: str | None = None\n13 |     note: str | None = None\n   |                            ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/ORM/sa_models/tag/tag_sa_model.py:1:1\n  |\n1 | / from sqlalchemy import Index\n2 | | from sqlalchemy.orm import Mapped, mapped_column\n3 | |\n4 | | from src.db.base import SaBase, SerializerMixin\n  | |_______________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/api_schemas/fields.py:1:1\n  |\n1 | / from typing import Annotated\n2 | |\n3 | | from pydantic import Field\n4 | |\n5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n6 | |     SanitizedText,\n7 | | )\n  | |_^\n8 |\n9 |   TagValue = Annotated[SanitizedText, Field(min_length=1, max_length=100)]\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_address.py:1:1\n   |\n 1 | / from typing import Annotated, Any\n 2 | |\n 3 | | from pydantic import AfterValidator, Field\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 6 | |     SanitizedTextOptional,\n 7 | | )\n 8 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n 9 | |     BaseApiValueObject,\n10 | | )\n11 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n12 | |     validate_optional_text_length,\n13 | | )\n14 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.address_sa_model import (\n15 | |     AddressSaModel,\n16 | | )\n17 | | from src.contexts.shared_kernel.domain.enums import State\n18 | | from src.contexts.shared_kernel.domain.value_objects.address import Address\n19 | | from src.db.base import SaBase\n   | |______________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_contact_info.py:1:1\n   |\n 1 | / from pydantic import Field, field_validator\n 2 | |\n 3 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 4 | |     EmailFieldOptional,\n 5 | |     PhoneFieldOptional,\n 6 | | )\n 7 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n 8 | |     BaseApiValueObject,\n 9 | | )\n10 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n11 | |     validate_email_format,\n12 | |     validate_phone_format,\n13 | | )\n14 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.contact_info_sa_model import (\n15 | |     ContactInfoSaModel,\n16 | | )\n17 | | from src.contexts.shared_kernel.domain.value_objects.contact_info import ContactInfo\n18 | | from src.db.base import SaBase\n   | |______________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_nutri_facts.py:1:1\n   |\n 1 | / from typing import Any, Union\n 2 | |\n 3 | | from pydantic import model_validator\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n 6 | |     BaseApiValueObject,\n 7 | | )\n 8 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_value import (  # noqa: E501\n 9 | |     ApiNutriValue,\n10 | | )\n11 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.nutri_facts_sa_model import (\n12 | |     NutriFactsSaModel,\n13 | | )\n14 | | from src.contexts.shared_kernel.domain.enums import MeasureUnit\n15 | | from src.contexts.shared_kernel.domain.value_objects.nutri_facts import NutriFacts\n16 | | from src.contexts.shared_kernel.domain.value_objects.nutri_value import NutriValue\n17 | | from src.db.base import SaBase\n   | |______________________________^\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_nutri_facts.py:8:94\n   |\n 6 |     BaseApiValueObject,\n 7 | )\n 8 | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.api_nutri_value import (  # noqa: E501\n   |                                                                                              ^^^^^^^^^^^^\n 9 |     ApiNutriValue,\n10 | )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_nutri_value.py:1:1\n   |\n 1 | / from typing import Any, Union\n 2 | |\n 3 | | from pydantic import NonNegativeFloat\n 4 | |\n 5 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n 6 | |     BaseApiValueObject,\n 7 | | )\n 8 | | from src.contexts.shared_kernel.domain.enums import MeasureUnit\n 9 | | from src.contexts.shared_kernel.domain.value_objects.nutri_value import NutriValue\n10 | | from src.db.base import SaBase\n   | |______________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/api_profile.py:1:1\n   |\n 1 | / from datetime import date\n 2 | | from typing import Annotated, Any\n 3 | |\n 4 | | from pydantic import AfterValidator, Field\n 5 | |\n 6 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import (\n 7 | |     SanitizedText,\n 8 | | )\n 9 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import (\n10 | |     BaseApiValueObject,\n11 | | )\n12 | | from src.contexts.seedwork.shared.adapters.api_schemas.validators import (\n13 | |     validate_birthday_reasonable,\n14 | |     validate_sex_options,\n15 | | )\n16 | | from src.contexts.shared_kernel.domain.value_objects.profile import Profile\n17 | | from src.db.base import SaBase\n   | |______________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/pydantic_validators.py:1:1\n  |\n1 | / from typing import Any\n2 | |\n3 | | from pydantic import ValidationInfo\n4 | |\n5 | | from src.contexts.shared_kernel.adapters.api_schemas.value_objects.tag.api_tag import (\n6 | |     ApiTag,\n7 | | )\n  | |_^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/tag/api_tag.py:1:1\n  |\n1 | / from src.contexts.seedwork.shared.adapters.api_schemas.base_api_model import BaseApiValueObject\n2 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n3 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import TagSaModel\n4 | | from src.contexts.seedwork.shared.adapters.api_schemas.base_api_fields import SanitizedText, UUIDIdRequired\n5 | | from pydantic import Field\n  | |__________________________^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n  --> src/contexts/shared_kernel/adapters/api_schemas/value_objects/tag/api_tag.py:42:33\n   |\n40 |     def to_orm_kwargs(self) -> dict:\n41 |         \"\"\"Convert to ORM model kwargs.\"\"\"\n42 |         return self.model_dump()\n   |                                 ^\n   |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/adapters/repositories/tags/tag_repository.py:1:1\n   |\n 1 | / from typing import Any, ClassVar\n 2 | |\n 3 | | from sqlalchemy import Select, Table, delete, select\n 4 | | from sqlalchemy.ext.asyncio import AsyncSession\n 5 | |\n 6 | | from src.contexts.seedwork.shared.adapters.repositories.seedwork_repository import (\n 7 | |     FilterColumnMapper,\n 8 | |     SaGenericRepository,\n 9 | | )\n10 | | from src.contexts.shared_kernel.adapters.ORM.mappers.tag.tag_mapper import TagMapper\n11 | | from src.contexts.shared_kernel.adapters.ORM.sa_models.tag.tag_sa_model import (\n12 | |     TagSaModel,\n13 | | )\n14 | | from src.contexts.shared_kernel.domain.value_objects.tag import Tag\n   | |___________________________________________________________________^\n   |\nhelp: Organize imports\n\nUP039 [*] Unnecessary parentheses after class definition\n  --> src/contexts/shared_kernel/adapters/repositories/tags/tag_repository.py:17:14\n   |\n17 | class TagRepo():\n   |              ^^\n18 |     filter_to_column_mappers: ClassVar[list[FilterColumnMapper]] = [\n19 |         FilterColumnMapper(\n   |\nhelp: Remove parentheses\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/__init__.py:1:1\n  |\n1 | from .value_objects import *\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Organize imports\n\nW292 [*] No newline at end of file\n --> src/contexts/shared_kernel/domain/__init__.py:6:2\n  |\n4 | __all__ = [\n5 |     \"value_objects\",\n6 | ]\n  |  ^\n  |\nhelp: Add trailing newline\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/value_objects/contact_info.py:1:1\n  |\n1 | / from attrs import frozen\n2 | |\n3 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/value_objects/nutri_facts.py:1:1\n  |\n1 | / import inspect\n2 | | from collections.abc import Mapping\n3 | | from typing import Any\n4 | |\n5 | | from attrs import field, frozen, fields\n6 | |\n7 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n8 | | from src.contexts.shared_kernel.domain.enums import MeasureUnit\n9 | | from src.contexts.shared_kernel.domain.value_objects.nutri_value import NutriValue\n  | |__________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/value_objects/nutri_value.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from typing import TYPE_CHECKING\n4 | |\n5 | | from attrs import frozen\n6 | |\n7 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n8 |\n9 |   if TYPE_CHECKING:\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/value_objects/profile.py:1:1\n  |\n1 | / from datetime import date\n2 | |\n3 | | from attrs import frozen\n4 | |\n5 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n --> src/contexts/shared_kernel/domain/value_objects/tag.py:1:1\n  |\n1 | / from __future__ import annotations\n2 | |\n3 | | from attrs import frozen\n4 | |\n5 | | from src.contexts.seedwork.shared.domain.value_objects.value_object import ValueObject\n  | |______________________________________________________________________________________^\n  |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/shared_kernel/middleware/auth/authentication.py:22:108\n   |\n21 | try:\n22 |     from src.contexts.products_catalog.core.adapters.external_providers.iam.api_schemas.api_user import (  # noqa: E501\n   |                                                                                                            ^^^^^^^^^^^^\n23 |         ApiUser as ProductsApiUser,\n24 |     )\n   |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/shared_kernel/middleware/auth/authentication.py:29:107\n   |\n28 | try:\n29 |     from src.contexts.recipes_catalog.core.adapters.external_providers.iam.api_schemas.api_user import (  # noqa: E501\n   |                                                                                                           ^^^^^^^^^^^^\n30 |         ApiUser as RecipesApiUser,\n31 |     )\n   |\nhelp: Remove unused `noqa` directive\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `E501`)\n  --> src/contexts/shared_kernel/middleware/auth/authentication.py:36:109\n   |\n35 | try:\n36 |     from src.contexts.client_onboarding.core.adapters.external_providers.iam.api_schemas.api_user import (  # noqa: E501\n   |                                                                                                             ^^^^^^^^^^^^\n37 |         ApiUser as ClientOnboardingApiUser,\n38 |     )\n   |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/middleware/core/middleware_composer.py:12:1\n   |\n10 |   \"\"\"\n11 |\n12 | / from typing import Any\n13 | |\n14 | | import anyio\n15 | |\n16 | | from src.contexts.shared_kernel.middleware.auth.authentication import (\n17 | |     AuthenticationMiddleware,\n18 | | )\n19 | | from src.contexts.shared_kernel.middleware.core.base_middleware import (\n20 | |     BaseMiddleware,\n21 | |     EndpointHandler,\n22 | | )\n23 | | from src.contexts.shared_kernel.middleware.error_handling.exception_handler import (\n24 | |     ExceptionHandlerMiddleware,\n25 | | )\n26 | | from src.contexts.shared_kernel.middleware.logging.structured_logger import (\n27 | |     StructuredLoggingMiddleware,\n28 | | )\n   | |_^\n29 |\n30 |   MIDDLEWARE_ORDER = {\n   |\nhelp: Organize imports\n\nRUF100 [*] Unused `noqa` directive (non-enabled: `SLF001`)\n   --> src/contexts/shared_kernel/middleware/decorators/async_endpoint_handler.py:106:79\n    |\n104 |             \"decorator_name\": name or handler.__name__,\n105 |         }\n106 |         wrapped_handler._middleware_info = meta  # type: ignore[attr-defined] # noqa: SLF001\n    |                                                                               ^^^^^^^^^^^^^^\n107 |\n108 |         return wrapped_handler\n    |\nhelp: Remove unused `noqa` directive\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/middleware/error_handling/exception_handler.py:13:1\n   |\n11 |   \"\"\"\n12 |\n13 | / import traceback\n14 | |\n15 | | from abc import ABC, abstractmethod\n16 | | from datetime import UTC, datetime\n17 | | from typing import Any\n18 | |\n19 | | from pydantic import ValidationError\n20 | |\n21 | | from src.contexts.shared_kernel.middleware.error_handling.error_response import (\n22 | |     ErrorDetail,\n23 | |     ErrorResponse,\n24 | |     ErrorType,\n25 | | )\n26 | | from src.contexts.shared_kernel.middleware.core.base_middleware import (\n27 | |     BaseMiddleware,\n28 | |     EndpointHandler,\n29 | | )\n30 | | from src.logging.logger import StructlogFactory, correlation_id_ctx\n31 | | from src.logging.logger import logger as standard_logger\n   | |________________________________________________________^\n   |\nhelp: Organize imports\n\nI001 [*] Import block is un-sorted or un-formatted\n  --> src/contexts/shared_kernel/services/messagebus.py:1:1\n   |\n 1 | / from __future__ import annotations\n 2 | |\n 3 | | from functools import partial\n 4 | | from typing import TYPE_CHECKING, Generic, TypeVar\n 5 | |\n 6 | | import anyio\n 7 | |\n 8 | | from src.config.api_config import api_settings\n 9 | | from src.contexts.seedwork.shared.domain.commands.command import Command\n10 | | from src.contexts.seedwork.shared.domain.event import Event\n11 | | from src.contexts.seedwork.shared.services.uow import UnitOfWork\n12 | | from src.logging.logger import logger\n   | |_____________________________________^\n13 |\n14 |   if TYPE_CHECKING:\n   |\nhelp: Organize imports\n\nUP046 Generic class `MessageBus` uses `Generic` subclass instead of type parameters\n  --> src/contexts/shared_kernel/services/messagebus.py:22:18\n   |\n22 | class MessageBus(Generic[U]):\n   |                  ^^^^^^^^^^\n23 |     \"\"\"\n24 |     The message bus is responsible for dispatching commands and events to their\n   |\nhelp: Use type parameters\n\nW292 [*] No newline at end of file\n  --> src/db/database.py:35:42\n   |\n34 | def get_db_session_factory() -> async_sessionmaker[AsyncSession]:\n35 |     return async_db.async_session_factory\n   |                                          ^\n   |\nhelp: Add trailing newline\n\nW292 [*] No newline at end of file\n --> src/db/sa_field_types.py:6:77\n  |\n5 | strpk = Annotated[str, mapped_column(primary_key=True)]\n6 | str_required_idx = Annotated[str, mapped_column(nullable=False, index=True)]\n  |                                                                             ^\n  |\nhelp: Add trailing newline\n\nFound 1550 errors.\n[*] 1217 fixable with the `--fix` option (203 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
    "errors": ""
  },
  "overall_status": {
    "migration_ready": false,
    "completion_percentage": 23.52941176470588,
    "critical_issues": [
      "13 files still use standard logging imports",
      "13 files still use logging.getLogger()",
      "Linting validation failed",
      "Log message quality score is low: 0.00"
    ]
  }
}